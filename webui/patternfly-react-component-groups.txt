Directory structure:
└── patternfly-react-component-groups/
    ├── README.md
    ├── babel.config.js
    ├── cypress.config.ts
    ├── fed-mini-modules.js
    ├── jest.config.js
    ├── jest.setup.js
    ├── LICENSE
    ├── migration.md
    ├── package.json
    ├── renovate.json
    ├── styleMock.js
    ├── tsconfig.json
    ├── .eslintignore
    ├── .eslintrc-md.json
    ├── .eslintrc.json
    ├── .prettierignore
    ├── .prettierrc.json
    ├── config/
    │   ├── globalSetup.js
    │   ├── setupTests.js
    │   └── webpack.cy.config.js
    ├── cypress/
    │   ├── component/
    │   │   ├── Ansible.cy.tsx
    │   │   ├── BulkSelect.cy.tsx
    │   │   ├── CloseButton.cy.tsx
    │   │   ├── ErrorBoundary.cy.tsx
    │   │   ├── ErrorState.cy.tsx
    │   │   ├── LogSnippet.cy.tsx
    │   │   ├── Maintenance.cy.tsx
    │   │   ├── MissingPage.cy.tsx
    │   │   ├── MultiContentCard.cy.tsx
    │   │   ├── NotAuthorized.cy.tsx
    │   │   ├── PageHeader.cy.tsx
    │   │   ├── ResponsiveActions.cy.tsx
    │   │   ├── ServiceCard.cy.tsx
    │   │   ├── Severity.cy.tsx
    │   │   ├── ShortcutGrid.cy.tsx
    │   │   ├── SkeletonTable.cy.tsx
    │   │   ├── SkeletonTableBody.cy.tsx
    │   │   ├── SkeletonTableHead.cy.tsx
    │   │   ├── Status.cy.tsx
    │   │   ├── TagCount.cy.tsx
    │   │   ├── UnavailableContent.cy.tsx
    │   │   └── WarningModal.cy.tsx
    │   ├── e2e/
    │   │   └── CloseButton.spec.cy.ts
    │   ├── fixtures/
    │   │   └── example.json
    │   └── support/
    │       ├── commands.ts
    │       ├── component-index.html
    │       ├── component.ts
    │       ├── e2e.ts
    │       └── tsconfig.json
    ├── packages/
    │   └── module/
    │       ├── generate-fed-package-json.js
    │       ├── generate-index.js
    │       ├── package.json
    │       ├── patternfly-a11y.config.js
    │       ├── release.config.js
    │       ├── tsconfig.cjs.json
    │       ├── tsconfig.json
    │       ├── patternfly-docs/
    │       │   ├── patternfly-docs.config.js
    │       │   ├── patternfly-docs.css.js
    │       │   ├── patternfly-docs.routes.js
    │       │   ├── patternfly-docs.source.js
    │       │   ├── content/
    │       │   │   └── extensions/
    │       │   │       └── component-groups/
    │       │   │           ├── about-component-groups.md
    │       │   │           ├── gallery-data.json
    │       │   │           ├── assets/
    │       │   │           │   └── icons/
    │       │   │           └── examples/
    │       │   │               ├── Ansible/
    │       │   │               │   ├── Ansible.md
    │       │   │               │   ├── AnsibleSupportedExample.tsx
    │       │   │               │   ├── AnsibleTechnologyExample.tsx
    │       │   │               │   └── AnsibleUnsupportedExample.tsx
    │       │   │               ├── BulkSelect/
    │       │   │               │   ├── BulkSelect.md
    │       │   │               │   ├── BulkSelectAllExample.tsx
    │       │   │               │   └── BulkSelectExample.tsx
    │       │   │               ├── CloseButton/
    │       │   │               │   ├── CloseButton.md
    │       │   │               │   └── CloseButtonExample.tsx
    │       │   │               ├── ColumnManagementModal/
    │       │   │               │   ├── ColumnManagementModal.md
    │       │   │               │   └── ColumnManagementModalExample.tsx
    │       │   │               ├── ErrorBoundary/
    │       │   │               │   ├── ErrorBoundary.md
    │       │   │               │   └── ErrorBoundaryExample.tsx
    │       │   │               ├── ErrorState/
    │       │   │               │   ├── ErrorState.md
    │       │   │               │   ├── ErrorStateExample.tsx
    │       │   │               │   ├── ErrorStateExtraProps.tsx
    │       │   │               │   └── ErrorStateFooterExample.tsx
    │       │   │               ├── LogSnippet/
    │       │   │               │   ├── LogSnippet.md
    │       │   │               │   └── LogSnippetExample.tsx
    │       │   │               ├── Maintenance/
    │       │   │               │   ├── Maintenance.md
    │       │   │               │   ├── MaintenanceCustomExample.tsx
    │       │   │               │   └── MaintenanceExample.tsx
    │       │   │               ├── MissingPage/
    │       │   │               │   ├── MissingPage.md
    │       │   │               │   └── MissingPageExample.tsx
    │       │   │               ├── MultiContentCard/
    │       │   │               │   ├── MultiContentCard.md
    │       │   │               │   ├── MultiContentCardExample.tsx
    │       │   │               │   ├── MultiContentCardExpandableActionsExample.tsx
    │       │   │               │   ├── MultiContentCardExpandableDividerExample.tsx
    │       │   │               │   ├── MultiContentCardExpandableExample.tsx
    │       │   │               │   └── MultiContentCardExpandableSingleDividerExample.tsx
    │       │   │               ├── PageHeader/
    │       │   │               │   ├── PageHeader.md
    │       │   │               │   ├── PageHeaderActionsExample.tsx
    │       │   │               │   ├── PageHeaderBreadcrumbExample.tsx
    │       │   │               │   ├── PageHeaderExample.tsx
    │       │   │               │   ├── PageHeaderIconExample.tsx
    │       │   │               │   └── PageHeaderLabelLinkExample.tsx
    │       │   │               ├── ResponsiveActions/
    │       │   │               │   ├── ResponsiveActions.md
    │       │   │               │   ├── ResponsiveActionsBreakpointExample.tsx
    │       │   │               │   └── ResponsiveActionsExample.tsx
    │       │   │               ├── ServiceCard/
    │       │   │               │   ├── ServiceCard.md
    │       │   │               │   ├── ServiceCardExample.tsx
    │       │   │               │   ├── ServiceCardGalleryExample.tsx
    │       │   │               │   └── ServiceCardStackedExample.tsx
    │       │   │               ├── Severity/
    │       │   │               │   ├── Severity.md
    │       │   │               │   ├── SeverityCriticalExample.tsx
    │       │   │               │   ├── SeverityImportantExample.tsx
    │       │   │               │   ├── SeverityMinorExample.tsx
    │       │   │               │   ├── SeverityModerateExample.tsx
    │       │   │               │   ├── SeverityNoneExample.tsx
    │       │   │               │   └── SeverityUndefinedExample.tsx
    │       │   │               ├── ShortcutGrid/
    │       │   │               │   ├── ShortcutExample.tsx
    │       │   │               │   ├── ShortcutGrid.md
    │       │   │               │   └── ShortcutGridExample.tsx
    │       │   │               ├── SkeletonTable/
    │       │   │               │   ├── SkeletonTable.md
    │       │   │               │   ├── SkeletonTableBodyExample.tsx
    │       │   │               │   ├── SkeletonTableCompactExample.tsx
    │       │   │               │   ├── SkeletonTableCustomExample.tsx
    │       │   │               │   ├── SkeletonTableExample.tsx
    │       │   │               │   ├── SkeletonTableExpandableExample.tsx
    │       │   │               │   ├── SkeletonTableHeadExample.tsx
    │       │   │               │   ├── SkeletonTableLoadingExample.tsx
    │       │   │               │   └── SkeletonTableSelectableExample.tsx
    │       │   │               ├── StaleDataWarning/
    │       │   │               │   ├── StaleDataWarning.md
    │       │   │               │   ├── StaleDataWarningCustomExample.tsx
    │       │   │               │   └── StaleDataWarningExample.tsx
    │       │   │               ├── Status/
    │       │   │               │   ├── IconOnlyStatusExample.tsx
    │       │   │               │   ├── LinkStatusExample.tsx
    │       │   │               │   ├── PopoverStatusExample.tsx
    │       │   │               │   ├── Status.md
    │       │   │               │   ├── StatusDescriptionExample.tsx
    │       │   │               │   └── StatusExample.tsx
    │       │   │               ├── TagCount/
    │       │   │               │   ├── TagCount.md
    │       │   │               │   ├── TagCountDisabledExample.tsx
    │       │   │               │   └── TagCountExample.tsx
    │       │   │               ├── UnauthorizedAccess/
    │       │   │               │   ├── UnauthorizedAccess.md
    │       │   │               │   ├── UnauthorizedAccessActionsExample.tsx
    │       │   │               │   └── UnauthorizedAccessExample.tsx
    │       │   │               ├── Unavailable/
    │       │   │               │   ├── UnavailableContent.md
    │       │   │               │   └── UnavailableContentExample.tsx
    │       │   │               └── WarningModal/
    │       │   │                   ├── WarningModal.md
    │       │   │                   ├── WarningModalCheckboxExample.tsx
    │       │   │                   ├── WarningModalDangerExample.tsx
    │       │   │                   ├── WarningModalExample.tsx
    │       │   │                   └── WarningModalTextConfirmationExample.tsx
    │       │   └── pages/
    │       │       └── index.js
    │       └── src/
    │           ├── index.ts
    │           ├── Ansible/
    │           │   ├── Ansible.test.tsx
    │           │   ├── Ansible.tsx
    │           │   ├── index.ts
    │           │   └── __snapshots__/
    │           │       └── Ansible.test.tsx.snap
    │           ├── BulkSelect/
    │           │   ├── BulkSelect.test.tsx
    │           │   ├── BulkSelect.tsx
    │           │   ├── index.ts
    │           │   └── __snapshots__/
    │           │       └── BulkSelect.test.tsx.snap
    │           ├── CloseButton/
    │           │   ├── CloseButton.tsx
    │           │   └── index.ts
    │           ├── ColumnManagementModal/
    │           │   ├── ColumnManagementModal.test.tsx
    │           │   ├── ColumnManagementModal.tsx
    │           │   └── index.ts
    │           ├── ContentHeader/
    │           │   └── ContentHeader.tsx
    │           ├── ErrorBoundary/
    │           │   ├── ErrorBoundary.test.tsx
    │           │   ├── ErrorBoundary.tsx
    │           │   └── index.ts
    │           ├── ErrorStack/
    │           │   ├── ErrorStack.tsx
    │           │   └── index.ts
    │           ├── ErrorState/
    │           │   ├── ErrorState.test.tsx
    │           │   ├── ErrorState.tsx
    │           │   └── index.ts
    │           ├── LogSnippet/
    │           │   ├── index.ts
    │           │   ├── LogSnippet.test.tsx
    │           │   ├── LogSnippet.tsx
    │           │   └── __snapshots__/
    │           │       └── LogSnippet.test.tsx.snap
    │           ├── Maintenance/
    │           │   ├── index.ts
    │           │   └── Maintenance.tsx
    │           ├── MissingPage/
    │           │   ├── index.ts
    │           │   ├── MissingPage.test.tsx
    │           │   ├── MissingPage.tsx
    │           │   └── __snapshots__/
    │           │       └── MissingPage.test.tsx.snap
    │           ├── MultiContentCard/
    │           │   ├── index.ts
    │           │   ├── MultiContentCard.test.tsx
    │           │   ├── MultiContentCard.tsx
    │           │   └── __snapshots__/
    │           │       └── MultiContentCard.test.tsx.snap
    │           ├── NotFoundIcon/
    │           │   ├── index.ts
    │           │   └── NotFoundIcon.tsx
    │           ├── PageHeader/
    │           │   ├── index.ts
    │           │   ├── PageHeader.test.tsx
    │           │   ├── PageHeader.tsx
    │           │   └── __snapshots__/
    │           │       └── PageHeader.test.tsx.snap
    │           ├── ResponsiveAction/
    │           │   ├── index.ts
    │           │   └── ResponsiveAction.tsx
    │           ├── ResponsiveActions/
    │           │   ├── index.ts
    │           │   ├── ResponsiveActions.test.tsx
    │           │   ├── ResponsiveActions.tsx
    │           │   └── __snapshots__/
    │           │       └── ResponsiveActions.test.tsx.snap
    │           ├── ServiceCard/
    │           │   ├── index.ts
    │           │   ├── ServiceCard.test.tsx
    │           │   ├── ServiceCard.tsx
    │           │   └── __snapshots__/
    │           │       └── ServiceCard.test.tsx.snap
    │           ├── Severity/
    │           │   ├── index.ts
    │           │   ├── Severity.test.tsx
    │           │   ├── Severity.tsx
    │           │   └── __snapshots__/
    │           │       └── Severity.test.tsx.snap
    │           ├── Shortcut/
    │           │   ├── index.ts
    │           │   ├── Shortcut.test.tsx
    │           │   ├── Shortcut.tsx
    │           │   └── __snapshots__/
    │           │       └── Shortcut.test.tsx.snap
    │           ├── ShortcutGrid/
    │           │   ├── index.ts
    │           │   ├── ShortcutGrid.test.tsx
    │           │   ├── ShortcutGrid.tsx
    │           │   └── __snapshots__/
    │           │       └── ShortcutGrid.test.tsx.snap
    │           ├── SkeletonTable/
    │           │   ├── index.ts
    │           │   ├── SkeletonTable.test.tsx
    │           │   ├── SkeletonTable.tsx
    │           │   └── __snapshots__/
    │           │       └── SkeletonTable.test.tsx.snap
    │           ├── SkeletonTableBody/
    │           │   ├── index.ts
    │           │   ├── SkeletonTableBody.test.tsx
    │           │   ├── SkeletonTableBody.tsx
    │           │   └── __snapshots__/
    │           │       └── SkeletonTableBody.test.tsx.snap
    │           ├── SkeletonTableHead/
    │           │   ├── index.ts
    │           │   ├── SkeletonTableHead.test.tsx
    │           │   ├── SkeletonTableHead.tsx
    │           │   └── __snapshots__/
    │           │       └── SkeletonTableHead.test.tsx.snap
    │           ├── StaleDataWarning/
    │           │   ├── index.ts
    │           │   └── StaleDataWarning.tsx
    │           ├── Status/
    │           │   ├── index.tsx
    │           │   ├── Status.test.tsx
    │           │   ├── Status.tsx
    │           │   └── __snapshots__/
    │           │       └── Status.test.tsx.snap
    │           ├── TagCount/
    │           │   ├── index.ts
    │           │   ├── TagCount.test.tsx
    │           │   ├── TagCount.tsx
    │           │   └── __snapshots__/
    │           │       └── TagCount.test.tsx.snap
    │           ├── UnauthorizedAccess/
    │           │   ├── index.ts
    │           │   ├── UnauthorizedAccess.test.tsx
    │           │   ├── UnauthorizedAccess.tsx
    │           │   └── __snapshots__/
    │           │       └── UnauthorizedAccess.test.tsx.snap
    │           ├── UnavailableContent/
    │           │   ├── index.ts
    │           │   ├── UnavailableContent.test.tsx
    │           │   ├── UnavailableContent.tsx
    │           │   └── __snapshots__/
    │           │       └── UnavailableContent.test.tsx.snap
    │           └── WarningModal/
    │               ├── index.ts
    │               ├── WarningModal.test.tsx
    │               ├── WarningModal.tsx
    │               └── __snapshots__/
    │                   └── WarningModal.test.tsx.snap
    ├── results/
    │   └── my-test-output-084c87f9083679454b20e52eaabc4c94.xml
    ├── scripts/
    │   └── build-packages.js
    └── .github/
        ├── dependabot.yml
        ├── upload-preview.js
        └── workflows/
            ├── build-lint-test.yml
            ├── build.yml
            ├── check-pr.yml
            ├── extensions.yml
            ├── pr-preview.yml
            ├── promote.yml
            └── release.yml

================================================
FILE: README.md
================================================
# PatternFly React Component Groups

This repo contains a set of opinionated react component groups used to standardize functionality and look and feel across products. The components are based on PatternFly with some additional functionality.

### Branches
`main` - PatternFly 6 implementation

`v5` - PatternFly 5 implementation

`do-not-delete` - do not delete

> NOTE: If new features are not needed in `v5,` they should be added directly to the `main` branch. For bug fixes, it is preferred to fix the bug for both versions (fix in one branch and cherry-pick to another). Pulling new changes from 5 to 6 and vice versa is not recommended using `rebase`. Rather, always cherry-pick specific commits.

---

### Migration from [RedHatInsights/frontend-components](https://github.com/RedHatInsights/frontend-components) to [patternfly/react-component-groups](https://github.com/patternfly/react-component-groups)
Please see the [migration guide](./migration.md)

---
## Contribution guide

### Before adding a new component:
- make sure your use case is new/complex enough to be added to this extension
- the component should bring a value value above and beyond existing PatternFly components

### To add a new component:
1. create a folder in `src/` matching its name (for example `src/MyComponent`)
2. to the new folder add a new `.tsx` file named after the component (for example `src/MyComponent/MyComponent.tsx`)
3. to the same folder include an `index.ts` which will export the component as a default and then all necessary interfaces
4. if this file structure is not met, your component won't be exposed correctly

#### Example component:
```
import * as React from 'react';
import { Content } from '@patternfly/react-core';
import { createUseStyles } from 'react-jss';

// do not forget to export your component's interface
// always place the component's interface above the component itself in the code
export interface MyComponentProps {
  text: String;
}

const useStyles = createUseStyles({
  myText: {
    fontFamily: 'monospace',
    fontSize: 'var(--pf-v6-global--icon--FontSize--md)',
  },
})

// do not use the named export of your component, just a default one
const MyComponent: React.FunctionComponent<MyComponentProps> = () => {
  const classes = useStyles();

  return (
    <Content className={classes.myText}>
      This is my new reusable component
    </Content>
  );
};

export default MyComponent;
``` 

#### Index file example:
```
export { default } from './MyComponent';
export * from './MyComponent';
``` 

#### Component directory structure example:
```
src
|- MyComponent
   |- index.ts
   |- MyComponent.tsx
``` 

### Component's API rules:
- prop names comply with PatternFly components naming standards (`variant`, `onClick`, `position`, etc.)
- the API is maximally simplified and all props are provided with a description
- it is built on top of existing PatternFly types without prop omitting
- it is well documented using the PatternFly documentation (`/packages/module/patternfly-docs/content/extensions/component-groups/examples/MyComponent/MyComponent.md`) with examples of all possible use cases (`packages/module/patternfly-docs/content/extensions/component-groups/examples/MyComponent/MyComponent[...]Example.tsx`)
- do not unnecessarily use external libraries in your component - rather, delegate the necessary logic to the component's user using the component's API

#### Component API definition example:
```
// when possible, extend available PatternFly types
export interface MyComponentProps extends ButtonProps {
    customLabel: Boolean
};

export const MyComponent: React.FunctionComponent<MyComponentProps> = ({ customLabel, ...props }) => ( ... );
```


#### Markdown file example:
```
---
section: Component groups
subsection: My component's category
id: MyComponent
propComponents: ['MyComponent']
---

import MyComponent from "@patternfly/react-component-groups/dist/dynamic/MyComponent";

## Component usage

MyComponent has been created to demo contributing to this repository.

### MyComponent component example label

```js file="./MyComponentExample.tsx"```

```

#### Component usage file example: (`MyComponentExample.tsx`)
```
import React from 'react';

const MyComponentExample: React.FunctionComponent = () => (
  <MyComponent customLabel="My label">
);

export default MyComponentExample;
```

### Sub-components:
When adding a component for which it is advantageous to divide it into several sub-components make sure: 
- component and all its sub-components are located in separate files and directories straight under the `src/` folder
- sub-components are exported and documented separately from their parent
- parent component should provide a way to pass props to all its sub-components

The aim is to enable the user of our "complex" component to use either complete or take advantage of its sub-components and manage their composition independently.

### Testing:
When adding/making changes to a component, always make sure your code is tested:
- use React Testing Library for unit testing 
- add unit tests to a `[ComponentName].test.tsx` file to your component's directory
- make sure all the core functionality is covered using Cypress component or E2E tests
- add component tests to `cypress/component/[ComponentName].cy.tsx` file and E2E tests to `cypress/e2e/[ComponentName].spec.cy.ts`
- add `ouiaId` to the component props definition with a default value of the component name (for subcomponents, let's use `ComponentName-element-specification` naming convention e.g. `ouiaId="WarningModal-confirm-button"`)

### Styling:
- for styling always use JSS
- new classNames should be named in camelCase starting with the name of a given component and following with more details clarifying its purpose/component's subsection to which the class is applied (`actionMenu`, `actionMenuDropdown`, `actionMenuDropdownToggle`, etc.)
- do not use `pf-v6-u-XXX` classes, use CSS variables in a custom class instead (styles for the utility classes are not bundled with the standard patternfly.css - it would require the consumer to import also addons.css)

## Building for production

- run `npm install`
- run `npm run build`

## Development
- run `npm install`
- run `npm run start` to build and start the development server

## Testing and Linting
- run `npm run test` to run the unit tests
- run `npm run cypress:run:cp` to run Cypress component tests
- run `npm run cypress:run:e2e` to run Cypress E2E tests
- run `npm run lint` to run the linter

## A11y testing

- run `npm run build:docs` followed by `npm run serve:docs`, then run `npm run test:a11y` in a new terminal window to run our accessibility tests for the components. Once the accessibility tests have finished running you can run `npm run serve:a11y` to locally view the generated report.




================================================
FILE: babel.config.js
================================================
module.exports = {
  presets: [
    [ '@babel/preset-env', { targets: { node: 'current' } } ],
    [ '@babel/preset-react', { runtime: 'automatic' } ],
    '@babel/preset-flow',
    '@babel/preset-typescript'
  ]
};


================================================
FILE: cypress.config.ts
================================================
import { defineConfig } from "cypress";

export default defineConfig({
  e2e: {
    viewportHeight: 1024,
    viewportWidth: 1400,
    screenshotOnRunFailure: false,
    reporter: "junit",
    reporterOptions: {
      mochaFile: "results/my-test-output-[hash].xml",
      toConsole: true
    },
  },
  component: {
    devServer: {
      framework: "react",
      bundler: "webpack",
      webpackConfig: require('./config/webpack.cy.config.js'),
    }
  }
});



================================================
FILE: fed-mini-modules.js
================================================
const fse = require('fs-extra');
const { globSync } = require('glob');
const path = require('path');

const root = process.cwd();

const sourceFiles = globSync(`${root}/src/*/`)
  .map((name) => name.replace(/\/$/, ''));
  
const indexTypings = globSync(`${root}/src/index.d.ts`);

async function copyTypings(files, dest) {
  const cmds = [];
  files.forEach((file) => {
    const fileName = file.split('/').pop();
    cmds.push(fse.copyFile(file, `${dest}/${fileName}`));
  });
  return Promise.all(cmds);
}

async function createPackage(file) {
  const fileName = file.split('/').pop();
  const esmSource = globSync(`${root}/esm/${fileName}/**/index.js`)[0];
  /**
   * Prevent creating package.json for directories with no JS files (like CSS directories)
   */
  if (!esmSource) {
    return;
  }

  const destFile = `${path.resolve(root, file.split('/src/').pop())}/package.json`;

  const esmRelative = path.relative(file.replace('/src', ''), esmSource);
  const content = {
    main: 'index.js',
    module: esmRelative,
  };
  const typings = globSync(`${root}/src/${fileName}/*.d.ts`);
  const cmds = [];
  content.typings = 'index.d.ts';
  cmds.push(copyTypings(typings, `${root}/${fileName}`));
  cmds.push(fse.writeJSON(destFile, content));
  return Promise.all(cmds);
}

async function generatePackages(files) {
  const cmds = files.map((file) => createPackage(file));
  return Promise.all(cmds);
}

async function run(files) {
  try {
    await generatePackages(files);
    if (indexTypings.length === 1) {
      copyTypings(indexTypings, root);
    }
  } catch (error) {
    // eslint-disable-next-line no-console
    console.error(error);
    process.exit(1);
  }
}

run(sourceFiles);


================================================
FILE: jest.config.js
================================================
// Sync object
/** @type {import('@jest/types').Config.InitialOptions} */

module.exports = {
  verbose: true,
  coverageDirectory: './coverage/',
  collectCoverage: true,
  transformIgnorePatterns: [
    'node_modules/(?!@patternfly|@data-driven-forms)',

    // Uncomment the below line if you face any errors with jest
    // '/node_modules/(?!@redhat-cloud-services)',
  ],
  collectCoverageFrom: [
    '<rootDir>/packages/**/src/**/*.js',
    '!<rootDir>/packages/**/stories/*',
    '!<rootDir>/packages/**/index.js',
    '!<rootDir>/packages/**/*{c|C}ontext*.js',
    '!<rootDir>/packages/components/src/Components/Table/*',
  ],
  setupFilesAfterEnv: [ '<rootDir>/config/setupTests.js', 'jest-canvas-mock' ],
  testEnvironment: 'jsdom',
  testEnvironmentOptions: {
    url: 'http://localhost:5000/',
  },
  setupFiles: [ './jest.setup.js' ],
  roots: [ '<rootDir>/packages/' ],
  // modulePathIgnorePatterns: ['<rootDir>/packages/create-crc-app/templates', '<rootDir>/packages/docs/.cache'],
  modulePathIgnorePatterns: [
    '<rootDir>/packages/*.*/dist/*.*',
    '<rootDir>/packages/*.*/public/*.*',
    '<rootDir>/packages/*.*/.cache/*.*'
  ],
  moduleNameMapper: {
    '\\.(css|scss)$': 'identity-obj-proxy',
    '^lodash-es$': 'lodash',
    customReact: 'react',
    reactRedux: 'react-redux',
    PFReactCore: '@patternfly/react-core',
    PFReactTable: '@patternfly/react-table',
  },
  globalSetup: '<rootDir>/config/globalSetup.js',
  transform: {
    '^.+\\.jsx?$': 'babel-jest',
    '^.+\\.tsx?$': [ 'ts-jest', { tsconfig: './packages/module/tsconfig.json', } ],
  },
};



================================================
FILE: jest.setup.js
================================================
const { TextEncoder } = require('util');
global.TextEncoder = TextEncoder;



================================================
FILE: LICENSE
================================================
MIT License

Copyright (c) 2022 Red Hat, Inc.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.



================================================
FILE: migration.md
================================================
# Frontend components -> patternfly/react-component-groups migration
​
This migration guide covers all components that have been moved from the Insights repository to the new PatternFly “React component groups” extension. The API changes resulting from this migration will affect aspects of each component’s usage implementation. This guide outlines these changes and provides solutions for replicating your previous implementation.
​
The guide should be applicable when migrating from frontend-components **version 3.8.0 and later**. Please be aware that `frontend-components` version 4 included an upgrade to PatternFly 5, which brought changes to CSS class names and the DOM representation of components.Although this did not change the API of individual components or their visual appearance, their DOM representation may be slightly different.
​
## Ansible
​
- The disabled color for “Ansible unsupported” has been changed from `--pf-v5-global--disabled-color--200` to `--pf-v5-global--disabled-color--100` in order to comply with PatternFly guidelines
​
  **SOLUTION:** use the `className` property if you need a custom color
​
## ErrorState
​
- The default error description *“If the problem persists, contact [Red Hat Support](https://access.redhat.com/support) or check our [status page](https://status.redhat.com) for known outages.”* has been removed. 
​
  **SOLUTION:** pass a default value using the new `defaultErrorDescription` property
​
​
## ErrorBoundary
​
- The removal of the default error description from `ErrorState` *“If the problem persists, contact [Red Hat Support](https://access.redhat.com/support) or check our [status page](https://status.redhat.com) for known outages.”* also affected this component. 
​
  **SOLUTION:** pass a default value using the new `defaultErrorDescription` property
​
​
## ErrorStack
​
- `overflowWrap: 'break-word'` styling change has been made to the component
​
  **SOLUTION:** use the `className` property for custom styling
​
​
## NotAuthorized
​
- The default error description *“Contact your organization administrator(s) for more information or visit [My User Access](./iam/my-user-access) to learn more about your permissions.”* has been removed. 
​
  **SOLUTION:** pass a default value using the new `description` property 
​
​
- The `actions` property has been divided into `primaryAction` (there should be only one for any given screen) and `secondaryActions`
​
  **SOLUTION:** use the new properties for primary and secondary actions 
​
​
## InvalidObject
​
- The logic automatically persisting the `/beta` URL section for *“Go to home page”* target has been removed. 
​
  **SOLUTION:** handle `/beta` in your URL on your own and pass a final URL using the new `toLandingPageUrl` property
​
​## Severity

- No action required
  
## SkeletonTable
​
- No action required
​
​
## TagCount
​
- The tag icon size is set to `md` by default instead of `lg` the previous default 
​
  **SOLUTION:** use the new `iconSize` property to customize icon size
​
  ***Note:*** if you migrate from Insights FEC version 3.x.x you may not be affected
​
​
- The `onTagClick` property has been renamed to `onClick`
​
  **SOLUTION:** use the new `onTagClick` property
​
​
## Unavailable (renamed to UnavailableContent)
​
- The default status page URL ([https://status.redhat.com](https://status.redhat.com)) has been removed
​
  **SOLUTION:** use the new `statusPageUrl` property to pass in your custom URL


================================================
FILE: package.json
================================================
{
  "name": "@patternfly/react-component-groups-root",
  "private": true,
  "version": "0.0.0",
  "description": "This library provides PatternFly based opinionated React components.",
  "license": "MIT",
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "build": "npm run build:packages && npm run build:fed:packages",
    "build:watch": "concurrently \"npm run build:packages:watch\" \"npx wait-on packages/module/dist/esm && npm run build:fed:packages\"",
    "build:docs": "npm run docs:build -w @patternfly/react-component-groups",
    "build:packages": "npm run build -w @patternfly/react-component-groups",
    "build:packages:watch": "npm run build:watch -w @patternfly/react-component-groups",
    "build:fed:packages": "npm run build:fed:packages -w @patternfly/react-component-groups",
    "cypress:open": "cypress open",
    "cypress:run:e2e": "cypress run --headless",
    "cypress:run:cp": "cypress run --component",
    "cypress:run:ci": "start-server-and-test start http://localhost:8006 cypress:run:e2e",
    "start": "concurrently \"npm run build:watch\" \"npx wait-on packages/module/dist && npm run docs:develop -w @patternfly/react-component-groups\"",
    "serve:docs": "npm run docs:serve -w @patternfly/react-component-groups",
    "clean": "npm run clean -w @patternfly/react-component-groups",
    "lint:js": "node --max-old-space-size=4096 node_modules/.bin/eslint packages --ext js,jsx,ts,tsx --cache",
    "lint:js:fix": "node --max-old-space-size=4096 node_modules/.bin/eslint packages --ext js,jsx,ts,tsx --cache --fix",
    "lint:md": "eslint packages --ext md --no-eslintrc --config .eslintrc-md.json --cache",
    "lint:md:fix": "eslint packages --ext md --no-eslintrc --config .eslintrc-md.json --cache --fix",
    "lint": "npm run lint:js && npm run lint:md",
    "lint:fix": "npm run lint:js:fix && npm run lint:md:fix",
    "test": "TZ=EST jest packages",
    "test:a11y": "npm run test:a11y -w @patternfly/react-component-groups",
    "serve:a11y": "npm run serve:a11y -w @patternfly/react-component-groups"
  },
  "devDependencies": {
    "@babel/core": "^7.26.9",
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
    "@babel/preset-env": "^7.26.0",
    "@babel/preset-flow": "^7.25.9",
    "@babel/preset-react": "^7.24.7",
    "@babel/preset-typescript": "^7.26.0",
    "@octokit/rest": "^21.1.1",
    "@swc/core": "1.11.21",
    "@testing-library/dom": "^10.3.2",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "14.6.1",
    "@types/jest": "^29.5.12",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "babel-jest": "^29.7.0",
    "babel-polyfill": "6.26.0",
    "chokidar": "^3.6.0",
    "concurrently": "^8.2.2",
    "cypress": "^13.15.2",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "8.10.0",
    "eslint-config-standard-with-typescript": "^23.0.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-markdown": "^1.0.2",
    "eslint-plugin-n": "^15.0.0",
    "eslint-plugin-prettier": "^5.2.3",
    "eslint-plugin-promise": "^6.6.0",
    "eslint-plugin-react": "^7.37.4",
    "eslint-plugin-react-hooks": "^4.6.2",
    "fs-extra": "^11.3.0",
    "glob": "^10.4.5",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-canvas-mock": "^2.5.2",
    "jest-environment-jsdom": "^29.7.0",
    "prettier": "3.5.3",
    "react": "^18",
    "react-dom": "^18",
    "rimraf": "^5.0.10",
    "sass": "^1.81.0",
    "sass-loader": "^16.0.3",
    "serve": "^14.2.4",
    "start-server-and-test": "^2.0.5",
    "surge": "^0.24.6",
    "swc-loader": "0.2.6",
    "ts-jest": "29.1.5",
    "wait-on": "^7.2.0",
    "whatwg-fetch": "^3.6.20"
  },
  "dependencies": {
    "@patternfly/react-tokens": "^6.0.0",
    "sharp": "^0.33.5"
  }
}



================================================
FILE: renovate.json
================================================
{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    ":dependencyDashboardApproval"
  ],
  "packageRules": [
    {
      "packagePatterns": ["*"],
      "excludePackagePatterns": [
        "@patternfly/documentation-framework"
      ],
      "enabled": false
    },
    {
      "packageNames": [
        "@patternfly/documentation-framework"
      ]
    }
  ]
}



================================================
FILE: styleMock.js
================================================
// We aren't actually using CSS modules, so we don't need to mock what `require('@patternfly/react-styles/css/whatever')` would do
module.exports = {};



================================================
FILE: tsconfig.json
================================================
{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Basic Options */
    // "incremental": true,                         /* Enable incremental compilation */
    "target": "es2015" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */,
    "module": "es2015" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
    // "lib": [],                                   /* Specify library files to be included in the compilation. */
    // "allowJs": true,                             /* Allow javascript files to be compiled. */
    // "checkJs": true,                             /* Report errors in .js files. */
    "jsx": "react" /* Specify JSX code generation: 'preserve', 'react-native', 'react', 'react-jsx' or 'react-jsxdev'. */,
    "declaration": true /* Generates corresponding '.d.ts' file. */,
    // "declarationMap": true,                      /* Generates a sourcemap for each corresponding '.d.ts' file. */
    // "sourceMap": true,                           /* Generates corresponding '.map' file. */
    // "outFile": "./",                             /* Concatenate and emit output to single file. */
    "outDir": "./dist" /* Redirect output structure to the directory. */,
    "rootDir": "./cypress" /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
    // "composite": true,                           /* Enable project compilation */
    // "tsBuildInfoFile": "./",                     /* Specify file to store incremental compilation information */
    // "removeComments": true,                      /* Do not emit comments to output. */
    // "noEmit": true,                              /* Do not emit outputs. */
    // "importHelpers": true,                       /* Import emit helpers from 'tslib'. */
    // "downlevelIteration": true,                  /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "isolatedModules": true,                     /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": false,                       /* Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,                    /* Enable strict null checks. */
    // "strictFunctionTypes": true,                 /* Enable strict checking of function types. */
    // "strictBindCallApply": true,                 /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,        /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                      /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                        /* Parse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks */
    // "noUnusedLocals": true,                      /* Report errors on unused locals. */
    // "noUnusedParameters": true,                  /* Report errors on unused parameters. */
    // "noImplicitReturns": true,                   /* Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": true,          /* Report errors for fallthrough cases in switch statement. */
    // "noUncheckedIndexedAccess": true,            /* Include 'undefined' in index signature results */
    // "noImplicitOverride": true,                  /* Ensure overriding members in derived classes are marked with an 'override' modifier. */
    // "noPropertyAccessFromIndexSignature": true,  /* Require undeclared properties from index signatures to use element accesses. */

    /* Module Resolution Options */
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    // "baseUrl": "./",                             /* Base directory to resolve non-absolute module names. */
    // "paths": {},                                 /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                              /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],                             /* List of folders to include type definitions from. */
    // "types": [],                                 /* Type declaration files to be included in compilation. */
    // "allowSyntheticDefaultImports": true,        /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    // "preserveSymlinks": true,                    /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,                /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                            /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                               /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,                     /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                       /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // "experimentalDecorators": true,              /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,               /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */
  },
  "include": ["./cypress/**/*"],
}



================================================
FILE: .eslintignore
================================================
# Javascript builds
node_modules
dist
tsc_out
.out
.changelog
.DS_Store
coverage
.cache
.tmp
.eslintcache
generated
__tests__

# package managers
lerna-debug.log

# IDEs and editors
.idea
.project
.classpath
.c9
*.launch
.settings
*.sublime-workspace
.history
.vscode
.yo-rc.json

# IDE - VSCode
.vscode
# For vim
*.swp

public


================================================
FILE: .eslintrc-md.json
================================================
{
  "plugins": [
    "markdown",
    "react"
  ],
  "parserOptions": {
    "ecmaVersion": 9,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "react": {
      "version": "16.4.0"
    }
  },
  "rules": {
    "eol-last": 2,
    "spaced-comment": 2,
    "no-unused-vars": 0,
    "no-this-before-super": 2,
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/no-unknown-property": 2,
    "react/jsx-no-undef": 2
  }
}


================================================
FILE: .eslintrc.json
================================================
{
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "overrides": [
    {
      "files": ["**/patternfly-docs/pages/*"],
      "rules": {
        "arrow-body-style": "off"
      }
    }
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "plugins": ["react", "react-hooks", "@typescript-eslint"],
  "rules": {
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/no-var-requires": "off",
    "arrow-body-style": "error",
    "array-bracket-spacing": ["error", "always"],
    "camelcase": [
      "error",
      {
        "ignoreDestructuring": true
      }
    ],
    "constructor-super": "error",
    "curly": "error",
    "dot-notation": "error",
    "eqeqeq": ["error", "smart"],
    "guard-for-in": "error",
    "indent": ["error", 2],
    "max-classes-per-file": ["error", 1],
    "no-nested-ternary": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-cond-assign": "error",
    "no-console": "error",
    "no-debugger": "error",
    "no-empty": "error",
    "no-eval": "error",
    "no-new-wrappers": "error",
    "no-undef-init": "error",
    "no-unsafe-finally": "error",
    "no-unused-expressions": [
      "error",
      {
        "allowTernary": true,
        "allowShortCircuit": true
      }
    ],
    "no-unused-labels": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "object-curly-spacing": ["error", "always"],
    "one-var": ["error", "never"],
    "prefer-const": "error",
    "radix": ["error", "as-needed"],
    "react/prop-types": 0,
    "react/display-name": 0,
    "react-hooks/exhaustive-deps": "warn",
    "react/no-unescaped-entities": ["error", { "forbid": [">", "}"] }],
    "spaced-comment": "error",
    "use-isnan": "error"
  }
}



================================================
FILE: .prettierignore
================================================
# Javascript builds
node_modules
dist
tsc_out
.out
.changelog
.DS_Store
coverage
.cache
.tmp
.eslintcache
generated

# package managers
lerna-debug.log

# IDEs and editors
.idea
.project
.classpath
.c9
*.launch
.settings
*.sublime-workspace
.history
.vscode
.yo-rc.json

# IDE - VSCode
.vscode
# For vim
*.swp

public


================================================
FILE: .prettierrc.json
================================================
{
  "semi": true,
  "singleQuote": true,
  "tabWidth": 2,
  "trailingComma": "none",
  "useTabs": false,
  "printWidth": 120
}



================================================
FILE: config/globalSetup.js
================================================

module.exports = async () => {
  process.env.TZ = 'UTC';
};


================================================
FILE: config/setupTests.js
================================================
import 'whatwg-fetch';
import 'babel-polyfill';
import '@testing-library/jest-dom';



================================================
FILE: config/webpack.cy.config.js
================================================
const path = require('path');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');

/** @type { import("webpack").Configuration } */
const JSConfig = {
  module: {
    rules: [
      {
        test: /\.(js|ts)x?$/,
        exclude: /node_modules/,
        use: {
          loader: 'swc-loader',
          options: {
            jsc: {
              parser: {
                syntax: 'typescript',
                tsx: true,
              },
            },
          },
        },
      },
      {
        test: /\.s?[ac]ss$/,
        use: [
          MiniCssExtractPlugin.loader,
          'css-loader',
          {
            loader: 'sass-loader',
            options: {
              sourceMap: true,
            },
          },
        ],
      },
      {
        test: /\.(jpe?g|svg|png|gif|ico|eot|ttf|woff2?)(\?v=\d+\.\d+\.\d+)?$/i,
        type: 'asset/resource',
      },
    ],
  },
  resolve: {
    extensions: [ '.tsx', '.ts', '.js' ],
  },
  output: {
    filename: 'bundle.js',
    hashFunction: 'xxhash64',
    path: path.resolve(__dirname, 'dist'),
  },
  cache: {
    type: 'filesystem',
    buildDependencies: {
      config: [ __filename ],
    },
    cacheDirectory: path.resolve(__dirname, '../.cypress-cache'),
  },
  stats: {
    errorDetails: true,
  },
  plugins: [
    new MiniCssExtractPlugin({
      filename: '[name].[contenthash].css',
    }),
  ],
};

module.exports = JSConfig;


================================================
FILE: cypress/component/Ansible.cy.tsx
================================================
import React from 'react';
import { Ansible } from '@patternfly/react-component-groups/dist/dynamic/Ansible';

describe('Ansible', () => {
  it('renders supported Ansible', () => {
    cy.mount(<Ansible />)
    cy.get('i').should('have.class', 'ansibleSupported-0-2-2');
  });
  it('renders unsupported Ansible', () => {
    cy.mount(<Ansible isSupported={false}/>)
    cy.get('i').should('have.class', 'ansibleUnsupported-0-2-3');
  });
});


================================================
FILE: cypress/component/BulkSelect.cy.tsx
================================================
import React, { useState } from 'react';
import BulkSelect, { BulkSelectProps, BulkSelectValue } from '../../packages/module/dist/dynamic/BulkSelect';

interface DataItem {
  name: string
};

const BulkSelectTestComponent = ({ canSelectAll, isDataPaginated }: Omit<BulkSelectProps, 'onSelect' | 'selectedCount' >) => {
  const [ selected, setSelected ] = useState<DataItem[]>([]);

  const allData = [ { name: '1' }, { name: '2' }, { name: '3' }, { name: '4' }, { name: '5' }, { name: '6' } ];
  const pageData = [ { name: '1' }, { name: '2' }, { name: '3' }, { name: '4' }, { name: '5' } ];
  const pageDataNames = pageData.map((item) => item.name);
  const pageSelected = pageDataNames.every(item => selected.find(selectedItem => selectedItem.name === item));

  const handleBulkSelect = (value: BulkSelectValue) => {
    if (value === BulkSelectValue.page) {
      const updatedSelection = [ ...selected ];
      pageData.forEach(item => !updatedSelection.some(selectedItem => selectedItem.name === item.name) && updatedSelection.push(item));
      setSelected(updatedSelection);
    }
    value === BulkSelectValue.nonePage && setSelected(selected.filter(item => !pageDataNames.includes(item.name)))
    value === BulkSelectValue.none && setSelected([]);
    value === BulkSelectValue.all && setSelected(allData);
  };

  return (
    <BulkSelect
      isDataPaginated={isDataPaginated}
      canSelectAll={canSelectAll}
      pageCount={pageData.length}
      totalCount={allData.length}
      selectedCount={selected.length}
      pageSelected={pageSelected}
      pagePartiallySelected={pageDataNames.some(item => selected.find(selectedItem => selectedItem.name === item)) && !pageSelected}
      onSelect={handleBulkSelect}
    />
  );
};

describe('BulkSelect', () => {
  it('renders the bulk select without all', () => {
    cy.mount(
      <BulkSelectTestComponent />
    );
    cy.get('[data-ouia-component-id="BulkSelect-checkbox"]').should('exist');
    cy.get('[data-ouia-component-id="BulkSelect-toggle"]').click();
    cy.get('[data-ouia-component-id="BulkSelect-select-all"]').should('not.exist');
    cy.get('[data-ouia-component-id="BulkSelect-select-page"]').should('exist');
    cy.get('[data-ouia-component-id="BulkSelect-select-none"]').should('exist');
  
    cy.contains('0 selected').should('not.exist');
  });

  it('renders the bulk select with all and without page', () => {
    cy.mount(
      <BulkSelectTestComponent canSelectAll isDataPaginated={false} />
    );
    cy.get('[data-ouia-component-id="BulkSelect-checkbox"]').should('exist');
    cy.get('[data-ouia-component-id="BulkSelect-toggle"]').click();
    cy.get('[data-ouia-component-id="BulkSelect-select-all"]').should('exist');
    cy.get('[data-ouia-component-id="BulkSelect-select-page"]').should('not.exist');
    cy.get('[data-ouia-component-id="BulkSelect-select-none"]').should('exist');
  
    cy.contains('0 selected').should('not.exist');
  });
  
  it('renders the bulk select with data', () => {
    cy.mount(
      <BulkSelectTestComponent canSelectAll />
    );
  
    // Initial state
    cy.get('input[type="checkbox"]').each(($checkbox) => {
      cy.wrap($checkbox).should('not.be.checked');
    });
  
    // Checkbox select
    cy.get('[data-ouia-component-id="BulkSelect-checkbox"]').first().click();
    cy.get('input[type="checkbox"]').should('be.checked');
    cy.contains('5 selected').should('exist');
  
    // Select none
    cy.get('[data-ouia-component-id="BulkSelect-toggle"]').first().click({ force: true });
    cy.get('[data-ouia-component-id="BulkSelect-select-none"]').first().click();
    cy.get('input[type="checkbox"]').should('not.be.checked');
  
    // Select all
    cy.get('[data-ouia-component-id="BulkSelect-toggle"]').first().click({ force: true });
    cy.get('[data-ouia-component-id="BulkSelect-select-all"]').first().click();
    cy.contains('6 selected').should('exist');
  
    // Checkbox deselect
    cy.get('[data-ouia-component-id="BulkSelect-checkbox"]').first().click({ force: true });
    cy.contains('1 selected').should('exist');
  
    // Select page
    cy.get('[data-ouia-component-id="BulkSelect-toggle"]').first().click({ force: true });
    cy.get('[data-ouia-component-id="BulkSelect-select-page"]').first().click();
    cy.contains('6 selected').should('exist');
  });
});


================================================
FILE: cypress/component/CloseButton.cy.tsx
================================================
import React from 'react';
import CloseButton from '../../packages/module/dist/dynamic/CloseButton';

describe('CloseButton', () => {
  /* eslint-disable no-console */
  it('renders the Close button', () => {
    cy.mount(<CloseButton dataTestID="close-button-example" onClick={()=>{console.log('Close button clicked')}} style={{ float: 'none' }}/>)
    cy.get('[data-test-id="close-button-example"]').should('exist');
  });
  it('should call callback on click', () => {
    const onClickSpy = cy.spy().as('onClickSpy');
    cy.mount(<CloseButton dataTestID="close-button-example" onClick={onClickSpy}/>);
    cy.get('[data-test-id="close-button-example"]').click();
    cy.get('@onClickSpy').should('have.been.called');
  });
})


================================================
FILE: cypress/component/ErrorBoundary.cy.tsx
================================================
import React from 'react';
import ErrorBoundary from '../../packages/module/dist/dynamic/ErrorBoundary';

describe('ErrorBoundary', () => {
  it('renders the ErrorBoundary ', () => {
    cy.mount(<ErrorBoundary headerTitle="My app header" errorTitle="Something wrong happened"><div data-ouia-component-id="test">Test</div></ErrorBoundary>)
    cy.get('[data-ouia-component-id="test"]').should('have.text', 'Test');
  });

  it('should expand the details section', () => {
    const Surprise = () => {
      throw new Error('but a welcome one');
    };
    cy.mount(<ErrorBoundary headerTitle="My app header" errorTitle="Something wrong happened">
      <Surprise />
    </ErrorBoundary>)

    cy.get('[data-ouia-component-id="ErrorBoundary-toggle"').click();
    cy.get('[class="pf-v5-c-expandable-section__content"]').should('contain.text', 'Error: but a welcome one');
  })
})


================================================
FILE: cypress/component/ErrorState.cy.tsx
================================================
import React from 'react';
import ErrorState from '../../packages/module/dist/dynamic/ErrorState';
import { ActionButton } from '../../packages/module/dist/dynamic/ActionButton'

describe('ErrorState', () => {
  it('renders the Close button', () => {
    cy.mount(<ErrorState titleText='Sample error title' bodyText='Sample error description' />);
    cy.get('[data-ouia-component-id="ErrorState"]').contains('Sample error title');
    cy.get('[data-ouia-component-id="ErrorState-body"]').should('have.text', 'Sample error description');
  });

  it('render with a custom footer', () => {
    const onClickSpy = cy.spy().as('onClickSpy');
    cy.mount(<ErrorState titleText='Sample error title' bodyText='Sample error description' customFooter={<ActionButton variant="secondary" onClick={onClickSpy}>
    Custom action
    </ActionButton>}/>);
    cy.get('button').should('have.text', "Custom action");
    cy.get('button').click();
    cy.get('@onClickSpy').should('have.been.called');
  })
})


================================================
FILE: cypress/component/LogSnippet.cy.tsx
================================================
import React from 'react';
import LogSnippet from '../../packages/module/dist/dynamic/LogSnippet';

describe('LogSnippet', () => {
  it('renders LogSnippet', () => {
    cy.mount(<LogSnippet logSnippet='test test code' message='A test message'/>)
    cy.get('[data-ouia-component-id="LogSnippet-message"]').contains('A test message');
    cy.get('[data-ouia-component-id="LogSnippet-code-content"]').contains('test code');
  });
});


================================================
FILE: cypress/component/Maintenance.cy.tsx
================================================
import React from 'react';
import Maintenance from '@patternfly/react-component-groups/dist/dynamic/Maintenance';

describe('Maintenance', () => {
  it('renders Maintenance', () => {
    cy.mount(<Maintenance />)
    cy.get('[data-ouia-component-id="Maintenance"]').should('exist');
    cy.get('[data-ouia-component-id="Maintenance"]').contains('Maintenance in progress');
    cy.get('[data-ouia-component-id="Maintenance-body"]').contains('We are currently undergoing scheduled maintenance and will be unavailable from 6am to 8am UTC. For more information please visit status.redhat.com.');
  });
});


================================================
FILE: cypress/component/MissingPage.cy.tsx
================================================
import React from 'react';
import MissingPage from '@patternfly/react-component-groups/dist/dynamic/MissingPage';

describe('MissingPage', () => {
  it('renders MissingPage', () => {
    cy.mount(<MissingPage />)
    cy.get('[data-ouia-component-id="MissingPage"]').should('exist')
    cy.get('[data-ouia-component-id="MissingPage"]').contains('We lost that page');
    cy.get('[data-ouia-component-id="MissingPage-body"]').contains("Let's find you a new one. Try a new search or return home.");
    cy.get('[data-ouia-component-id="MissingPage-home-button"]').contains('Return to homepage');
  });
})


================================================
FILE: cypress/component/MultiContentCard.cy.tsx
================================================
import React from 'react';
import MultiContentCard from "@patternfly/react-component-groups/dist/dynamic/MultiContentCard";
import { Button, Card, CardHeader, CardBody, Content, ContentVariants, Icon, List, ListItem, CardFooter } from '@patternfly/react-core';
import { ArrowRightIcon, BellIcon, CogIcon, LockIcon } from '@patternfly/react-icons';
import { createUseStyles } from 'react-jss';
import clsx from 'clsx';

const useStyles = createUseStyles({
  action: {
    color: 'var(--pf-t--global--text--color--brand--default)',
    fontSize: 'var(-pf-t--global--font--size--sm)',
  }, 
  bulletPoints: {
    color: 'var(--pf-t--global--color--brand--default)',
  },
});

export const MultiContentCardExample: React.FunctionComponent = () => {
  const classes = useStyles();
  
  const cards = [
    <Card isFullHeight isPlain key="card-1">
      <CardHeader>
        <Content component={ContentVariants.h4}>Getting Started</Content>
      </CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <CogIcon />
          </Icon>
            Configure application
        </Content>
        <Content className="pf-v6-u-font-size-sm">
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </Content>
      </CardBody>
      <CardFooter>
        <List className={clsx(classes.bulletPoints, 'pf-v6-u-font-size-sm', 'pf-v6-u-ml-0')}>
          <ListItem>
            <Button variant="link" isInline>First link</Button>
          </ListItem>
          <ListItem>
            <Button variant="link" isInline>Second link</Button>
          </ListItem>
          <ListItem>
            <Button variant="link" isInline>Another link</Button>
          </ListItem>
        </List>
      </CardFooter>
    </Card>,
    <Card isFullHeight isPlain key="card-2">
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <LockIcon />
          </Icon>
            Configure access
        </Content>
        <Content>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
        </Content>
      </CardBody>
      <CardFooter>
        <Content>
          <Button icon={<Icon className="pf-v6-u-ml-sm" isInline>
            <ArrowRightIcon />
          </Icon>} variant="link" isInline>
              Learn more  
            
          </Button>
        </Content>
      </CardFooter>
    </Card>,
    <Card isFullHeight isPlain key="card-3">
      <CardHeader>
        <Content component={ContentVariants.h4}>Next Steps</Content>
      </CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <BellIcon />
          </Icon>
            Configure notifications
        </Content>
        <Content>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </Content>
      </CardBody>
      <CardFooter>
        <Content>
          <Button icon={<Icon className="pf-v6-u-ml-sm" isInline>
            <ArrowRightIcon />
          </Icon>} variant="link" isInline>
              Learn more  
            
          </Button>
        </Content>
      </CardFooter>
    </Card>
  ];

  return (<MultiContentCard cards={cards} />);
}

describe('MultiContentCard', () => {
  it('renders MultiContentCard', () => {
    cy.mount(<MultiContentCardExample />);
    cy.get('[data-ouia-component-id="MultiContentCard"]').should('exist');
  });
});


================================================
FILE: cypress/component/NotAuthorized.cy.tsx
================================================
import React from 'react';
import { Button } from '@patternfly/react-core';
import NotAuthorized from '../../packages/module/dist/dynamic/NotAuthorized';

describe('NotAuthorized', () => {
  it('renders basic NotAuthorized', () => {
    cy.mount(<NotAuthorized 
      bodyText="Test text" 
      serviceName="Test bundle"
    />);
    cy.get('[data-ouia-component-id="NotAuthorized"]').contains('You do not have access to Test bundle');
    cy.get('[data-ouia-component-id="NotAuthorized-body"]').contains('Test text');
  });

  it('renders NotAuthorized with custom action buttons', () => {
    const onClickSpy = cy.spy().as('onClickSpy');
    const primaryAction = 
    <Button key="1" onClick={onClickSpy} ouiaId="test-button">
      Custom primary action
    </Button>;
    const customNotAuthorized = <NotAuthorized 
      primaryAction={primaryAction}
      bodyText="Test text" 
      serviceName="Demo bundle"
      prevPageButtonText="Go to previous page"
    />
    cy.mount(customNotAuthorized);
    const customButton = cy.get('[data-ouia-component-id="test-button"]')
    customButton.should('exist');
    customButton.should('have.text', 'Custom primary action');
    customButton.click();
    cy.get('@onClickSpy').should('have.been.called');
  });
});


================================================
FILE: cypress/component/PageHeader.cy.tsx
================================================
import React from 'react';
import PageHeader from '@patternfly/react-component-groups/dist/dynamic/PageHeader';

describe('PageHeader', () => {
  it('should render PageHeader title and subtitle', () => {
    cy.mount(<PageHeader title='My title' subtitle='This is a subtitle for your page header' />);
    cy.get('title').should('exist')
    cy.get('[data-ouia-component-id="PageHeader-title"]').should('have.text', 'My title')
    cy.get('[data-ouia-component-id="PageHeader-subtitle"]').should('have.text', 'This is a subtitle for your page header')
  })
});


================================================
FILE: cypress/component/ResponsiveActions.cy.tsx
================================================
import React from 'react';
import { ResponsiveActions } from '@patternfly/react-component-groups/dist/dynamic/ResponsiveActions';
import { ResponsiveAction } from '@patternfly/react-component-groups/dist/dynamic/ResponsiveAction';

describe('ResponsiveActions', () => {
  beforeEach(() => {
    cy.viewport(1280, 2000);
  })

  it('renders persistent, pinned, and overflow actions', () => {
    cy.mount(
      <ResponsiveActions breakpoint="lg">
        <ResponsiveAction isPersistent>
          Persistent action
        </ResponsiveAction>
        <ResponsiveAction isPinned variant='secondary'>
          Pinned action
        </ResponsiveAction>
        <ResponsiveAction>
          Overflow action
        </ResponsiveAction>
      </ResponsiveActions>
    );

    cy.get('[data-ouia-component-id="ResponsiveActions-action-0"]').should('be.visible');
    cy.get('[data-ouia-component-id="ResponsiveActions-action-1"]').should('be.visible');
    cy.get('[data-ouia-component-id="ResponsiveActions-action-2"]').should('not.exist');

    cy.get('[data-ouia-component-id="ResponsiveActions-menu-dropdown-toggle"]').click();
    cy.get('[data-ouia-component-id="ResponsiveActions-action-2"]').should('be.visible');
  });
  
  it('handles click events on actions', () => {
    const onClickSpy = cy.spy().as('actionClickSpy');

    cy.mount(
      <ResponsiveActions breakpoint="lg">
        <ResponsiveAction isPersistent onClick={onClickSpy}>
          Persistent action
        </ResponsiveAction>
        <ResponsiveAction isPinned variant='secondary' onClick={onClickSpy}>
          Pinned action
        </ResponsiveAction>
        <ResponsiveAction onClick={onClickSpy}>
          Overflow action
        </ResponsiveAction>
      </ResponsiveActions>
    );

    cy.get('[data-ouia-component-id="ResponsiveActions-action-0"]').click();
    cy.get('@actionClickSpy').should('have.been.calledOnce');

    cy.get('[data-ouia-component-id="ResponsiveActions-action-1"]').click();
    cy.get('@actionClickSpy').should('have.been.calledTwice');

    cy.get('[data-ouia-component-id="ResponsiveActions-menu-dropdown-toggle"]').click();
    cy.get('[data-ouia-component-id="ResponsiveActions-action-2"]').click();
    cy.get('@actionClickSpy').should('have.been.calledThrice');
  });

  it('renders no persistent or pinned actions without flags', () => {
    cy.mount(
      <ResponsiveActions breakpoint="lg">
        <ResponsiveAction>
          Overflow action
        </ResponsiveAction>
      </ResponsiveActions>
    );

    cy.get('[data-ouia-component-id="menu-persistent-content"]').should('not.exist');
    cy.get('[data-ouia-component-id="menu-pinned-content"]').should('not.exist');

    cy.get('[data-ouia-component-id="ResponsiveActions-menu-dropdown-toggle"]').click();
    cy.contains('Overflow action').should('be.visible');
  });
});



================================================
FILE: cypress/component/ServiceCard.cy.tsx
================================================
import React from 'react';
import ServiceCard from '../../packages/module/dist/dynamic/ServiceCard';
import { Button, ButtonVariant } from '@patternfly/react-core';

describe('ServiceCard', () => {
  it('renders ServiceCard', () => {
    cy.mount(
      <ServiceCard
        title='Example'
        subtitle='A basic example'
        description='This is a basic ServiceCard Example'
        icon={<img src="/" alt="page-header-icon" />}
        helperText='Here is helper text'
        ouiaId='Example'
      />)
    cy.get('[data-ouia-component-id="Example-card"]').should('exist');
  });
  it('renders custom footer', () => {
    cy.mount(
      <ServiceCard
        title='Example'
        subtitle='A basic example'
        description='This is a basic ServiceCard Example'
        icon={<img src="/" alt="page-header-icon" />}
        helperText='Here is helper text'
        ouiaId='Example'
        footer={<>
          <Button
            variant={ButtonVariant.secondary}
            isInline
            className='pf-v5-u-pr-md'
            component="a"
            href='www.google.com'>
            Launch
          </Button>
          <Button
            variant={ButtonVariant.link}
            component="a"
            isInline
            href='www.google.com'
          >
            Learn More
          </Button></>
        }
      />)
    cy.get('[data-ouia-component-id="Example-footer"]').should('exist');
  })
});


================================================
FILE: cypress/component/Severity.cy.tsx
================================================
import React from 'react';
import Severity, { SeverityType } from '../../packages/module/dist/dynamic/Severity';

const severities = [    
  { type: SeverityType.critical, label: 'Critical severity', ouiaId: 'Severity-critical' },
  { type: SeverityType.important, label: 'Important severity', ouiaId: 'Severity-important' },
  { type: SeverityType.moderate, label: 'Moderate severity', ouiaId: 'Severity-moderate' },
  { type: SeverityType.minor, label: 'Minor severity', ouiaId: 'Severity-minor' },
  { type: SeverityType.none, label: 'No severity', ouiaId: 'Severity-none' },
  { type: SeverityType.undefined, label: 'Undefined severity', ouiaId: 'Severity-undefined' }
];

describe('Severity', () => {
  severities.map(({ type, label, ouiaId }) => {
    it(`renders Severity with ${type} severity`, () => {
      cy.mount(<Severity severity={type} label={label} ouiaId={ouiaId} />);
      cy.get(`[data-ouia-component-id="${ouiaId}"]`).should('exist');
      cy.get(`[data-ouia-component-id="${ouiaId}"]`).should('have.attr', 'title', label);
      cy.get('span').contains(label);
    });
  });
  
  it('hides label when labelHidden is true', () => {
    cy.mount(<Severity severity={SeverityType.important} label="Important severity" labelHidden />);
    cy.contains('Important severity').should('not.exist');
  });
});


================================================
FILE: cypress/component/ShortcutGrid.cy.tsx
================================================
import React from 'react';
import ShortcutGrid from '../../packages/module/dist/dynamic/ShortcutGrid';

const shortcuts = [ 
  { description: 'Open new tab', keys: [ 'cmd', 'shift', 't' ] }, 
  { description: 'Open new page', keys: [ 'opt', 'n' ] },
  { description: 'Move object', keys: [ 'ctrl' ], drag: true },  
];

describe('ShortcutGrid', () => {
  it('renders ShortcutGrid', () => {
    const shortCutGridExample = <ShortcutGrid 
      shortcuts={shortcuts}
    />
    cy.mount(shortCutGridExample);
    cy.get('[data-ouia-component-id="ShortcutGrid"]').should('exist');
    shortcuts.forEach((shortcut, index) => {
      cy.get(`[data-ouia-component-id="ShortcutGrid-item-description-${index}"]`)
        .should('have.text', shortcut.description);
    });
  });
})


================================================
FILE: cypress/component/SkeletonTable.cy.tsx
================================================
import React from 'react';
import { RowSelectVariant } from '@patternfly/react-table';
import SkeletonTable from '@patternfly/react-component-groups/dist/dynamic/SkeletonTable';

describe('SkeletonTable', () => {
  beforeEach(() => {
    cy.viewport(1600, 800);
  });

  it('renders SkeletonTable', () => {
    const SkeletonTableExample = <SkeletonTable rowsCount={10} columns={[ 'First', 'Second' ]} />;
    cy.mount(SkeletonTableExample);
    cy.get('table').should('exist');
    cy.get('table thead tr th').eq(0).should('have.text', 'First');
    cy.get('table thead tr th').eq(1).should('have.text', 'Second');
  });

  it ('can be used without passing columns', () => {
    const SkeletonTableExample = <SkeletonTable rowsCount={10} columnsCount={2} />;
    cy.mount(SkeletonTableExample);
    cy.get('table').should('exist');
    cy.get('table thead tr').should('have.text', '');
  });

  it('contains checkboxes when passed isSelectable', () => {
    const SkeletonTableExample = <SkeletonTable rowsCount={10} columns={[ 'First', 'Second' ]} isSelectable />;
    cy.mount(SkeletonTableExample);
    cy.get('table').should('exist');
    cy.get('table thead tr th').eq(0).should('have.text', 'Data selection table header cell');
    cy.get('table thead tr th').eq(1).should('have.text', 'First');
    cy.get('table thead tr th').eq(2).should('have.text', 'Second');
    cy.get('input[type="checkbox"]').should('have.length', 10);
  });

  it('is expandable when passed isExpandable', () => {
    const SkeletonTableExample = <SkeletonTable rowsCount={10} columns={[ 'First', 'Second' ]} isExpandable />;
    cy.mount(SkeletonTableExample);
    cy.get('table').should('exist');
    cy.get('table thead tr th').eq(0).should('have.text', 'Data expansion table header cell');
    cy.get('table thead tr th').eq(1).should('have.text', 'First');
    cy.get('table thead tr th').eq(2).should('have.text', 'Second');
    cy.get('.pf-v6-c-table__toggle-icon').should('have.length', 10);
  });

  it('can be passed a selectVariant to render radio buttons', () => {
    const SkeletonTableExample = <SkeletonTable rowsCount={10} columns={[ 'First', 'Second' ]} isSelectable selectVariant={RowSelectVariant.radio} />;
    cy.mount(SkeletonTableExample);
    cy.get('table').should('exist');
    cy.get('table thead tr th').eq(0).should('have.text', 'Data selection table header cell');
    cy.get('table thead tr th').eq(1).should('have.text', 'First');
    cy.get('table thead tr th').eq(2).should('have.text', 'Second');
    cy.get('input[type="radio"]').should('have.length', 10);
  });

  it('can be passed custom columns props', () => {
    const SkeletonTableExample = (
      <SkeletonTable
        rows={10}
        columns={[ 
          { cell: 'first', props: { sort: { columnIndex: 0, sortBy: { index: 0, direction: 'asc' } } } },
          { cell: 'second' },
          { cell: 'third' }
        ]}
      />
    );
    cy.mount(SkeletonTableExample);
    cy.get('table').should('exist');
    cy.get('table thead tr th').eq(0).should('have.text', 'first');
    cy.get('table thead tr th').eq(1).should('have.text', 'second');
    cy.get('table thead tr th').eq(2).should('have.text', 'third');
    cy.get('.pf-v6-c-table__sort-indicator').eq(0).find('path').should(
      'have.attr',
      'd',
      'M88 166.059V468c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12V166.059h46.059c21.382 0 32.09-25.851 16.971-40.971l-86.059-86.059c-9.373-9.373-24.569-9.373-33.941 0l-86.059 86.059c-15.119 15.119-4.411 40.971 16.971 40.971H88z' // ascending
    );
  })
});


================================================
FILE: cypress/component/SkeletonTableBody.cy.tsx
================================================
import React from 'react';
import { RowSelectVariant } from '@patternfly/react-table';
import SkeletonTableBody from '@patternfly/react-component-groups/dist/dynamic/SkeletonTableBody';

describe('SkeletonTableBody', () => {
  beforeEach(() => {
    cy.viewport(1600, 800);
  });

  it('renders SkeletonTableBody', () => {
    const SkeletonTableExample = <SkeletonTableBody rowsCount={10} columnsCount={2} />;
    cy.mount(SkeletonTableExample);
    cy.get('div[class="pf-v5-c-skeleton"]').should('have.length', 20);
  });

  it('contains checkboxes when passed isSelectable', () => {
    cy.mount(<SkeletonTableBody rowsCount={10} columnsCount={2} isSelectable />);
    cy.get('input[type="checkbox"]').should('have.length', 10);
  });

  it('is expandable when passed isExpandable', () => {
    cy.mount(<SkeletonTableBody rowsCount={10} columnsCount={2} isExpandable />);
    cy.get('.pf-v5-c-table__toggle-icon').should('have.length', 10);
  });

  it('can be passed a selectVariant to render radio buttons', () => {
    cy.mount(<SkeletonTableBody rowsCount={10} columnsCount={2} isSelectable selectVariant={RowSelectVariant.radio} />);
    cy.get('input[type="radio"]').should('have.length', 10);
  });
});


================================================
FILE: cypress/component/SkeletonTableHead.cy.tsx
================================================
import React from 'react';
import { Table } from '@patternfly/react-table';
import { SkeletonTableHead } from '@patternfly/react-component-groups/dist/dynamic/SkeletonTableHead';

describe('SkeletonTableHead', () => {
  beforeEach(() => {
    cy.viewport(1600, 800);
  });

  it('renders SkeletonTable with custom columns', () => {
    const SkeletonTableExample = (
      <Table>
        <SkeletonTableHead columns={[ 'First', 'Second' ]} />
      </Table>
    );
    cy.mount(SkeletonTableExample);
    cy.get('table thead tr th').eq(0).should('have.text', 'First');
    cy.get('table thead tr th').eq(1).should('have.text', 'Second');
  });

  it('renders SkeletonTable with column count but no custom columns', () => {
    const SkeletonTableExample = (
      <Table>
        <SkeletonTableHead columnsCount={2} />
      </Table>
    );
    cy.mount(SkeletonTableExample);
    cy.get('table thead tr th').should('have.length', 2);
    cy.get('table thead tr th').each((th) => {
      cy.wrap(th).find('.pf-v5-c-skeleton').should('exist');
    });
  });

  it('renders SkeletonTable with selectable column', () => {
    const SkeletonTableExample = (
      <Table>
        <SkeletonTableHead columns={[ 'First' ]} isSelectable />
      </Table>
    );
    cy.mount(SkeletonTableExample);
    cy.get('table thead tr th').should('have.length', 2);
    cy.get('table thead tr th').eq(0).should('have.text', 'Data selection table header cell');
  });

  it('renders SkeletonTable with expandable column', () => {
    const SkeletonTableExample = (
      <Table>
        <SkeletonTableHead columns={[ 'First' ]} isExpandable />
      </Table>
    );
    cy.mount(SkeletonTableExample);
    cy.get('table thead tr th').should('have.length', 2);
    cy.get('table thead tr th').eq(0).should('have.text', 'Data expansion table header cell');
  });

  it('renders SkeletonTable with selectable and expandable columns', () => {
    const SkeletonTableExample = (
      <Table>
        <SkeletonTableHead columns={[ 'First', 'Second' ]} isSelectable isExpandable />
      </Table>
    );
    cy.mount(SkeletonTableExample);
    cy.get('table thead tr th').should('have.length', 4);
  });

  it('renders SkeletonTable with custom ouiaId', () => {
    const customOuiaId = 'CustomOuia';
    const SkeletonTableExample = (
      <Table>
        <SkeletonTableHead columns={[ 'First', 'Second' ]} ouiaId={customOuiaId} />
      </Table>
    );
    cy.mount(SkeletonTableExample);
    cy.get('thead').should('have.attr', 'data-ouia-component-id', `${customOuiaId}-thead`);
    cy.get('th').each((th, index) => {
      cy.wrap(th).should('have.attr', 'data-ouia-component-id', `${customOuiaId}-th-${index}`);
    });
  });

  it('handles no columns and no columnsCount', () => {
    const SkeletonTableExample = (
      <Table>
        <SkeletonTableHead />
      </Table>
    );
    cy.mount(SkeletonTableExample);
    cy.get('table thead tr th').should('have.length', 1);
  });
});



================================================
FILE: cypress/component/Status.cy.tsx
================================================
import * as React from 'react';
import { ExclamationTriangleIcon, CheckCircleIcon, BanIcon } from '@patternfly/react-icons';
import { Button, ButtonVariant, ButtonSize } from '@patternfly/react-core';
import { IconStatus, Status, StatusVariant } from '../../packages/module/dist/dynamic/Status';

describe('Status', () => {
  
  it('should render with label and icon', () => {
    cy.mount(<Status status={IconStatus.warning} label='Warning' icon={<ExclamationTriangleIcon/>} />);
    cy.get(`[data-ouia-component-id="Status-label"]`).should('be.visible');
    cy.get(`[data-ouia-component-id="Status-icon"]`).should('be.visible');
  });

  it('should render with iconOnly', () => {
    cy.mount(<Status iconOnly status={IconStatus.warning} label='Warning' iconTitle='1 security issue found' icon={<ExclamationTriangleIcon/>} />);
    cy.get(`[data-ouia-component-id="Status-label"]`).should('not.exist');
    cy.get(`[data-ouia-component-id="Status-icon"]`).should('be.visible');
  });

  it('should render link variant and handle click', () => {
    const handleClick = cy.stub().as('handleClick');
    cy.mount(<Status status={IconStatus.success} variant={StatusVariant.link} label='Ready' onClick={handleClick} icon={<CheckCircleIcon/>} />);
    cy.get(`[data-ouia-component-id="Status-label"]`).should('be.visible');
    cy.get(`[data-ouia-component-id="Status-icon"]`).should('be.visible');
    cy.get(`[data-ouia-component-id="Status-link-icon"]`).click();
    cy.get('@handleClick').should('have.been.calledOnce');

  });

  it('should render popover variant and handle open/close', () => {
    cy.mount(
      <Status
        status={IconStatus.danger}
        variant={StatusVariant.popover} 
        label='Not Ready' 
        icon={<BanIcon/>}
        popoverProps={{ 
          bodyContent: 'Example state description', 
          footerContent: <Button size={ButtonSize.sm} variant={ButtonVariant.link} isInline>Action</Button> 
        }}
      />
    );
    cy.get(`[data-ouia-component-id="Status-label"]`).should('be.visible');
    cy.get(`[data-ouia-component-id="Status-icon"]`).should('be.visible');

    cy.get(`[data-ouia-component-id="Status-popover-icon"]`).click();
    cy.get('[role="dialog"]').should('be.visible');
    cy.get('body').click(0, 0);
    cy.get('[role="dialog"]').should('not.exist');

  });

  it('should render with description', () => {
    cy.mount(<Status status={IconStatus.warning} label='Warning' description='1 issue found' icon={<ExclamationTriangleIcon/>} />);
    cy.get(`[data-ouia-component-id="Status-label"]`).should('be.visible');
    cy.get(`[data-ouia-component-id="Status-icon"]`).should('be.visible');
    cy.get(`[data-ouia-component-id="Status-description"]`).should('be.visible');
  });

});


================================================
FILE: cypress/component/TagCount.cy.tsx
================================================
import React from 'react';
import TagCount from '../../packages/module/dist/dynamic/TagCount';

describe('TagCount', () => {
  it('renders TagCount', () => {
    cy.mount(<TagCount count={50} />)
    cy.get('button[data-ouia-component-id="TagCount"]').should('exist');
    cy.get('[data-ouia-component-id="TagCount-text"]').contains('50');
  });

  it('render disabled', () => {
    cy.mount(<TagCount disabled={true} />)
    cy.get('button[data-ouia-component-id="TagCount"]').should('be.disabled');
  });
});


================================================
FILE: cypress/component/UnavailableContent.cy.tsx
================================================
import React from 'react';
import UnavailableContent from '../../packages/module/dist/dynamic/UnavailableContent';

describe('UnavailableContent', () => {
  it('renders UnavailableContent', () => {
    cy.mount(<UnavailableContent />)
    cy.get('[data-ouia-component-id="UnavailableContent"]').should('exist');
    cy.get('[data-ouia-component-id="UnavailableContent"]').contains('This page is temporarily unavailable');
    cy.get('[data-ouia-component-id="UnavailableContent-body"]').contains('Try refreshing the page. If the problem persists, contact your organization administrator or visit our status page for known outages.');
  });
});


================================================
FILE: cypress/component/WarningModal.cy.tsx
================================================
import React from 'react';
import { Button, ButtonVariant } from '@patternfly/react-core';
import WarningModal from '../../packages/module/dist/dynamic/WarningModal';

const BasicModal: React.FunctionComponent = () => {
  const [ isOpen, setIsOpen ] = React.useState(false);
  return <>
    <Button onClick={() => setIsOpen(true)}>Open modal</Button>
    <WarningModal
      isOpen={isOpen}
      title='Unsaved changes'
      confirmButtonLabel='Yes'
      cancelButtonLabel='No'
      onClose={() => setIsOpen(false)}
      onConfirm={() => setIsOpen(false)}>
      Your page contains unsaved changes. Do you want to leave?
    </WarningModal>
  </>
};

const CheckboxModal: React.FunctionComponent = () => {
  const [ isOpen, setIsOpen ] = React.useState(false);
  return <>
    <Button onClick={() => setIsOpen(true)}>Open modal</Button>
    <WarningModal
      isOpen={isOpen}
      title='Unsaved changes'
      confirmButtonLabel='Yes'
      cancelButtonLabel='No'
      onClose={() => setIsOpen(false)}
      onConfirm={() => setIsOpen(false)}
      withCheckbox
      checkboxLabel='Are you sure?'
      confirmButtonVariant={ButtonVariant.danger}>
      Your page contains unsaved changes. Do you want to leave?
    </WarningModal>
  </>
};

const TextConfirmationModal: React.FunctionComponent = () => {
  const [ isOpen, setIsOpen ] = React.useState(false);
  return <>
    <Button onClick={() => setIsOpen(true)}>Open modal</Button>
    <WarningModal
      isOpen={isOpen}
      title='Delete item?'
      confirmButtonLabel='Yes'
      cancelButtonLabel='No'
      onClose={() => setIsOpen(false)}
      onConfirm={() => setIsOpen(false)}
      textConfirmation={{ type: 'text', isRequired: true }}
      deleteName='Item1'>
      The item will be deleted.
    </WarningModal>
  </>
};

describe('WarningModal', () => {
  it('renders WarningModal', () => {
    cy.mount(<BasicModal />);
    cy.get('button').click();
    cy.get('[data-ouia-component-id="WarningModal"]').should('exist');
    cy.get('[data-ouia-component-id="WarningModal"]').contains('Unsaved changes');
    cy.get('[data-ouia-component-id="WarningModal"]').contains('Your page contains unsaved changes. Do you want to leave?');
  });

  it('confirm button should be disabled if checkbox is not checked', () => {
    cy.mount(<CheckboxModal />);
    cy.get('button').click();
    cy.get('[data-ouia-component-id="WarningModal-confirm-button"').should('have.attr', 'disabled');
    cy.get('[data-ouia-component-id="WarningModal-confirm-checkbox"').click();
    cy.get('[data-ouia-component-id="WarningModal-confirm-button"').should('not.have.attr', 'disabled');
  });

  it('should reset the confirmation checkbox once reopened', () => {
    cy.mount(<CheckboxModal />);
    cy.get('button').click();
    cy.get('[data-ouia-component-id="WarningModal-confirm-checkbox"').click();
    cy.get('[data-ouia-component-id="WarningModal-confirm-button"').click();
    cy.get('button').click();
    cy.get('[data-ouia-component-id="WarningModal-confirm-button"').should('have.attr', 'disabled');
  });

  it('confirm button should be enabled only when confirmation text matches the item name', () => {
    cy.mount(<TextConfirmationModal />);
    cy.get('button').click();
    cy.get('[data-ouia-component-id="WarningModal-confirmation-text-input"').type('abcd');
    cy.get('[data-ouia-component-id="WarningModal-confirm-button"').should('have.attr', 'disabled');
    cy.get('[data-ouia-component-id="WarningModal-confirmation-text-input"').clear();
    cy.get('[data-ouia-component-id="WarningModal-confirmation-text-input"').type('Item1');
    cy.get('[data-ouia-component-id="WarningModal-confirm-button"').should('not.have.attr', 'disabled');
  });
});


================================================
FILE: cypress/e2e/CloseButton.spec.cy.ts
================================================
describe('Test the close button', () => {
  it('passes', () => {
    cy.visit('http://localhost:8006/component-groups/controls/close-button', { onBeforeLoad: (win) => {cy.stub(win.console, 'log').as('consoleLog');}, });
    cy.wait(1000);

    cy.get('[data-test-id="close-button-example"]').click();
    cy.wait(1000);
    cy.get('@consoleLog').should('be.calledWith', 'Close button clicked');
  })
})


================================================
FILE: cypress/fixtures/example.json
================================================
{
  "name": "Using fixtures to represent data",
  "email": "hello@cypress.io",
  "body": "Fixtures are a great way to mock data for responses to routes"
}



================================================
FILE: cypress/support/commands.ts
================================================
/// <reference types="cypress" />
// ***********************************************
// This example commands.ts shows you how to
// create various custom commands and overwrite
// existing commands.
//
// For more comprehensive examples of custom
// commands please read more here:
// https://on.cypress.io/custom-commands
// ***********************************************
//
//
// -- This is a parent command --
// Cypress.Commands.add('login', (email, password) => { ... })
//
//
// -- This is a child command --
// Cypress.Commands.add('drag', { prevSubject: 'element'}, (subject, options) => { ... })
//
//
// -- This is a dual command --
// Cypress.Commands.add('dismiss', { prevSubject: 'optional'}, (subject, options) => { ... })
//
//
// -- This will overwrite an existing command --
// Cypress.Commands.overwrite('visit', (originalFn, url, options) => { ... })
//
// declare global {
//   namespace Cypress {
//     interface Chainable {
//       login(email: string, password: string): Chainable<void>
//       drag(subject: string, options?: Partial<TypeOptions>): Chainable<Element>
//       dismiss(subject: string, options?: Partial<TypeOptions>): Chainable<Element>
//       visit(originalFn: CommandOriginalFn, url: string, options: Partial<VisitOptions>): Chainable<Element>
//     }
//   }
// }


================================================
FILE: cypress/support/component-index.html
================================================
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <title>Components App</title>
  </head>
  <body>
    <div data-cy-root></div>
  </body>
</html>


================================================
FILE: cypress/support/component.ts
================================================
/* eslint-disable @typescript-eslint/no-namespace */
// ***********************************************************
// This example support/component.ts is processed and
// loaded automatically before your test files.
//
// This is a great place to put global configuration and
// behavior that modifies Cypress.
//
// You can change the location of this file or turn off
// automatically serving support files with the
// 'supportFile' configuration option.
//
// You can read more here:
// https://on.cypress.io/configuration
// ***********************************************************

// Import commands.js using ES2015 syntax:
import './commands'

// Alternatively you can use CommonJS syntax:
// require('./commands')

import { mount } from 'cypress/react18'

// Patternfly
import '@patternfly/patternfly/patternfly.css';
// Patternfly utilities
import '@patternfly/patternfly/patternfly-addons.css';
// Global theme CSS
import '@patternfly/documentation-framework/global.css';

// Augment the Cypress namespace to include type definitions for
// your custom command.
// Alternatively, can be defined in cypress/support/component.d.ts
// with a <reference path="./component" /> at the top of your spec.
declare global {
  namespace Cypress {
    interface Chainable {
      mount: typeof mount
    }
  }
}

Cypress.Commands.add('mount', mount)

Cypress.on('uncaught:exception', (_err, _runnable) => false)

// Example use:
// cy.mount(<MyComponent />)


================================================
FILE: cypress/support/e2e.ts
================================================
// ***********************************************************
// This example support/e2e.ts is processed and
// loaded automatically before your test files.
//
// This is a great place to put global configuration and
// behavior that modifies Cypress.
//
// You can change the location of this file or turn off
// automatically serving support files with the
// 'supportFile' configuration option.
//
// You can read more here:
// https://on.cypress.io/configuration
// ***********************************************************

// Import commands.js using ES2015 syntax:
import './commands'

// Alternatively you can use CommonJS syntax:
// require('./commands')


================================================
FILE: cypress/support/tsconfig.json
================================================
{
  "compilerOptions": {
    "sourceMap": false,
    "noImplicitAny": true,
    "module": "esnext",
    "target": "esnext",
    "jsx": "react",
    "moduleResolution": "node",
    "removeComments": false,
    "strict": true,
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true,
    "baseUrl": "./",
    "types": ["cypress", "node"]
  },
  "include": ["./**/*.ts", "./**/*.tsx"],
  "exclude": [
    "../src/**/*.test.ts",
    "../src/**/*.test.tsx",
    "../src/**/*.spec.tsx",
    "../src/**/*.spec.ts",
    "../src/**/__mocks__/**/*.ts",
    "../src/**/__mocks__/**/*.tx",
  ]
}


================================================
FILE: packages/module/generate-fed-package-json.js
================================================
const fse = require('fs-extra');
const { globSync } = require('glob');
const path = require('path');

const root = process.cwd();

const sourceFiles = globSync(`${root}/src/*/`)
  .map((name) => name.replace(/\/$/, ''));
  
const indexTypings = globSync(`${root}/src/index.d.ts`);

const ENV_AGNOSTIC_ROOT = `${root}/dist/dynamic`

async function copyTypings(files, dest) {
  const cmds = [];
  files.forEach((file) => {
    const fileName = file.split('/').pop();
    cmds.push(fse.copyFile(file, `${dest}/${fileName}`));
  });
  return Promise.all(cmds);
}

async function createPackage(file) {
  const fileName = file.split('/').pop();
  const esmSource = globSync(`${root}/dist/esm/${fileName}/**/index.js`)[0];
  const cjsSource = globSync(`${root}/dist/cjs/${fileName}/**/index.js`)[0];
  const typingsSource = globSync(`${root}/dist/esm/${fileName}/**/index.d.ts`)[0]
  /**
   * Prevent creating package.json for directories with no JS files (like CSS directories)
   */
  if (!esmSource) {
    return;
  }

  const destDir = path.resolve(`${ENV_AGNOSTIC_ROOT}`, fileName)
  const destFile = `${destDir}/package.json`;

  // ensure the directory exists
  fse.ensureDirSync(destDir)

  const esmRelative = path.relative(file, esmSource).replace('/dist', '');
  const cjsRelative = path.relative(file, cjsSource).replace('/dist', '');
  const tsRelative = path.relative(file, typingsSource).replace('/dist', '')
  const content = {
    main: cjsRelative,
    module: esmRelative,
  };
  const typings = globSync(`${root}/src/${fileName}/*.d.ts`);
  const cmds = [];
  content.typings = tsRelative;
  cmds.push(copyTypings(typings, `${root}/dist/${fileName}`));
  cmds.push(fse.writeJSON(destFile, content));
  return Promise.all(cmds);
}

async function generatePackages(files) {
  // ensure the dynamic root exists
  fse.ensureDirSync(path.resolve(ENV_AGNOSTIC_ROOT))
  const cmds = files.map((file) => createPackage(file));
  return Promise.all(cmds);
}

async function run(files) {
  try {
    await generatePackages(files);
    if (indexTypings.length === 1) {
      copyTypings(indexTypings, root);
    }
  } catch (error) {
    // eslint-disable-next-line no-console
    console.error(error);
    process.exit(1);
  }
}

run(sourceFiles);


================================================
FILE: packages/module/generate-index.js
================================================
const fse = require('fs-extra');
const { globSync } = require('glob');
const path = require('path');

const root = process.cwd();

const ENV_AGNOSTIC_ROOT = `${root}/src`

const sourceFiles = globSync(path.resolve(__dirname, './src/*/index.ts'))

async function generateIndex(files) {
  // ensure the dynamic root exists
  fse.ensureDirSync(path.resolve(ENV_AGNOSTIC_ROOT));

  const destFile = `${ENV_AGNOSTIC_ROOT}/index.ts`;

  const stream = fse.createWriteStream(destFile);
  stream.once('open', () => {
    stream.write('// this file is autogenerated by generate-index.js, modifying it manually will have no effect\n');

    files.forEach(file => {
      const name = file.replace('/index.ts', '').split('/').pop();
      stream.write(`\nexport { default as ${name} } from './${name}';\n`);
      stream.write(`export * from './${name}';\n`);
    });
    stream.end();
  });

  return Promise.resolve();
}

async function run(files) {
  try {
    await generateIndex(files);

  } catch (error) {
    // eslint-disable-next-line no-console
    console.error(error);
    process.exit(1);
  }
}
  
run(sourceFiles);
  


================================================
FILE: packages/module/package.json
================================================
{
  "name": "@patternfly/react-component-groups",
  "version": "5.0.0-prerelease.0",
  "description": "Extended components used for Red Hat projects.",
  "main": "dist/cjs/index.js",
  "module": "dist/esm/index.js",
  "scripts": {
    "build": "npm run build:index && npm run build:js && npm run build:esm && npm run build:fed:packages",
    "build:watch": "npm run build:js && npm run build:esm -- --watch && npm run build:fed:packages -- --watch",
    "build:esm": "tsc --build --verbose ./tsconfig.json",
    "build:fed:packages": "node generate-fed-package-json.js",
    "build:js": "tsc -p tsconfig.cjs.json",
    "build:index": "node generate-index.js",
    "clean": "rimraf dist",
    "docs:develop": "pf-docs-framework start",
    "docs:build": "pf-docs-framework build all --output public",
    "docs:serve": "pf-docs-framework serve public --port 5001",
    "docs:screenshots": "pf-docs-framework screenshots --urlPrefix http://localhost:5001",
    "test:a11y": "patternfly-a11y --config patternfly-a11y.config",
    "serve:a11y": "serve coverage"
  },
  "repository": "git+https://github.com/patternfly/react-component-groups.git",
  "author": "Red Hat",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/patternfly/react-component-groups/issues"
  },
  "homepage": "https://github.com/patternfly/react-component-groups#readme",
  "publishConfig": {
    "access": "public",
    "tag": "alpha"
  },
  "dependencies": {
    "@patternfly/react-core": "^6.0.0",
    "@patternfly/react-icons": "^6.0.0",
    "@patternfly/react-table": "^6.0.0",
    "react-jss": "^10.10.0",
    "clsx": "^2.1.1"
  },
  "peerDependencies": {
    "react": "^17 || ^18",
    "react-dom": "^17 || ^18"
  },
  "devDependencies": {
    "@patternfly/patternfly-a11y": "^5.1.0",
    "@patternfly/documentation-framework": "^6.5.16",
    "@patternfly/react-code-editor": "^6.0.0",
    "@patternfly/patternfly": "^6.0.0",
    "@types/react": "^18.2.33",
    "@types/react-dom": "^18.3.1",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "typescript": "^5.8.3"
  }
}



================================================
FILE: packages/module/patternfly-a11y.config.js
================================================
const { fullscreenRoutes } = require('@patternfly/documentation-framework/routes');

/**
 * Wait for a selector before running axe
 *
 * @param page page from puppeteer
 */
async function waitFor(page) {
  await page.waitForSelector('#root > *');
}

const urls = Object.keys(fullscreenRoutes)
  .map((key) => (fullscreenRoutes[key].isFullscreenOnly ? key : fullscreenRoutes[key].path.replace(/\/react$/, '')))
  .reduce((result, item) => (result.includes(item) ? result : [ ...result, item ]), []);

module.exports = {
  prefix: 'http://localhost:5001',
  waitFor,
  crawl: false,
  urls: [ ...urls ],
  ignoreRules: [
    'color-contrast',
    'landmark-no-duplicate-main',
    'landmark-main-is-top-level',
    'scrollable-region-focusable',
    'link-in-text-block'
  ].join(','),
  ignoreIncomplete: true
};



================================================
FILE: packages/module/release.config.js
================================================
module.exports = {
  branches: [
    'do-not-delete',
    { name: 'main', channel: 'prerelease', prerelease: 'prerelease' },
    { name: 'v5', channel: 'prerelease-v5' }
  ],
  analyzeCommits: {
    preset: 'angular'
  },
  plugins: [
    '@semantic-release/commit-analyzer',
    '@semantic-release/release-notes-generator',
    '@semantic-release/github',
    '@semantic-release/npm'
  ],
  tagFormat: 'prerelease-v${version}',
  dryRun: false
};



================================================
FILE: packages/module/tsconfig.cjs.json
================================================
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "./dist/cjs",
    "module": "commonjs"
  }
}
  


================================================
FILE: packages/module/tsconfig.json
================================================
{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Basic Options */
    // "incremental": true,                         /* Enable incremental compilation */
    "target": "es2015" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */,
    "module": "es2015" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
    // "lib": [],                                   /* Specify library files to be included in the compilation. */
    // "allowJs": true,                             /* Allow javascript files to be compiled. */
    // "checkJs": true,                             /* Report errors in .js files. */
    "jsx": "react" /* Specify JSX code generation: 'preserve', 'react-native', 'react', 'react-jsx' or 'react-jsxdev'. */,
    "declaration": true /* Generates corresponding '.d.ts' file. */,
    // "declarationMap": true,                      /* Generates a sourcemap for each corresponding '.d.ts' file. */
    // "sourceMap": true,                           /* Generates corresponding '.map' file. */
    // "outFile": "./",                             /* Concatenate and emit output to single file. */
    "outDir": "./dist/esm" /* Redirect output structure to the directory. */,
    "rootDir": "./src" /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
    // "composite": true,                           /* Enable project compilation */
    // "tsBuildInfoFile": "./",                     /* Specify file to store incremental compilation information */
    // "removeComments": true,                      /* Do not emit comments to output. */
    // "noEmit": true,                              /* Do not emit outputs. */
    // "importHelpers": true,                       /* Import emit helpers from 'tslib'. */
    // "downlevelIteration": true,                  /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "isolatedModules": true,                     /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": false,                       /* Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,                    /* Enable strict null checks. */
    // "strictFunctionTypes": true,                 /* Enable strict checking of function types. */
    // "strictBindCallApply": true,                 /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,        /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                      /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                        /* Parse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks */
    // "noUnusedLocals": true,                      /* Report errors on unused locals. */
    // "noUnusedParameters": true,                  /* Report errors on unused parameters. */
    // "noImplicitReturns": true,                   /* Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": true,          /* Report errors for fallthrough cases in switch statement. */
    // "noUncheckedIndexedAccess": true,            /* Include 'undefined' in index signature results */
    // "noImplicitOverride": true,                  /* Ensure overriding members in derived classes are marked with an 'override' modifier. */
    // "noPropertyAccessFromIndexSignature": true,  /* Require undeclared properties from index signatures to use element accesses. */

    /* Module Resolution Options */
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    // "baseUrl": "./",                             /* Base directory to resolve non-absolute module names. */
    // "paths": {},                                 /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                              /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],                             /* List of folders to include type definitions from. */
    "types": ["@testing-library/jest-dom"],         /* Type declaration files to be included in compilation. */
    // "allowSyntheticDefaultImports": true,        /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    // "preserveSymlinks": true,                    /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,                /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                            /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                               /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,                     /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                       /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // "experimentalDecorators": true,              /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,               /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */
  },
  "include": ["./src/*", "./src/**/*", "./cypress/**/*"],
}



================================================
FILE: packages/module/patternfly-docs/patternfly-docs.config.js
================================================
// This module is shared between NodeJS and babelled ES5
module.exports = {
  sideNavItems: [ { section: 'Component groups' } ],
  topNavItems: [],
  port: 8006
};



================================================
FILE: packages/module/patternfly-docs/patternfly-docs.css.js
================================================
// Patternfly
import '@patternfly/patternfly/patternfly.css';
// Patternfly utilities
import '@patternfly/patternfly/patternfly-addons.css';
// Global theme CSS
import '@patternfly/documentation-framework/global.css';

// Add your extension CSS below



================================================
FILE: packages/module/patternfly-docs/patternfly-docs.routes.js
================================================
// This module is shared between NodeJS and babelled ES5
const isClient = Boolean(process.env.NODE_ENV);

module.exports = {
  '/': {
    SyncComponent: isClient && require('./pages/index').default
  },
  '/404': {
    SyncComponent: isClient && require('@patternfly/documentation-framework/pages/404/index').default,
    title: '404 Error'
  }
};



================================================
FILE: packages/module/patternfly-docs/patternfly-docs.source.js
================================================
const path = require('path');

module.exports = (sourceMD, sourceProps) => {
  // Parse source content for props so that we can display them
  const propsIgnore = [ '**/*.test.tsx', '**/examples/*.tsx' ];
  const extensionPath = path.join(__dirname, '../src');
  sourceProps(path.join(extensionPath, '/**/*.tsx'), propsIgnore);

  // Parse md files
  const contentBase = path.join(__dirname, './content');
  sourceMD(path.join(contentBase, 'extensions/**/*.md'), 'extensions');

  /**
    If you want to parse content from node_modules instead of providing a relative/absolute path, 
    you can do something similar to this:
    const extensionPath = require
      .resolve('@patternfly/react-log-viewer/package.json')
      .replace('package.json', 'src');
    sourceProps(path.join(extensionPath, '/**\/*.tsx'), propsIgnore);
    sourceMD(path.join(extensionPath, '../patternfly-docs/**\/examples/*.md'), 'react');
    sourceMD(path.join(extensionPath, '../patternfly-docs/**\/demos/*.md'), 'react-demos');
    sourceMD(path.join(extensionPath, '../patternfly-docs/**\/design-guidelines/*.md'), 'design-guidelines');
  */
};



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/about-component-groups.md
================================================
---
section: Component groups
id: About component groups
sortValue: 1
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/about-component-groups.md
--- 
import { SectionGallery } from '@patternfly/documentation-framework/components/sectionGallery/sectionGallery';
import galleryData from './gallery-data.json';

Component groups lives in its own package [`@patternfly/react-component-groups`](https://www.npmjs.com/package/@patternfly/react-component-groups) 

**Note:** This extension replaces [`RedHatInsights/frontend-components`](https://github.com/RedHatInsights/frontend-components). If you previously used `frontend-components`, you can refer to [this migration guide](https://github.com/patternfly/react-component-groups/blob/main/migration.md) to help you transition to `react-component-groups`.

# Component groups

The component groups extension contains a range of React components that are more complex than basic PatternFly components. These component groups combine and adjust multiple base components to provide opinionated solutions for recurring use cases across products using PatternFly.

The creation and maintenance of this extension is a collaborative effort between the PatternFly and Red Hat Hybrid Cloud Console teams. All component groups receive accessibility and design reviews, and we are working to improve internationalization, add test coverage, and ensure that CSS overrides all correctly reference the PatternFly CSS API.

There are a few different functional categories of component groups:

<SectionGallery
  section="Component groups"
  galleryItemsData={galleryData}
  placeholderText="Search component groups by name"
  includeSubsections={true}
  hasGridText={true}
  isFullWidth={false}
/>

## Contribution guidelines

The code for component groups lives in the [`patternfly/react-component-groups repository`](https://github.com/patternfly/react-component-groups).

Specific contribution guidelines and instructions are outlined in [the component groups GitHub README](https://github.com/patternfly/react-component-groups#readme).

### Reporting bugs and requesting new features

We aim to align the standards of component groups as closely as possible with existing PatternFly standards. Given that this is a multi-team collaboration, we will continue to work towards this goal together.

If you notice a bug or have a suggestion for a new component group, open an issue in our [GitHub repository](https://github.com/patternfly/react-component-groups/issues)! Please make sure to check if there is already a pre-existing issue before creating a new one. 



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/gallery-data.json
================================================
{
    "content-containers": {
      "summary": "Organize and display information in structured or flexible containers."
    }, 
    "controls": {
      "summary": "Enable more effective navigation and selection by providing users with options for interaction and input."
    },
    "error-communication": {
      "summary": "Communicate issues or restrictions through error and alert states."
    },
    "helpers": {
      "summary": "Provide users with utilities that enhance usability and provide additional guidance or information within the UI."
    },
    "status-and-state-indicators": {
      "summary": "Inform users of system conditions or processes through visualizations of entity states, statuses, and loading indicators."
    }
  }



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Ansible/Ansible.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Status and state indicators
# Sidenav secondary level section
# should be the same for all markdown files
id: Ansible
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['Ansible']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/Ansible/Ansible.md
---

import Ansible from '@patternfly/react-component-groups/dist/dynamic/Ansible';

The **Ansible** component displays the Ansible project logo, with a support status style.

### Ansible supported

By default, the Ansible logo displays as normal and in full color, meaning that it is supported. 

```js file="./AnsibleSupportedExample.tsx"

```

### Ansible unsupported

To specify that Ansible is not supported, set the `isSupported` property to `false`.

```js file="./AnsibleUnsupportedExample.tsx"

```


### Red Hat Ansible Automation Platform 

To display the Red Hat Ansible Automation Platform, add the `isRHAAP` property to the `<Ansible>` component.

```js file="./AnsibleTechnologyExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Ansible/AnsibleSupportedExample.tsx
================================================
import React from 'react';
import Ansible from '@patternfly/react-component-groups/dist/dynamic/Ansible';

export const BasicExample: React.FunctionComponent = () => <Ansible />;



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Ansible/AnsibleTechnologyExample.tsx
================================================
import React from 'react';
import Ansible from '@patternfly/react-component-groups/dist/dynamic/Ansible';

export const BasicExample: React.FunctionComponent = () => (
  <Ansible isRHAAP/>
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Ansible/AnsibleUnsupportedExample.tsx
================================================
import React from 'react';
import Ansible from '@patternfly/react-component-groups/dist/dynamic/Ansible';

export const BasicExample: React.FunctionComponent = () => <Ansible isSupported={false} />;



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/BulkSelect/BulkSelect.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Controls
# Sidenav secondary level section
# should be the same for all markdown files
id: Bulk select
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['BulkSelect']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/BulkSelect/BulkSelect.md
---
import { useState } from 'react';
import { BulkSelect, BulkSelectValue } from '@patternfly/react-component-groups/dist/dynamic/BulkSelect';

The **bulk select** provides a way of selecting data records in batches. You can select all data at once, all data on current page or deselect all.

## Examples

### Basic paginated bulk select

To display a default bulk select, you need to pass number of selected items using `selectedCount`, the `onSelect` callback accepting bulk select option values and selecting data accordingly, `pageCount` defining number of items on the current page, `pageSelected` and `pagePartiallySelected` boolean flags to define the state os the bulk select checkbox..

```js file="./BulkSelectExample.tsx"

```

### Bulk select with all option

To display an option for selecting all data at once, pass `canSelectAll` flag together with `totalCount` of data entries. You can also remove the page select option by setting `isDataPaginated` to `false`,

```js file="./BulkSelectAllExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/BulkSelect/BulkSelectAllExample.tsx
================================================
import React, { useState } from 'react';
import { BulkSelect, BulkSelectValue } from '@patternfly/react-component-groups/dist/dynamic/BulkSelect';

const allData = [ "Item 1", "Item 2" , "Item 3", "Item4", "Item 5" ];
const pageData = [ "Item 1", "Item 2" ];

export const BasicExample: React.FunctionComponent = () => { 
  const [ selected, setSelected ] = useState<string[]>(pageData);

  const handleBulkSelect = (value: BulkSelectValue) => {
    value === BulkSelectValue.none && setSelected([]);
    value === BulkSelectValue.all && setSelected(allData);
    value === BulkSelectValue.nonePage && setSelected(selected.filter(item => !pageData.includes(item)));
    value === BulkSelectValue.page && setSelected(Array.from(new Set([ ...selected, ...pageData ])));
  };

  return (
    <BulkSelect
      canSelectAll
      selectedCount={selected.length}
      pageCount={pageData.length}
      totalCount={allData.length}
      onSelect={handleBulkSelect}
      pageSelected={pageData.every(item => selected.includes(item))}
      pagePartiallySelected={pageData.some(item => selected.includes(item)) && !pageData.every(item => selected.includes(item))}
    />
  );
}


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/BulkSelect/BulkSelectExample.tsx
================================================
import React, { useState } from 'react';
import { BulkSelect, BulkSelectValue } from '@patternfly/react-component-groups/dist/dynamic/BulkSelect';

const allData = [ "Item 1", "Item 2" , "Item 3", "Item4", "Item 5" ];
const pageData = [ "Item 1", "Item 2" ];

export const BasicExample: React.FunctionComponent = () => { 
  const [ selected, setSelected ] = useState<string[]>([]);

  const handleBulkSelect = (value: BulkSelectValue) => {
    value === BulkSelectValue.none && setSelected([]);
    value === BulkSelectValue.all && setSelected(allData);
    value === BulkSelectValue.nonePage && setSelected(selected.filter(item => !pageData.includes(item)));
    value === BulkSelectValue.page && setSelected(Array.from(new Set([ ...selected, ...pageData ])));
  };

  return (
    <BulkSelect
      selectedCount={selected.length}
      pageCount={pageData.length}
      onSelect={handleBulkSelect}
      pageSelected={pageData.every(item => selected.includes(item))}
      pagePartiallySelected={pageData.some(item => selected.includes(item)) && !pageData.every(item => selected.includes(item))}
    />
  );
}


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/CloseButton/CloseButton.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Controls
# Sidenav secondary level section
# should be the same for all markdown files
id: Close button
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['CloseButton']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/CloseButton/CloseButton.md
---

import { CloseIcon } from '@patternfly/react-icons';
import CloseButton from '@patternfly/react-component-groups/dist/dynamic/CloseButton';

The **close button** component provides a way for users to exit a modal, dialogue, or similar action. To further customize this component, you can also utilize all properties of the [button component](/components/button).

## Examples

### Basic close button

You can use `onClick` to execute a callback when a user clicks the close button.

```js file="./CloseButtonExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/CloseButton/CloseButtonExample.tsx
================================================
/* eslint-disable no-console */
import React from 'react'
import CloseButton from '@patternfly/react-component-groups/dist/dynamic/CloseButton';

export const BasicExample: React.FunctionComponent = () => (
  <>
    <CloseButton dataTestID="close-button-example" onClick={()=>{console.log('Close button clicked')}} style={{ float: 'none' }} />
  </>
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ColumnManagementModal/ColumnManagementModal.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Helpers
# Sidenav secondary level section
# should be the same for all markdown files
id: Column management modal
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['ColumnManagementModal']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/ColumnManagementModal/ColumnManagementModal.md
---

import ColumnManagementModal from '@patternfly/react-component-groups/dist/dynamic/ColumnManagementModal';
import { ColumnsIcon } from '@patternfly/react-icons';

The **column management modal** component can be used to implement customizable table columns. Columns can be configured to be enabled or disabled by default or be unhidable.

## Examples

### Showing and hiding of table columns

Clicking the "Manage columns" button will open the column management modal. The "ID" column should not be toggleable, therefore its checkbox is disabled with `isUntoggleable: true`. The "Score" column is set to be hidden by default. Always make sure to set `isShownByDefault` and `isShown` to the same boolean value in the initial state. For further customization, you can utilize all properties of the [modal component](/components/modal), except `ref` and `children`.

```js file="./ColumnManagementModalExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ColumnManagementModal/ColumnManagementModalExample.tsx
================================================
import React from 'react'
import { Button, ButtonVariant } from '@patternfly/react-core';
import { Table, Tbody, Td, Th, Tr, Thead } from '@patternfly/react-table';
import { ColumnsIcon } from '@patternfly/react-icons';
import ColumnManagementModal, { ColumnManagementModalColumn } from '@patternfly/react-component-groups/dist/dynamic/ColumnManagementModal';

const DEFAULT_COLUMNS: ColumnManagementModalColumn[] = [
  {
    title: 'ID',
    key: 'id',
    isShownByDefault: true,
    isShown: true,
    isUntoggleable: true
  },
  {
    title: 'Publish date',
    key: 'publishDate',
    isShownByDefault: true,
    isShown: true
  },
  {
    title: 'Impact',
    key: 'impact',
    isShownByDefault: true,
    isShown: true
  },
  {
    title: 'Score',
    key: 'score',
    isShownByDefault: false,
    isShown: false
  }
];

const ROWS = [
  {
    id: 'CVE-2024-1546',
    publishDate: '20 Feb 2024',
    impact: 'Important',
    score: '7.5'
  },
  {
    id: 'CVE-2024-1547',
    publishDate: '20 Feb 2024',
    impact: 'Important',
    score: '7.5'
  },
  {
    id: 'CVE-2024-1548',
    publishDate: '20 Feb 2024',
    impact: 'Moderate',
    score: '6.1'
  },
  {
    id: 'CVE-2024-1549',
    publishDate: '20 Feb 2024',
    impact: 'Moderate',
    score: '6.1'
  }
]

export const ColumnManagementModalExample: React.FunctionComponent = () => {
  const [ columns, setColumns ] = React.useState(DEFAULT_COLUMNS);
  const [ isOpen, setOpen ] = React.useState(false);
  
  return (
    <>
      <ColumnManagementModal
        appliedColumns={columns}
        applyColumns={newColumns => setColumns(newColumns)}
        isOpen={isOpen}
        onClose={() => setOpen(false)}
      />
      <Button className='pf-v6-u-mb-sm' onClick={() => setOpen(true)} variant={ButtonVariant.secondary} icon={<ColumnsIcon />}>Manage columns</Button>
      <Table
        aria-label="Simple table"
        variant="compact"
      >
        <Thead>
          <Tr>
            {columns.filter(column => column.isShown).map(column => <Th key={column.key}>{column.title}</Th>)}
          </Tr>
        </Thead>
        <Tbody>
          {ROWS.map((row, rowIndex) => 
            <Tr key={rowIndex}>
              {columns.filter(column => column.isShown).map((column, columnIndex) =>
                <Td key={columnIndex}>{row[column.key]}</Td>
              )}
            </Tr>  
          )}
        </Tbody>
      </Table>
    </>
  )
}



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ErrorBoundary/ErrorBoundary.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Error communication
# Sidenav secondary level section
# should be the same for all markdown files
id: Error boundary
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['ErrorBoundary']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/ErrorBoundary/ErrorBoundary.md
---
import { useState } from 'react';
import { Button, Card, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';
import ErrorBoundary from "@patternfly/react-component-groups/dist/dynamic/ErrorBoundary";

The **error boundary** component repurposes the `<ErrorState>` component for an application error boundary.

## Examples 

### Error boundary usage example

A basic error boundary appears when an error is thrown inside of the wrapped content.

The component itself has a `headerTitle`, an `errorTitle`, and shows an en error stack with details.

```js file="./ErrorBoundaryExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ErrorBoundary/ErrorBoundaryExample.tsx
================================================
import React, { useState } from 'react';
import { Title, Button, Card, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';
import ErrorBoundary from '@patternfly/react-component-groups/dist/dynamic/ErrorBoundary';

export const BasicExample: React.FunctionComponent = () => {
  const [ hasError, setHasError ] = useState(false);

  const Surprise = () => {
    if (hasError) {
      throw new Error('but a welcome one');
    }
    return (
      <Card>
        <CardHeader>
          <Title headingLevel='h2'>Demo content wrapped in error boundary</Title>
        </CardHeader>
        <CardBody>This is a demo content that may throw an error:</CardBody>
        <CardFooter>
          <Button className='pf-v6-u-mt-lg' variant='danger' onClick={() => setHasError(true)}>
            Click to throw an error
          </Button>
        </CardFooter>
      </Card>
    )
  };

  return (
    <>
      <ErrorBoundary errorTitle="Something wrong happened">
        <Surprise />
      </ErrorBoundary>
      {
        hasError && (
          <Button className='pf-v6-u-mt-lg' variant='secondary' onClick={() => window.location.reload()}>
            Reload page
          </Button>
        )
      }
    </>
  );
};



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ErrorState/ErrorState.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Error communication
# Sidenav secondary level section
# should be the same for all markdown files
id: Error state
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['ErrorState']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/ErrorState/ErrorState.md
---

import ErrorState from "@patternfly/react-component-groups/dist/dynamic/ErrorState";
import { PathMissingIcon } from '@patternfly/react-icons/dist/dynamic/icons/path-missing-icon';

The **error state** component repurposes the `EmptyState` component to display an error to users. To further customize this component, you can also utilize all properties of the [empty state component](/components/empty-state), with the `exception` of `children`.

## Examples

### Basic error state

To provide users with error details, a basic error state should contain an appropriate and informative `titleText` and `bodyText`. Error state provides a default action to navigate back to the previous page, or the home page in the empty state's footer.

```js file="./ErrorStateExample.tsx"

```

### Custom footer

To override the default action button, specify your own using `customFooter`. 

```js file="./ErrorStateFooterExample.tsx"

```

### Customizations using EmptyState props

All properties of the [empty state component](/components/empty-state) are spread to the error state component group. Passing `status='none'` to the error state will cause the icon color to be grey.

```js file="./ErrorStateExtraProps.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ErrorState/ErrorStateExample.tsx
================================================
import React from 'react';
import ErrorState from "@patternfly/react-component-groups/dist/dynamic/ErrorState";

export const BasicExample: React.FunctionComponent = () => <ErrorState titleText='Sample error title' bodyText='Sample error description' />;



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ErrorState/ErrorStateExtraProps.tsx
================================================
import React from 'react';
import ErrorState from "@patternfly/react-component-groups/dist/dynamic/ErrorState";
import { PathMissingIcon } from '@patternfly/react-icons/dist/dynamic/icons/path-missing-icon';

export const BasicExample: React.FunctionComponent = () => (
  <ErrorState 
    titleText='Sample error title' 
    bodyText='Sample error description' 
    headingLevel='h2'
    icon={PathMissingIcon}
    status="none"
    customFooter="Any other details in a custom footer."
  />
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ErrorState/ErrorStateFooterExample.tsx
================================================
import React from 'react';
import { Button } from '@patternfly/react-core';
import ErrorState from "@patternfly/react-component-groups/dist/dynamic/ErrorState";

// eslint-disable-next-line no-console
export const BasicExample: React.FunctionComponent = () => <ErrorState titleText='Sample error title' bodyText='Sample error description' customFooter={<Button variant="secondary" onClick={() => console.log("Custom button clicked")}>
Custom action
</Button>}/>;



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/LogSnippet/LogSnippet.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Helpers
# Sidenav secondary level section
# should be the same for all markdown files
id: Log snippet
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['LogSnippet']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/LogSnippet/LogSnippet.md
---

import LogSnippet from '@patternfly/react-component-groups/dist/dynamic/LogSnippet';

A **log snippet** component provides a way to display a log snippet or code along with a message.

## Examples

### Basic log snippet
The log snippet supports several variants configurable using `variant` property for different scenarios. Each variant has an associated status icon and color similar to [alert component](/components/alert).

```js file="./LogSnippetExample.tsx"

```


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/LogSnippet/LogSnippetExample.tsx
================================================
import React from 'react';
import LogSnippet from '@patternfly/react-component-groups/dist/dynamic/LogSnippet';

export const BasicExample: React.FunctionComponent = () => {
  const code = `apiVersion: helm.openshift.io/v1beta1/
  kind: HelmChartRepository
  metadata:
  name: azure-sample-repo
  spec:
  connectionConfig:
  url: https://raw.githubusercontent.com/Azure-Samples/helm-charts/master/docs`;

  return <LogSnippet message='Failure - check logs for details' logSnippet={code} />;
}


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Maintenance/Maintenance.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Error communication
# Sidenav secondary level section
# should be the same for all markdown files
id: Maintenance
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['Maintenance']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/Maintenance/Maintenance.md
---

import Maintenance from '@patternfly/react-component-groups/dist/dynamic/Maintenance';

A **maintenance** component displays a screen to users when they are undergoing scheduled maintenance.

## Examples

### Basic maintenance

To provide users with basic information regarding maintenance. A basic maintenance state should contain an appropriate and informative `titleText`. `defaultBodyText` will be used by default. 

```js file="./MaintenanceExample.tsx"

```

### Custom maintenance

To override the default bodyText and footer link, specify your own using `bodyText` and `customFooter`. You may add a `startTime`, `endTime` and `timeZone` that will be displayed as shown below. `timeZone` will be set to UTC by default.

```js file="./MaintenanceCustomExample.tsx"

```


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Maintenance/MaintenanceCustomExample.tsx
================================================
import React from 'react';
import Maintenance from '@patternfly/react-component-groups/dist/dynamic/Maintenance'

export const BasicExample: React.FunctionComponent = () => (
  <Maintenance bodyText='We are currently undergoing scheduled maintenance and will be unavailable from' customFooter='Please visit' redirectLinkUrl='http://patternfly.com' redirectLinkText='here.' startTime='6am' endTime='8am' timeZone='UTC' />
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Maintenance/MaintenanceExample.tsx
================================================
import React from 'react';
import Maintenance from '@patternfly/react-component-groups/dist/dynamic/Maintenance'

export const BasicExample: React.FunctionComponent = () => (
  <Maintenance />
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/MissingPage/MissingPage.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Error communication
# Sidenav secondary level section
# should be the same for all markdown files
id: Missing page
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['MissingPage']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/MissingPage/MissingPage.md
---

import MissingPage from '@patternfly/react-component-groups/dist/dynamic/MissingPage';

The **missing page** component can be used to display an error message and "return to homepage" button when an error occurs.

## Examples

### Basic missing page

A basic missing page component informs users that an error has occurred. It also includes a button link, which users can select to return to the homepage.  

```js file="./MissingPageExample.tsx"

```


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/MissingPage/MissingPageExample.tsx
================================================
import MissingPage from '@patternfly/react-component-groups/dist/dynamic/MissingPage';
import React from 'react';

export const BasicExample: React.FunctionComponent = () => <MissingPage />;



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/MultiContentCard/MultiContentCard.md
================================================
---
section: Component groups
subsection: Content containers
id: Multi-content card
source: react
propComponents: ['MultiContentCard']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/MultiContentCard/MultiContentCard.md
---

import MultiContentCard, { MultiContentCardDividerVariant } from "@patternfly/react-component-groups/dist/dynamic/MultiContentCard";
import { ArrowRightIcon, BellIcon, CogIcon, EllipsisVIcon, LockIcon } from '@patternfly/react-icons';
import { createUseStyles } from 'react-jss';
import clsx from 'clsx';

A **multi-content card** component allows to display multiple card components in a single layout. To further customize this layout, you can also utilize all properties of the [card component](/components/card), with the exception of `children` and `title`.

## Examples

### Basic multi-content card

To display a basic multi-content an array of content cards has to be passed using the `cards` property. It is recommended to use regular [card components](/components/card) in the content.

```js file="./MultiContentCardExample.tsx"

```

### Expandable multi-content card

To make the multi-content card expandable, pass `isExpandable` flag together with `toggleText` or `toggleContent` property. Default expansion state can be adjusted using `defaultExpanded` property.

```js file="./MultiContentCardExpandableExample.tsx"

```

### Expandable multi-content card with actions and labels

Actions can be displayed in the multi-content card heading using `actions` property. Also, you can make use of [label components](/components/label) for your card content.

```js file="./MultiContentCardExpandableActionsExample.tsx"

```

### Expandable multi content card with dividers

Dividers between all cards in the content can be shown using `withDividers` flag. 

```js file="./MultiContentCardExpandableDividerExample.tsx"

```

### Expandable multi-content card with single dividers

To enable a divider just for a single card, use `dividerVariant` property passed to the `cards` array. 

```js file="./MultiContentCardExpandableSingleDividerExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/MultiContentCard/MultiContentCardExample.tsx
================================================
import React from 'react';
import MultiContentCard from "@patternfly/react-component-groups/dist/dynamic/MultiContentCard";
import { Button, Card, CardHeader, CardBody, CardFooter, List, ListItem, Content, ContentVariants, Icon } from '@patternfly/react-core';
import { ArrowRightIcon, BellIcon, CogIcon, LockIcon } from '@patternfly/react-icons';
import { createUseStyles } from 'react-jss';
import clsx from 'clsx';

const useStyles = createUseStyles({
  action: {
    color: 'var(--pf-t--global--text--color--brand--default)',
    fontSize: 'var(--pf-t--global--font--size--sm)',
  },
  actionIcon: {
    color: 'var(--pf-t--global--icon--color--regular)',
  },
  bulletPoints: {
    color: 'var(--pf-t--global--color--brand--default)',
  },
});

export const BasicExample: React.FunctionComponent = () => {
  const classes = useStyles();
  const cards = [
    <Card isFullHeight isPlain key="card-1">
      <CardHeader>
        <Content component={ContentVariants.h4}>Getting Started</Content>
      </CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <CogIcon className={classes.actionIcon} />
          </Icon>
          Configure application
        </Content>
        <Content className="pf-v6-u-font-size-sm">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </Content>
      </CardBody>
      <CardFooter>
        <List className={clsx(classes.bulletPoints, 'pf-v6-u-font-size-sm', 'pf-v6-u-ml-0')}>
          <ListItem>
            <Button variant="link" isInline>First link</Button>
          </ListItem>
          <ListItem>
            <Button variant="link" isInline>Second link</Button>
          </ListItem>
          <ListItem>
            <Button variant="link" isInline>Another link</Button>
          </ListItem>
        </List>
      </CardFooter>
    </Card>,
    <Card isFullHeight isPlain key="card-2">
      <CardHeader style={{ visibility: 'hidden' }}>-</CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <LockIcon className={classes.actionIcon} />
          </Icon>
          Configure access
        </Content>
        <Content className="pf-v6-u-font-size-sm">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
        </Content>
      </CardBody>
      <CardFooter>
        <Content>
          <Button icon={<Icon className="pf-v6-u-ml-sm" isInline>
            <ArrowRightIcon />
          </Icon>} variant="link" isInline>
            Learn more  
            
          </Button>
        </Content>
      </CardFooter>
    </Card>,
    <Card isFullHeight isPlain key="card-3">
      <CardHeader>
        <Content component={ContentVariants.h4}>Next Steps</Content>
      </CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <BellIcon className={classes.actionIcon} />
          </Icon>
          Configure notifications
        </Content>
        <Content className="pf-v6-u-font-size-sm">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </Content>
      </CardBody>
      <CardFooter>
        <Content>
          <Button icon={<Icon className="pf-v6-u-ml-sm" isInline>
            <ArrowRightIcon />
          </Icon>} variant="link" isInline>
            Learn more  
            
          </Button>
        </Content>
      </CardFooter>
    </Card>
  ];

  return(<MultiContentCard cards={cards} />);
}



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/MultiContentCard/MultiContentCardExpandableActionsExample.tsx
================================================
import React from 'react';
import MultiContentCard from "@patternfly/react-component-groups/dist/dynamic/MultiContentCard";
import { EllipsisVIcon } from '@patternfly/react-icons';
import { Button, Card, CardHeader, CardBody, CardFooter, Content, ContentVariants, List, ListItem, Icon, Divider, Dropdown, DropdownItem, DropdownList, MenuToggle, MenuToggleElement, Label } from '@patternfly/react-core';
import { ArrowRightIcon, BellIcon, CogIcon, LockIcon } from '@patternfly/react-icons';
import { createUseStyles } from 'react-jss';
import clsx from 'clsx';

const useStyles = createUseStyles({
  bulletPoints: {
    color: 'var(--pf-t--global--color--brand--default)',
  },
});

export const BasicExample: React.FunctionComponent = () => {
  const classes = useStyles();
  const [ isMenuOpen, setMenuOpen ] = React.useState(false)

  const cards = [
    <Card isFullHeight isPlain key="card-1">
      <CardHeader  className="pf-v6-u-pt-0">
        <Content component={ContentVariants.h4}>Getting Started</Content>
      </CardHeader>
      <CardBody>
        <Label className="pf-v6-u-mb-sm" icon={<CogIcon />} color="blue">
          Configure application
        </Label>
        <Content className="pf-v6-u-font-size-sm">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </Content>
      </CardBody>
      <CardFooter>
        <List className={clsx(classes.bulletPoints, 'pf-v6-u-font-size-sm', 'pf-v6-u-ml-0')}>
          <ListItem>
            <Button variant="link" isInline>First link</Button>
          </ListItem>
          <ListItem>
            <Button variant="link" isInline>Second link</Button>
          </ListItem>
          <ListItem>
            <Button variant="link" isInline>Another link</Button>
          </ListItem>
        </List>
      </CardFooter>
    </Card>,
    <Card isFullHeight isPlain key="card-2">
      <CardHeader className="pf-v6-u-pt-0" style={{ visibility: 'hidden' }}>-</CardHeader>
      <CardBody>
        <Label className="pf-v6-u-mb-sm" icon={<LockIcon />} color="green">
          Configure access
        </Label>
        <Content className="pf-v6-u-font-size-sm">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
        </Content>
      </CardBody>
      <CardFooter>
        <Content>
          <Button icon={<Icon className="pf-v6-u-ml-sm" isInline><ArrowRightIcon /></Icon>} variant="link" isInline>
            Learn more   
          </Button>
        </Content>
      </CardFooter>
    </Card>,
    <Card isFullHeight isPlain key="card-3">
      <CardHeader className="pf-v6-u-pt-0">
        <Content component={ContentVariants.h4}>Next Steps</Content>
      </CardHeader>
      <CardBody>
        <Label className="pf-v6-u-mb-sm" icon={<BellIcon />} color="orange">
          Configure notifications
        </Label>
        <Content className="pf-v6-u-font-size-sm">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </Content>
      </CardBody>
      <CardFooter>
        <Content>
          <Button icon={<Icon className="pf-v6-u-ml-sm" isInline><ArrowRightIcon /></Icon>} variant="link" isInline>
            Learn more    
          </Button>
        </Content>
      </CardFooter>
    </Card>
  ];

  const onToggleClick = () => {
    setMenuOpen(!isMenuOpen);
  };
  return (
    <MultiContentCard 
      isExpandable
      toggleText='Card with actions toggle text' 
      cards={cards}
      actions={
        <Dropdown
          isOpen={isMenuOpen}
          onSelect={() => null}
          onOpenChange={(isMenuOpen: boolean) => setMenuOpen(isMenuOpen)}
          popperProps={{ position: 'right' }}
          toggle={(toggleRef: React.Ref<MenuToggleElement>) => (
            <MenuToggle
              ref={toggleRef}
              aria-label="kebab dropdown toggle"
              variant="plain"
              onClick={onToggleClick}
              isExpanded={isMenuOpen}
            >
              <EllipsisVIcon />
            </MenuToggle>
          )}
          shouldFocusToggleOnSelect
        >
          <DropdownList>
            <DropdownItem value={0} key="action">
            Action
            </DropdownItem>
            <DropdownItem value={1} isDisabled key="disabled action">
            Disabled Action
            </DropdownItem>
            <Divider component="li" key="separator" />
            <DropdownItem value={2} key="separated action">
            Separated Action
            </DropdownItem>
          </DropdownList>
        </Dropdown>
      }
    />
  )
};



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/MultiContentCard/MultiContentCardExpandableDividerExample.tsx
================================================
import React from 'react';
import MultiContentCard from "@patternfly/react-component-groups/dist/dynamic/MultiContentCard";
import { Button, Card, CardHeader, CardBody, CardFooter, List, ListItem, Content, ContentVariants, Icon } from '@patternfly/react-core';
import { ArrowRightIcon, BellIcon, CogIcon, LockIcon } from '@patternfly/react-icons';
import { createUseStyles } from 'react-jss';
import clsx from 'clsx';

const useStyles = createUseStyles({
  action: {
    color: 'var(--pf-t--global--text--color--brand--default)',
    fontSize: 'var(--pf-t--global--font--size--sm)',
  },
  actionIcon: {
    color: 'var(--pf-t--global--icon--color--regular)',
  },
  bulletPoints: {
    color: 'var(--pf-t--global--color--brand--default)',
  },
});

export const BasicExample: React.FunctionComponent = () => {
  const classes = useStyles();

  const cards = [
    <Card isFullHeight isPlain key="card-1">
      <CardHeader className="pf-v6-u-pt-0">
        <Content component={ContentVariants.h4}>Getting Started</Content>
      </CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <CogIcon className={classes.actionIcon} />
          </Icon>
            Configure application
        </Content>
        <Content className="pf-v6-u-font-size-sm">
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </Content>
      </CardBody>
      <CardFooter>
        <List className={clsx(classes.bulletPoints, 'pf-v6-u-font-size-sm', 'pf-v6-u-ml-0')}>
          <ListItem>
            <Button variant="link" isInline>First link</Button>
          </ListItem>
          <ListItem>
            <Button variant="link" isInline>Second link</Button>
          </ListItem>
          <ListItem>
            <Button variant="link" isInline>Another link</Button>
          </ListItem>
        </List>
      </CardFooter>
    </Card>,
    <Card isFullHeight isPlain key="card-2">
      <CardHeader className='pf-v6-u-pt-0' style={{ visibility: 'hidden' }}>-</CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <LockIcon className={classes.actionIcon} />
          </Icon>
            Configure access
        </Content>
        <Content className="pf-v6-u-font-size-sm">
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
        </Content>
      </CardBody>
      <CardFooter>
        <Content>
          <Button icon={<Icon className="pf-v6-u-ml-sm" isInline>
            <ArrowRightIcon className={classes.action} />
          </Icon>} variant="link" isInline>
              Learn more  
            
          </Button>
        </Content>
      </CardFooter>
    </Card>,
    <Card isFullHeight isPlain key="card-3">
      <CardHeader className="pf-v6-u-pt-0">
        <Content component={ContentVariants.h4}>Next Steps</Content>
      </CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <BellIcon className={classes.actionIcon} />
          </Icon>
            Configure notifications
        </Content>
        <Content className="pf-v6-u-font-size-sm">
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </Content>
      </CardBody>
      <CardFooter>
        <Content>
          <Button icon={<Icon className="pf-v6-u-ml-sm" isInline>
            <ArrowRightIcon />
          </Icon>} variant="link" isInline>
              Learn more  
            
          </Button>
        </Content>
      </CardFooter>
    </Card>
  ];
  return (<MultiContentCard isExpandable withDividers toggleText='Card with dividers toggle text' cards={cards} />)};



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/MultiContentCard/MultiContentCardExpandableExample.tsx
================================================
import React from 'react';
import MultiContentCard from "@patternfly/react-component-groups/dist/dynamic/MultiContentCard";
import { Button, Card, CardHeader, CardBody, CardFooter, List, ListItem, Content, ContentVariants, Icon } from '@patternfly/react-core';
import { ArrowRightIcon, BellIcon, CogIcon, LockIcon } from '@patternfly/react-icons';
import { createUseStyles } from 'react-jss';
import clsx from 'clsx';

const useStyles = createUseStyles({
  action: {
    color: 'var(--pf-t--global--text--color--brand--default)',
    fontSize: 'var(--pf-t--global--font--size--sm)',
  },
  actionIcon: {
    color: 'var(--pf-t--global--icon--color--regular)',
  },
  bulletPoints: {
    color: 'var(--pf-t--global--color--brand--default)',
  },
});

export const BasicExample: React.FunctionComponent = () => {
  const classes = useStyles();
  const cards = [
    <Card isFullHeight isPlain key="card-1">
      <CardHeader className="pf-v6-u-pt-0">
        <Content component={ContentVariants.h4}>Getting Started</Content>
      </CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <CogIcon className={classes.actionIcon} />
          </Icon>
          Configure application
        </Content>
        <Content className="pf-v6-u-font-size-sm">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </Content>
      </CardBody>
      <CardFooter>
        <List className={clsx(classes.bulletPoints, 'pf-v6-u-font-size-sm', 'pf-v6-u-ml-0')}>
          <ListItem>
            <Button variant="link" isInline>First link</Button>
          </ListItem>
          <ListItem>
            <Button variant="link" isInline>Second link</Button>
          </ListItem>
          <ListItem>
            <Button variant="link" isInline>Another link</Button>
          </ListItem>
        </List>
      </CardFooter>
    </Card>,
    <Card isFullHeight isPlain key="card-2">
      <CardHeader className='pf-v6-u-pt-0' style={{ visibility: 'hidden' }}>-</CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <LockIcon className={classes.actionIcon} />
          </Icon>
          Configure access
        </Content>
        <Content className="pf-v6-u-font-size-sm">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
        </Content>
      </CardBody>
      <CardFooter>
        <Content>
          <Button icon={<Icon className="pf-v6-u-ml-sm" isInline>
            <ArrowRightIcon />
          </Icon>} variant="link" isInline>
            Learn more  
            
          </Button>
        </Content>
      </CardFooter>
    </Card>,
    <Card isFullHeight isPlain key="card-3">
      <CardHeader className="pf-v6-u-pt-0">
        <Content component={ContentVariants.h4}>Next Steps</Content>
      </CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <BellIcon className={classes.actionIcon} />
          </Icon>
          Configure notifications
        </Content>
        <Content className="pf-v6-u-font-size-sm">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </Content>
      </CardBody>
      <CardFooter>
        <Content>
          <Button icon={<Icon className="pf-v6-u-ml-sm" isInline>
            <ArrowRightIcon />
          </Icon>} variant="link" isInline>
            Learn more  
            
          </Button>
        </Content>
      </CardFooter>
    </Card>
  ];

  return(<MultiContentCard isExpandable toggleText='Expandable card toggle text' cards={cards} />);
}



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/MultiContentCard/MultiContentCardExpandableSingleDividerExample.tsx
================================================
import React from 'react';
import MultiContentCard, { MultiContentCardDividerVariant } from "@patternfly/react-component-groups/dist/dynamic/MultiContentCard";
import { Button, Card, CardHeader, CardBody, CardFooter, Content, List, ListItem, ContentVariants, Icon } from '@patternfly/react-core';
import { ArrowRightIcon, BellIcon, CogIcon, LockIcon } from '@patternfly/react-icons';
import { createUseStyles } from 'react-jss';
import clsx from 'clsx';

const useStyles = createUseStyles({
  action: {
    color: 'var(--pf-t--global--text--color--brand--default)',
    fontSize: 'var(--pf-t--global--font--size--sm)',
  },
  actionIcon: {
    color: 'var(--pf-t--global--icon--color--regular)',
  },
  bulletPoints: {
    color: 'var(--pf-t--global--color--brand--default)',
  },
});

export const BasicExample: React.FunctionComponent = () => {
  const classes = useStyles();

  const cards = [
    <Card isFullHeight isPlain key="card-1">
      <CardHeader className="pf-v6-u-pt-0">
        <Content component={ContentVariants.h4}>Getting Started</Content>
      </CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <CogIcon className={classes.actionIcon} />
          </Icon>
          Configure application
        </Content>
        <Content className="pf-v6-u-font-size-sm">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </Content>
      </CardBody>
      <CardFooter>
        <List className={clsx(classes.bulletPoints, 'pf-v6-u-font-size-sm', 'pf-v6-u-ml-0')}>
          <ListItem>
            <Button variant="link" isInline>First link</Button>
          </ListItem>
          <ListItem>
            <Button variant="link" isInline>Second link</Button>
          </ListItem>
          <ListItem>
            <Button variant="link" isInline>Another link</Button>
          </ListItem>
        </List>
      </CardFooter>
    </Card>,
    <Card isFullHeight isPlain key="card-2">
      <CardHeader className='pf-v6-u-pt-0' style={{ visibility: 'hidden' }}>-</CardHeader>
      <CardBody>
        <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
          <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
            <LockIcon className={classes.actionIcon} />
          </Icon>
          Configure access
        </Content>
        <Content className="pf-v6-u-font-size-sm">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
        </Content>
      </CardBody>
      <CardFooter>
        <Content>
          <Button icon={<Icon className="pf-v6-u-ml-sm" isInline>
            <ArrowRightIcon />
          </Icon>} variant="link" isInline>
            Learn more  
            
          </Button>
        </Content>
      </CardFooter>
    </Card>,
    {
      content: (
        <Card isFullHeight isPlain key="card-3">
          <CardHeader className="pf-v6-u-pt-0">
            <Content component={ContentVariants.h4}>Next Steps</Content>
          </CardHeader>
          <CardBody>
            <Content className={clsx(classes.action, 'pf-v6-u-font-weight-bold', 'pf-v6-u-mb-sm')}>
              <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
                <BellIcon className={classes.actionIcon} />
              </Icon>
              Configure notifications
            </Content>
            <Content className="pf-v6-u-font-size-sm">
              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
            </Content>
          </CardBody>
          <CardFooter>
            <Content>
              <Button icon={<Icon className="pf-v6-u-ml-sm" isInline>
                <ArrowRightIcon />
              </Icon>} variant="link" isInline>
              Learn more  
                
              </Button>
            </Content>
          </CardFooter>
        </Card>
      ), 
      dividerVariant: MultiContentCardDividerVariant.left
    }
  ];

  return(<MultiContentCard isExpandable toggleText='Card with dividers toggle text' cards={cards} />);}



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/PageHeader/PageHeader.md
================================================
---
section: Component groups
subsection: Content containers
id: Page header
source: react
propComponents: ['PageHeader']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/PageHeader/PageHeader.md
---

import PageHeader from "@patternfly/react-component-groups/dist/dynamic/PageHeader"
import { EllipsisVIcon } from '@patternfly/react-icons';
import pageHeaderIcon from '../../assets/icons/page-header-icon.svg'

The **page header** component displays a page header section with a title, subtitle and other optional content.

## Examples

### Basic page header

In order to display a basic page header, pass the `title` and `subtitle`.

```js file="./PageHeaderExample.tsx"

```

### Page header with breadcrumbs

You can display breadcrumbs above the title using the `breadcrumbs` property.

```js file="./PageHeaderBreadcrumbExample.tsx"

```

### Page header with icon

Use the `icon` property to display your custom page icon separated with a [divider](/components/divider).

```js file="./PageHeaderIconExample.tsx"

```

### Page header with label and link

To add specific element captions for user clarity and convenience, you can use the `label` property together with [label](/components/label) or your custom component. The `linkProps` can be used to define a link displayed under the subtitle.

```js file="./PageHeaderLabelLinkExample.tsx"

```

### Page header with actions menu

In case you want to display actions in your header, you can use the `actionsMenu` property.

```js file="./PageHeaderActionsExample.tsx"

```


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/PageHeader/PageHeaderActionsExample.tsx
================================================
import React from 'react';
import PageHeader from '@patternfly/react-component-groups/dist/dynamic/PageHeader';
import { ActionList, ActionListItem, Dropdown, DropdownItem, DropdownList, MenuToggle, MenuToggleElement } from '@patternfly/react-core';
import { EllipsisVIcon } from '@patternfly/react-icons';

export const ActionsExample: React.FunctionComponent = () => {
  const [ isOpen, setIsOpen ] = React.useState(false);

  const onToggle = () => {
    setIsOpen(!isOpen);
  };

  const onSelect = (event: React.MouseEvent<Element, MouseEvent> | undefined) => {
    event?.stopPropagation();
    setIsOpen(!isOpen);
  };

  const dropdownItems = (
    <>
      <DropdownItem to="#" key="link">
        Link
      </DropdownItem>
      <DropdownItem key="action">Action</DropdownItem>
      <DropdownItem to="#" key="disabled link" isDisabled>
        Disabled Link
      </DropdownItem>
    </>
  );
      
  return (
    <React.Fragment>
      <PageHeader
        title='My Title'
        subtitle='This is a subtitle for your page header' 
        actionMenu={
          <ActionList>
            <ActionListItem>
              <Dropdown
                popperProps={{ position: 'right' }}
                onSelect={onSelect}
                toggle={(toggleRef: React.Ref<MenuToggleElement>) => (
                  <MenuToggle
                    ref={toggleRef}
                    icon={<EllipsisVIcon />}
                    onClick={onToggle}
                    variant="plain"
                    isExpanded={isOpen}
                    aria-label="Action list single group kebab"
                  />
                )}
                isOpen={isOpen}
                onOpenChange={(isOpen: boolean) => setIsOpen(isOpen)}
              >
                <DropdownList>{dropdownItems}</DropdownList>
              </Dropdown>
            </ActionListItem>
          </ActionList>
        } 
      />
    </React.Fragment>
  )
};



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/PageHeader/PageHeaderBreadcrumbExample.tsx
================================================
import React from 'react';
import PageHeader from '@patternfly/react-component-groups/dist/dynamic/PageHeader';
import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';

export const BreadcrumbExample: React.FunctionComponent = () => (
  <PageHeader 
    breadcrumbs={ 
      <Breadcrumb>
        <BreadcrumbItem
          to="#"
          key="home"
        >
        Home
        </BreadcrumbItem>
        <BreadcrumbItem
          to="#"
          key="services"
        >
        Services
        </BreadcrumbItem>
        <BreadcrumbItem
          isActive
          to="#"
          key="serviceA"
        >
        Service A
        </BreadcrumbItem>
      </Breadcrumb>
    }
    title='My Title'
    subtitle='This is a subtitle for your page header' 
  />
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/PageHeader/PageHeaderExample.tsx
================================================
import React from 'react';
import PageHeader from '@patternfly/react-component-groups/dist/dynamic/PageHeader';

export const BasicExample: React.FunctionComponent = () => (
  <PageHeader 
    title='My Title'
    subtitle='This is a subtitle for your page header' 
  />
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/PageHeader/PageHeaderIconExample.tsx
================================================
import React from 'react';
import PageHeader from '@patternfly/react-component-groups/dist/dynamic/PageHeader';
import pageHeaderIcon from '../../assets/icons/page-header-icon.svg';


export const IconExample: React.FunctionComponent = () => (
  <PageHeader 
    title='My Title'
    subtitle='This is a subtitle for your page header' 
    icon={<img src={pageHeaderIcon} alt="page-header-icon" />}
  />
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/PageHeader/PageHeaderLabelLinkExample.tsx
================================================
import React from 'react';
import PageHeader from '@patternfly/react-component-groups/dist/dynamic/PageHeader';
import { Label } from '@patternfly/react-core';

export const BasicExample: React.FunctionComponent = () => (
  <PageHeader 
    title='My Title'
    subtitle='This is a subtitle for your page header'
    label={<Label className="pf-v5-u-align-content-center">Org. Administrator</Label>}
    linkProps={{
      label: 'Go to this link',
      isExternal: true,
    }}
  />
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ResponsiveActions/ResponsiveActions.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Controls
# Sidenav secondary level section
# should be the same for all markdown files
id: Responsive actions
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['ResponsiveAction', 'ResponsiveActions']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/ResponsiveActions/ResponsiveActions.md
---
import { useState } from 'react';
import { ResponsiveAction } from '@patternfly/react-component-groups/dist/dynamic/ResponsiveAction';
import { ResponsiveActions } from '@patternfly/react-component-groups/dist/dynamic/ResponsiveActions';

The **responsive actions** component allows for the display of actions in a responsive layout. Actions can be presented as persistent, pinned or collapsed to dropdown.

The `ResponsiveAction` component is used to declare individual actions within the `ResponsiveActions` wrapper. Each action can be displayed as a standalone button or dropdown based on `isPinned` and `isPersistent` properties. Persistent actions are always separate buttons no matter of the screen size. Pinned actions are rendered as buttons as well, but when the screen size is below the defined breakpoint, they get collapsed to the actions dropdown. Other actions render in a dropdown on all screen sizes.

## Examples

### Basic responsive actions

This example demonstrates how to create responsive actions with persistent and pinned actions.


```js file="./ResponsiveActionsExample.tsx"

```

### Breakpoint on container

By passing in the `breakpointReference` property, the overflow menu's breakpoint will be relative to the width of the reference container rather than the viewport width.

You can change the container width in this example by adjusting the slider. As the container width changes, the actions will change their layout despite the viewport width not changing.


```js file="./ResponsiveActionsBreakpointExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ResponsiveActions/ResponsiveActionsBreakpointExample.tsx
================================================
import React from 'react';
import {
  Slider,
  SliderOnChangeEvent,
} from '@patternfly/react-core';
import { ResponsiveActions } from '@patternfly/react-component-groups/dist/dynamic/ResponsiveActions';
import { ResponsiveAction } from '@patternfly/react-component-groups/dist/dynamic/ResponsiveAction';

export const ResponsiveActionsBreakpointExample: React.FunctionComponent = () => {
  const [ containerWidth, setContainerWidth ] = React.useState(100);
  const containerRef = React.useRef<HTMLDivElement>(null);

  const onChange = (_event: SliderOnChangeEvent, value: number) => {
    setContainerWidth(value);
  };

  const containerStyles = {
    width: `${containerWidth}%`,
    padding: '1rem',
    borderWidth: '2px',
    borderStyle: 'dashed'
  };

  return (
    <>
      <div style={{ width: '100%', maxWidth: '400px' }}>
        <div>
          <span id="responsiveActions-hasBreakpointOnContainer-slider-label">Current container width</span>: {containerWidth}
          %
        </div>
        <Slider
          value={containerWidth}
          onChange={onChange}
          max={100}
          min={40}
          step={20}
          showTicks
          showBoundaries={false}
          aria-labelledby="responsiveActions-hasBreakpointOnContainer-slider-label"
        />
      </div>
      <div ref={containerRef} id="breakpoint-reference-container" style={containerStyles}>
        <ResponsiveActions breakpoint="sm" breakpointReference={containerRef}>
          <ResponsiveAction isPersistent>
            Persistent Action
          </ResponsiveAction>
          <ResponsiveAction isPinned variant='secondary'>
            Pinned Action 1
          </ResponsiveAction>
          <ResponsiveAction isPinned variant='secondary'>
            Pinned Action 2
          </ResponsiveAction>
          <ResponsiveAction>
            Overflow Action
          </ResponsiveAction>
        </ResponsiveActions>
      </div>
    </>
  );
};



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ResponsiveActions/ResponsiveActionsExample.tsx
================================================
import React from 'react';
import { ResponsiveAction } from '@patternfly/react-component-groups/dist/dynamic/ResponsiveAction';
import { ResponsiveActions } from '@patternfly/react-component-groups/dist/dynamic/ResponsiveActions';

export const TagCountDisabledExample: React.FunctionComponent = () => (
  <ResponsiveActions breakpoint="lg">
    <ResponsiveAction isPersistent>
        Persistent Action
    </ResponsiveAction>
    <ResponsiveAction isPinned variant='secondary'>
        Pinned Action
    </ResponsiveAction>
    <ResponsiveAction>
        Overflow Action
    </ResponsiveAction>
    <ResponsiveAction isDisabled>
        Disabled action
    </ResponsiveAction>
  </ResponsiveActions>
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ServiceCard/ServiceCard.md
================================================
---
section: Component groups
subsection: Content containers
id: Service card
source: react
propComponents: ['ServiceCard']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/ServiceCard/ServiceCard.md
---

import ServiceCard from "@patternfly/react-component-groups/dist/dynamic/ServiceCard";
import { EllipsisVIcon } from '@patternfly/react-icons';
import pageHeaderIcon from '../../assets/icons/page-header-icon.svg'

The **service card** component displays a card representing a service with an icon, title, description, and an optional customized footer

## Examples

### Basic service card

This shows a basic service card with an `icon`, `title`, `description`, and optional footer passed in. You can also pass all props of the [card component](/components/card).

```js file="./ServiceCardExample.tsx"

```

### Stacked service card

If you set `isStacked` property to `true`, the header layout changes to stacked.

```js file="./ServiceCardStackedExample.tsx"

```

### Service card in a gallery

This shows how cards can look side by side in a [gallery layout](/layouts/gallery). If you set `isFullHeight` property to `true`, the card height will fill the available space.

```js file="./ServiceCardGalleryExample.tsx"

```




================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ServiceCard/ServiceCardExample.tsx
================================================
import React from 'react';
import ServiceCard from "@patternfly/react-component-groups/dist/dynamic/ServiceCard";
import pageHeaderIcon from '../../assets/icons/page-header-icon.svg';
import { Button, ButtonVariant } from '@patternfly/react-core';

export const BasicExample: React.FunctionComponent = () => (
  <ServiceCard
    title='PatternFly'
    subtitle='Component groups'
    description='This is a sample service description'
    icon={<img src={pageHeaderIcon} alt="page-header-icon" />}
    helperText='Here is helper text'
    footer={
      <>
        <Button
          variant={ButtonVariant.secondary}
          className='pf-v6-u-mr-md'
          component='a'
          href='https://patternfly.org'
          target='_blank'
        >
          Launch
        </Button>
        <Button
          variant={ButtonVariant.link}
          component='a'
          href='https://patternfly.org'
          target='_blank'
        >
          Learn more
        </Button>
      </>
    }
  />
);


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ServiceCard/ServiceCardGalleryExample.tsx
================================================
import React from 'react';
import ServiceCard from "@patternfly/react-component-groups/dist/dynamic/ServiceCard";
import { Gallery } from '@patternfly/react-core/dist/dynamic/layouts/Gallery';
import { GalleryItem } from '@patternfly/react-core/dist/dynamic/layouts/Gallery';
import { Button, ButtonVariant } from '@patternfly/react-core';
import pageHeaderIcon from '../../assets/icons/page-header-icon.svg';

export const ServiceCardGalleryExample: React.FunctionComponent = () => (
  <Gallery hasGutter minWidths={{ default: '330px' }}>
    <GalleryItem>
      <ServiceCard
        isStacked
        title='Example1'
        subtitle='A basic example'
        description='This is a basic ServiceCard example'
        icon={<img src={pageHeaderIcon} alt="page-header-icon" />}
        helperText='Example helper text'
      />
    </GalleryItem>
    <GalleryItem>
      <ServiceCard
        isStacked
        title='Example2'
        subtitle='A second example'
        description='This is another basic ServiceCard example'
        icon={<img src={pageHeaderIcon} alt="page-header-icon" />}
        helperText='Example helper text'
        footer={
          <>
            <Button
              variant={ButtonVariant.secondary}
              className='pf-v6-u-mr-md'
              component='a'
              href='https://patternfly.org'
              target='_blank'
            >
            Launch
            </Button>
            <Button
              variant={ButtonVariant.link}
              component='a'
              href='https://patternfly.org'
              target='_blank'
            >
            Learn more
            </Button>
          </>
        }
      />
    </GalleryItem>
  </Gallery>
)


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ServiceCard/ServiceCardStackedExample.tsx
================================================
import React from 'react';
import ServiceCard from "@patternfly/react-component-groups/dist/dynamic/ServiceCard";
import pageHeaderIcon from '../../assets/icons/page-header-icon.svg';
import { Button, ButtonVariant } from '@patternfly/react-core';


export const BasicExample: React.FunctionComponent = () => (
  <ServiceCard
    isStacked
    title='Example'
    subtitle='A basic example'
    description='This is a basic ServiceCard Example'
    icon={<img src={pageHeaderIcon} alt="page-header-icon" />}
    helperText='Here is helper text'
    footer={
      <>
        <Button
          variant={ButtonVariant.secondary}
          className='pf-v6-u-mr-md'
          component='a'
          href='https://patternfly.org'
          target='_blank'
        >
          Launch
        </Button>
        <Button
          variant={ButtonVariant.link}
          component='a'
          href='https://patternfly.org'
          target='_blank'
        >
          Learn more
        </Button>
      </>
    }
  />
);


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Severity/Severity.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Status and state indicators
# Sidenav secondary level section
# should be the same for all markdown files
id: Severity
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['Severity']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/Severity/Severity.md
---

import Severity, { SeverityType } from '@patternfly/react-component-groups/dist/dynamic/Severity';

The **severity** component generates an icon with an optional label, which corresponds to a level `minor`, `moderate`, `important` or `critical`. Each level corresponds with a severity level and respective color:

| Severity level | Meaning | Style | 
| --- | --- | --- | 
| Level 1 | Minor severity (best case scenario) | Dark grey icon |
| Level 2 | Moderate severity |  Yellow icon | 
| Level 3 | Important severity | Orange icon | 
| Level 4 | Critical severity (worst case scenario) | Red icon | 

To specify the severity risk level, you can pass a predefined enum or text value into the `severity` property that corresponds to the appropriate severity level.

To add an optional label, add the `label` property to the `<Severity>` component.

## Examples

### Undefined variant

The default style for the severity component appears when any value besides "none", "low", "medium", "high", or "critical" is passed to `Severity`. 

```js file="./SeverityUndefinedExample.tsx"

```
### None severity

To style no severity, pass "none" or `SeverityType.none` to `severity`.

```js file="./SeverityNoneExample.tsx"

```

### Minor severity

To style a minor severity, pass "minor" or `SeverityType.minor` to `severity`.

```js file="./SeverityMinorExample.tsx"

```

### Moderate severity

To style a moderate severity, pass "moderate", or `SeverityType.moderate` to `severity`.

```js file="./SeverityModerateExample.tsx"

```

### Important severity

To style an important severity, pass "important", or `SeverityType.important` to `severity`.

```js file="./SeverityImportantExample.tsx"

```

### Critical severity

To style a critical severity, pass "critical" or `SeverityType.critical` to `severity`.

```js file="./SeverityCriticalExample.tsx"

```


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Severity/SeverityCriticalExample.tsx
================================================
import React from 'react';
import Severity, { SeverityType } from '@patternfly/react-component-groups/dist/dynamic/Severity';

export const BasicExample: React.FunctionComponent = () => (

  <Severity severity={SeverityType.critical} label="Critical" />

);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Severity/SeverityImportantExample.tsx
================================================
import React from 'react';
import Severity, { SeverityType } from '@patternfly/react-component-groups/dist/dynamic/Severity';

export const BasicExample: React.FunctionComponent = () => (
  <Severity severity={SeverityType.important} label="Important" />
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Severity/SeverityMinorExample.tsx
================================================
import React from 'react';
import Severity, { SeverityType } from '@patternfly/react-component-groups/dist/dynamic/Severity';

export const BasicExample: React.FunctionComponent = () => <Severity severity={SeverityType.minor} label="Minor" />;



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Severity/SeverityModerateExample.tsx
================================================
import React from 'react';
import Severity, { SeverityType } from '@patternfly/react-component-groups/dist/dynamic/Severity';

export const BasicExample: React.FunctionComponent = () => <Severity severity={SeverityType.moderate} label="Moderate" />;



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Severity/SeverityNoneExample.tsx
================================================
import React from 'react';
import Severity, { SeverityType } from '@patternfly/react-component-groups/dist/dynamic/Severity';

export const BasicExample: React.FunctionComponent = () => <Severity severity={SeverityType.none} label="None" />;



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Severity/SeverityUndefinedExample.tsx
================================================
import React from 'react';
import Severity from '@patternfly/react-component-groups/dist/dynamic/Severity';

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export const BasicExample: React.FunctionComponent = () => <Severity label="Undefined" severity={'an unknown value' as any} />



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ShortcutGrid/ShortcutExample.tsx
================================================
import React from 'react';
import Shortcut from '@patternfly/react-component-groups/dist/dynamic/Shortcut';

export const BasicExample: React.FunctionComponent = () => <Shortcut description='Shortcut description' keys={[ 'cmd', 'shift' ]} click/>;



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ShortcutGrid/ShortcutGrid.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Helpers
# Sidenav secondary level section
# should be the same for all markdown files
id: Shortcut grid
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: [
    'ShortcutGrid',
    'Shortcut'
]
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/ShortcutGrid/ShortcutGrid.md
---

import ShortcutGrid from '@patternfly/react-component-groups/dist/dynamic/ShortcutGrid';
import Shortcut from '@patternfly/react-component-groups/dist/dynamic/Shortcut';

A **shortcut grid** component displays keyboard shortcuts with their description in a grid.

## Examples

### Basic shortcut grid

A basic shortcut grid can be used to display shortcuts available to the user together with their description. 

You can customize displayed shortcuts using `shortcuts` props. For mouse actions with given shortcuts, there are separate props to be enabled. You can customize showing symbols for control keys using `showSymbols`. The component also accepts all properties of the [grid layout](/layouts/grid).

```js file="./ShortcutGridExample.tsx"

```

### Single shortcut

Shortcut component can be also used outside of the grid. 

Appearance of the component can be customized using the `className` property.

```js file="./ShortcutExample.tsx"

```





================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/ShortcutGrid/ShortcutGridExample.tsx
================================================
import React from 'react';
import ShortcutGrid from '@patternfly/react-component-groups/dist/dynamic/ShortcutGrid';

export const BasicExample: React.FunctionComponent = () => (
  <ShortcutGrid 
    shortcuts={[ 
      { description: 'Open new tab', keys: [ 'cmd', 'shift', 't' ] }, 
      { description: 'Open new page', keys: [ 'opt', 'n' ] },
      { description: 'Move object', keys: [ 'ctrl' ], drag: true },  
    ]}
  />
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/SkeletonTable/SkeletonTable.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Status and state indicators
# Sidenav secondary level section
# should be the same for all markdown files
id: Skeleton table
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['SkeletonTable', 'SkeletonTableHead', 'SkeletonTableBody']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/SkeletonTable/SkeletonTable.md
---
import { RowSelectVariant, TableVariant, Table } from '@patternfly/react-table';
import SkeletonTable from '@patternfly/react-component-groups/dist/dynamic/SkeletonTable';
import SkeletonTableHead from '@patternfly/react-component-groups/dist/dynamic/SkeletonTableHead';
import SkeletonTableBody from '@patternfly/react-component-groups/dist/dynamic/SkeletonTableBody';

The **skeleton table** component is used to display placeholder "skeletons" within a table as its contents load.

## Examples

### Basic skeleton table

To indicate that a table's cells are still loading, a basic skeleton table uses the [skeleton](https://www.patternfly.org/components/skeleton) component to place a placeholder skeleton in each cell. Once the data is loaded, the skeleton table is replaced with a table containing the real data.

```js file="./SkeletonTableExample.tsx"

```

### Compact skeleton table

The skeleton table can be displayed as a compact table by setting the `variant` prop to `compact`. Borders can be toggled off by setting `borders` to `false`.

```js file="./SkeletonTableCompactExample.tsx"

```

### Selectable columns

The skeleton table can display selectable columns by setting the `isSelectable` prop to `true`. The `selectVariant` prop determines if radio buttons or checkboxes are used.

```js file="./SkeletonTableSelectableExample.tsx"

```

### Expandable rows

The skeleton table can display the indicator for expandable rows by setting the `isExpandable` prop to `true`.

```js file="./SkeletonTableExpandableExample.tsx"

```

### Customizable column headers

Custom column headers can be provided by passing an array of strings or `Th` components to the `columns` prop instead of an array of strings. This allows you to support sorting on columns, add custom content, or style the column headers.

```js file="./SkeletonTableCustomExample.tsx"

```

### Full loading simulation

The following example demonstrates the typical behavior of a skeleton table transitioning to a normal table as the data becomes available.

To simulate this loading process, click the "Reload table" button and wait for the data to populate.


```js file="./SkeletonTableLoadingExample.tsx"

```

### Skeleton table head

You can render only the `<Thead>` part of the skeleton table by using the `<SkeletonTableHead/>`.

```js file="./SkeletonTableHeadExample.tsx"

```

### Skeleton table body

You can also render only the `<Tbody>` part of the skeleton table by using the `<SkeletonTableBody/>`.

```js file="./SkeletonTableBodyExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/SkeletonTable/SkeletonTableBodyExample.tsx
================================================
import React from 'react';
import { Table } from '@patternfly/react-table';
import SkeletonTableBody from "@patternfly/react-component-groups/dist/dynamic/SkeletonTableBody";

export const SkeletonTableBodyExample: React.FC = () => (
  <Table>
    <SkeletonTableBody isSelectable rowsCount={5} columnsCount={2} />
  </Table>
);


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/SkeletonTable/SkeletonTableCompactExample.tsx
================================================
import React from 'react';
import SkeletonTable from "@patternfly/react-component-groups/dist/dynamic/SkeletonTable";
import { TableVariant } from '@patternfly/react-table';

export const SkeletonTableExample: React.FC = () => <SkeletonTable rowsCount={10} columns={[ 'First', 'Second' ]} variant={TableVariant.compact} borders={false} />;



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/SkeletonTable/SkeletonTableCustomExample.tsx
================================================
import React from 'react';
import SkeletonTable from "@patternfly/react-component-groups/dist/dynamic/SkeletonTable";
import { Th } from '@patternfly/react-table';

export const SkeletonTableExample: React.FC = () => (
  <SkeletonTable
    rowsCount={10}
    columns={[
      <Th key="1" sort={{ columnIndex: 0, sortBy: {} }}>
        First
      </Th>,
      <Th key="2" sort={{ columnIndex: 1, sortBy: {} }}>
        Second
      </Th>
    ]}
  />
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/SkeletonTable/SkeletonTableExample.tsx
================================================
import React from 'react';
import SkeletonTable from "@patternfly/react-component-groups/dist/dynamic/SkeletonTable";

export const SkeletonTableExample: React.FC = () => <SkeletonTable rowsCount={10} columns={[ 'First', 'Second' ]} />



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/SkeletonTable/SkeletonTableExpandableExample.tsx
================================================
import React from 'react';
import SkeletonTable from "@patternfly/react-component-groups/dist/dynamic/SkeletonTable";

export const SkeletonTableExample: React.FC = () => <SkeletonTable rowsCount={10} columns={[ 'First', 'Second' ]} isExpandable />;



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/SkeletonTable/SkeletonTableHeadExample.tsx
================================================
import React from 'react';
import { Table } from '@patternfly/react-table';
import SkeletonTableHead from "@patternfly/react-component-groups/dist/dynamic/SkeletonTableHead";

export const SkeletonTableHeadExample: React.FC = () => (
  <Table>
    <SkeletonTableHead columns={[ 'First', 'Second' ]} />
  </Table>
);


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/SkeletonTable/SkeletonTableLoadingExample.tsx
================================================
import React from 'react';
import SkeletonTable from "@patternfly/react-component-groups/dist/dynamic/SkeletonTable";
import { Table, Tbody, Td, Th, Tr, Thead } from '@patternfly/react-table';
import { Button, Stack, StackItem } from '@patternfly/react-core';

interface Repository {
  name: string;
  branches: string | null;
  prs: string | null;
  workspaces: string;
  lastCommit: string;
}

export const SkeletonTableExample: React.FC = () => {
  const [ isLoaded, setIsLoaded ] = React.useState(false);

  const loadData = () => {
    setIsLoaded(false);
    setTimeout(() => {
      setIsLoaded(true);
    }, 5000);
  };

  const repositories: Repository[] = [
    { name: 'one', branches: 'two', prs: 'three', workspaces: 'four', lastCommit: 'five' },
    { name: 'one - 2', branches: null, prs: null, workspaces: 'four - 2', lastCommit: 'five - 2' },
    { name: 'one - 3', branches: 'two - 3', prs: 'three - 3', workspaces: 'four - 3', lastCommit: 'five - 3' }
  ];

  const columnNames = {
    name: 'Repositories',
    branches: 'Branches',
    prs: 'Pull requests',
    workspaces: 'Workspaces',
    lastCommit: 'Last commit'
  };

  const table: React.ReactNode = !isLoaded ? (
    <SkeletonTable
      rowsCount={3}
      columns={[
        columnNames.name,
        columnNames.branches,
        columnNames.prs,
        columnNames.workspaces,
        columnNames.lastCommit
      ]}
    />
  ) : (
    <Table>
      <Thead>
        <Tr>
          <Th>{columnNames.name}</Th>
          <Th>{columnNames.branches}</Th>
          <Th>{columnNames.prs}</Th>
          <Th>{columnNames.workspaces}</Th>
          <Th>{columnNames.lastCommit}</Th>
        </Tr>
      </Thead>
      <Tbody>
        {repositories.map((repo) => (
          <Tr key={repo.name}>
            <Td dataLabel={columnNames.name}>{repo.name}</Td>
            <Td dataLabel={columnNames.branches}>{repo.branches || 'N/A'}</Td>
            <Td dataLabel={columnNames.prs}>{repo.prs || 'N/A'}</Td>
            <Td dataLabel={columnNames.workspaces}>{repo.workspaces}</Td>
            <Td dataLabel={columnNames.lastCommit}>{repo.lastCommit}</Td>
          </Tr>
        ))}
      </Tbody>
    </Table>
  );

  React.useEffect(() => {
    loadData();
  }, []);

  return (
    <>
      <Stack hasGutter>
        <StackItem>{table}</StackItem>
        <StackItem>
          <Button onClick={loadData}>
            Reload table
          </Button>
        </StackItem>
      </Stack>
    </>
  );
};



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/SkeletonTable/SkeletonTableSelectableExample.tsx
================================================
import React from 'react';
import SkeletonTable from "@patternfly/react-component-groups/dist/dynamic/SkeletonTable";
import { RowSelectVariant } from '@patternfly/react-table';

export const SkeletonTableExample: React.FC = () => (
  <SkeletonTable rowsCount={10} columns={[ 'First', 'Second' ]} isSelectable selectVariant={RowSelectVariant.radio} />
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/StaleDataWarning/StaleDataWarning.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Status and state indicators
# Sidenav secondary level section
# should be the same for all markdown files
id: Stale data warning
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['StaleDataWarning']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/StaleDataWarning/StaleDataWarning.md
---

import StaleDataWarning from '@patternfly/react-component-groups/dist/dynamic/StaleDataWarning';

A **stale data warning** component displays a warning status when an object is stale and planned for removal. Additional warning details can be displayed as a tooltip or text label. 

## Examples

### Basic stale data warning example

A basic stale data warning component displays a warning icon with additional details in a tooltip, including a timeline for data removal. 

```js file="./StaleDataWarningExample.tsx"

```

### Stale data warning with customized props

Instead of sharing details in a tooltip, you can place a short message beside the icon. You can still utilize all properties of the [tooltip component](/components/tooltip), with the exception of `content`.

```js file="./StaleDataWarningCustomExample.tsx"

```


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/StaleDataWarning/StaleDataWarningCustomExample.tsx
================================================
import React from 'react';
import StaleDataWarning from '@patternfly/react-component-groups/dist/dynamic/StaleDataWarning';
import { Stack, StackItem } from '@patternfly/react-core';


export const CustomizedRenderExample: React.FunctionComponent = () => {
  const staleDate = new Date('Sun Jan 26 2020');
  const warningDate = new Date('Mon Feb 15 2025');
  const cullingDate = new Date('Fri Feb 20 2025');
  return <>
    <Stack>
      <StackItem>
        <StaleDataWarning
          stale={staleDate}
          currDate={new Date()}
          culled={cullingDate}
          staleWarning={warningDate}
          render={({ msg }) => (<React.Fragment>{msg}</React.Fragment>)}>
        </StaleDataWarning>
      </StackItem>

      <StackItem>
        <StaleDataWarning
          stale={staleDate}
          currDate={new Date()}
          culled={new Date('Fri Feb 07 2024')}
          staleWarning={new Date('Mon Feb 03 2024')}
          render={() => (<React.Fragment>This is an error message where the item is overdue</React.Fragment>)}>
        </StaleDataWarning>
      </StackItem>
    </Stack>
   

    
  </>
};


================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/StaleDataWarning/StaleDataWarningExample.tsx
================================================
import React from 'react';
import StaleDataWarning from '@patternfly/react-component-groups/dist/dynamic/StaleDataWarning';
import { Stack, StackItem } from '@patternfly/react-core';

export const BasicExample: React.FunctionComponent = () => {
  const staleDate = new Date('Sun Jan 26 2020');
  const warningDate = new Date('Mon Feb 15 2025');
  const cullingDate = new Date('Fri Feb 20 2025');
  return <>
    <Stack>
      <StackItem>
        <StaleDataWarning
          stale={staleDate}
          currDate={new Date()}
          culled={cullingDate}
          staleWarning={warningDate}>
        </StaleDataWarning>
      </StackItem>

      <StackItem>
        <StaleDataWarning
          stale={staleDate}
          currDate={new Date()}
          culled={new Date('Fri Feb 17 2024')}
          staleWarning={new Date('Mon Feb 5 2024')}
        >
        </StaleDataWarning>
      </StackItem>
    </Stack>
    
    
  </>
};



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Status/IconOnlyStatusExample.tsx
================================================
import React from 'react';
import { Status, IconStatus } from '@patternfly/react-component-groups/dist/dynamic/Status';
import { ExclamationTriangleIcon } from '@patternfly/react-icons/';

export const BasicExample: React.FunctionComponent = () => (
  <Status iconOnly iconTitle='1 security issue found' status={IconStatus.warning} label='Warning' icon={<ExclamationTriangleIcon/>}/>
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Status/LinkStatusExample.tsx
================================================
import React from 'react';
import { IconStatus, Status, StatusVariant } from '@patternfly/react-component-groups/dist/dynamic/Status';
import { CheckCircleIcon } from '@patternfly/react-icons/';

export const BasicExample: React.FunctionComponent = () => (
  // eslint-disable-next-line no-console
  <Status variant={StatusVariant.link} status={IconStatus.success} label='Ready' onClick={() => console.log('Link status clicked')} icon={<CheckCircleIcon/>}/>
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Status/PopoverStatusExample.tsx
================================================
import React from 'react';
import { IconStatus, Status, StatusVariant } from '@patternfly/react-component-groups/dist/dynamic/Status';
import { BanIcon } from '@patternfly/react-icons/';
import { Button, ButtonSize, ButtonVariant } from '@patternfly/react-core';

export const BasicExample: React.FunctionComponent = () => (
  <Status 
    variant={StatusVariant.popover}
    status={IconStatus.danger}
    label='Not Ready' 
    icon={<BanIcon/>}
    popoverProps={{ 
      bodyContent: 'Example state description', 
      footerContent: <Button size={ButtonSize.sm} variant={ButtonVariant.link} isInline>Action</Button> 
    }}
  />
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Status/Status.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Status and state indicators
# Sidenav secondary level section
# should be the same for all markdown files
id: Status
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['Status']
beta: true
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/Status/Status.md
---
import { BanIcon, CheckCircleIcon, ExclamationCircleIcon, ExclamationTriangleIcon } from '@patternfly/react-icons/';
import { Status, StatusVariant, IconStatus } from '@patternfly/react-component-groups/dist/dynamic/Status';

The **status** component's purpose is to display status with icon and text to the user. 

### Basic status

Status component consinsts of an icon configured using `icon` and a message, specified with `label`. 

```js file="./StatusExample.tsx"

```

### Status with description

Optionally a description can be displayed by passing it to the `description` property.

```js file="./StatusDescriptionExample.tsx"

```

### Icon only status

The `iconOnly` flag allows to hide the status message and show only an icon with a tooltip.

```js file="./IconOnlyStatusExample.tsx"

```

### Link status

You can use the link `variant` to display the link button status.

```js file="./LinkStatusExample.tsx"

```

### Popover status

You can use popover `variant` to display the status details in a popover.

```js file="./PopoverStatusExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Status/StatusDescriptionExample.tsx
================================================
import React from 'react';
import { IconStatus, Status } from '@patternfly/react-component-groups/dist/dynamic/Status';
import { ExclamationTriangleIcon } from '@patternfly/react-icons/';

export const BasicExample: React.FunctionComponent = () => (
  <Status status={IconStatus.warning} label='Warning' description='1 issue found' icon={<ExclamationTriangleIcon/>}/>
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Status/StatusExample.tsx
================================================
import React from 'react';
import { IconStatus, Status } from '@patternfly/react-component-groups/dist/dynamic/Status';
import { ExclamationTriangleIcon } from '@patternfly/react-icons/';

export const BasicExample: React.FunctionComponent = () => (
  <Status label='Warning' status={IconStatus.warning} icon={<ExclamationTriangleIcon/>}/>
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/TagCount/TagCount.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Status and state indicators
# Sidenav secondary level section
# should be the same for all markdown files
id: Tag count
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['TagCount']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/TagCount/TagCount.md
---
import TagCount from '@patternfly/react-component-groups/dist/dynamic/TagCount';

The **tag count** component generates a tag icon that displays a number, which represents a count value. 

## Examples

### Basic tag count

A basic tag count uses the `count` property to display the number of tagged items.

```js file="./TagCountExample.tsx"

```

### Disabled tag count

When no value is provided to a tag count component, it will be styled as disabled.

```js file="./TagCountDisabledExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/TagCount/TagCountDisabledExample.tsx
================================================
import React from 'react';
import TagCount from '@patternfly/react-component-groups/dist/dynamic/TagCount';

export const TagCountDisabledExample: React.FunctionComponent = () => <TagCount />



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/TagCount/TagCountExample.tsx
================================================
import React from 'react';
import TagCount from '@patternfly/react-component-groups/dist/dynamic/TagCount';

export const TagCountDisabledExample: React.FunctionComponent = () => <TagCount count={10} />



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/UnauthorizedAccess/UnauthorizedAccess.md
================================================
---
section: Component groups
subsection: Error communication
id: Unauthorized access
source: react
propComponents: ['UnauthorizedAccess']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/UnauthorizedAccess/UnauthorizedAccess.md
---

import UnauthorizedAccess from "@patternfly/react-component-groups/dist/dynamic/UnauthorizedAccess";

A **not authorized** component displays an error screen to users when they attempt to view a page that they don't have permission to access.

## Examples

### Basic unauthorized access

A basic not authorized component displays a title, body text, and custom actions. 

```js file="./UnauthorizedAccessExample.tsx"

```

### Unauthorized access with custom actions

You can customize the not authorized component to fit your use case by specifying the `serviceName` to appear in the title, a `bodyText` of appropriate context for the error, and the `actions` that a user can take instead.

```js file="./UnauthorizedAccessActionsExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/UnauthorizedAccess/UnauthorizedAccessActionsExample.tsx
================================================
import React from 'react';
import { Button } from '@patternfly/react-core';
import UnauthorizedAccess from "@patternfly/react-component-groups/dist/dynamic/UnauthorizedAccess";

export const BasicExample: React.FunctionComponent = () => {
  const primaryAction = 
    <Button key="1">
      Custom primary action
    </Button>;
  const secondaryActions = [
    <Button key="2" variant="link">
      Second action
    </Button>,
    <Button key="3" variant="link">
      Third action
    </Button>
  ];
  return (
    <UnauthorizedAccess 
      primaryAction={primaryAction} 
      secondaryActions={secondaryActions}
      bodyText="Description text" 
      serviceName="Demo bundle"
      prevPageButtonText="Go to previous page"
    />
  );
}



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/UnauthorizedAccess/UnauthorizedAccessExample.tsx
================================================
import React from 'react';
import UnauthorizedAccess from "@patternfly/react-component-groups/dist/dynamic/UnauthorizedAccess";

export const BasicExample: React.FunctionComponent = () => (
  <UnauthorizedAccess 
    bodyText="Description text" 
    serviceName="Demo bundle"
  />
);




================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Unavailable/UnavailableContent.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Error communication
# Sidenav secondary level section
# should be the same for all markdown files
id: Unavailable content
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['UnavailableContent']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/Unavailable/UnavailableContent.md
---

import UnavailableContent from '@patternfly/react-component-groups/dist/dynamic/UnavailableContent';

An **unavailable content** component displays a screen to users when they attempt to view a page that is currently unavailable to view.

## Examples

### Basic unavailable content

A basic unavailable content component provides users with instructions, including a link to check a status page for known issues.
The status page link can be specified using `statusPageUrl`.

```js file="./UnavailableContentExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/Unavailable/UnavailableContentExample.tsx
================================================
import React from 'react';
import UnavailableContent from '@patternfly/react-component-groups/dist/dynamic/UnavailableContent';

export const BasicExample: React.FunctionComponent = () => (
  <UnavailableContent statusPageUrl="https://www.patternfly.org"/>
);



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/WarningModal/WarningModal.md
================================================
---
# Sidenav top-level section
# should be the same for all markdown files
section: Component groups
subsection: Error communication
# Sidenav secondary level section
# should be the same for all markdown files
id: Warning modal
# Tab (react | react-demos | html | html-demos | design-guidelines | accessibility)
source: react
# If you use typescript, the name of the interface to display props for
# These are found through the sourceProps function provided in patternfly-docs.source.js
propComponents: ['WarningModal']
sourceLink: https://github.com/patternfly/react-component-groups/blob/main/packages/module/patternfly-docs/content/extensions/component-groups/examples/WarningModal/WarningModal.md
---

import WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';

A **warning modal** component displays a modal when a user tries to perform a risky action, which asks them to confirm or cancel the action.

## Examples

### Basic warning modal

A basic warning modal is triggered when a user tries to perform an action that is deemed risky. 

You can customize the contents of the modal to fit your use cases. To adjust the text in the modal, pass your desired title to `title` and your message to the `<WarningModal>` component. To customize the action buttons in the modal, use `onConfirm` and `onClose`. 

For further customization, you can utilize all properties of the [modal component](/components/modal), with the exception of `ref`.

```js file="./WarningModalExample.tsx"

```

### Warning modal with a custom button variant

You can apply custom variant to a warning modal's confirmation button.

```js file="./WarningModalDangerExample.tsx"

```


### Warning modal with a checkbox

To confirm that a user wishes to initiate a selected action, you can add a checkbox to a warning modal.

```js file="./WarningModalCheckboxExample.tsx"

```


### Warning modal with a text confirmation

To ensure the user intentionally initiates a selected action, you can add a confirmation text input.

```js file="./WarningModalTextConfirmationExample.tsx"

```



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/WarningModal/WarningModalCheckboxExample.tsx
================================================
import React from 'react';
import WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';
import { Button, ButtonVariant } from '@patternfly/react-core';

export const BasicExample: React.FunctionComponent = () => {
  const [ isOpen, setIsOpen ] = React.useState(false);
  return <>
    <Button onClick={() => setIsOpen(true)}>Open modal</Button>
    <WarningModal
      isOpen={isOpen}
      title='Unsaved changes'
      onClose={() => setIsOpen(false)}
      onConfirm={() => setIsOpen(false)}
      withCheckbox
      checkboxLabel='Are you sure?'
      confirmButtonVariant={ButtonVariant.danger}
    >
      Your page contains unsaved changes. Do you want to leave?
    </WarningModal>
  </>
};



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/WarningModal/WarningModalDangerExample.tsx
================================================
import React from 'react';
import WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';
import { Button, ButtonVariant } from '@patternfly/react-core';

export const BasicExample: React.FunctionComponent = () => {
  const [ isOpen, setIsOpen ] = React.useState(false);
  return <>
    <Button onClick={() => setIsOpen(true)}>Open modal</Button>
    <WarningModal
      isOpen={isOpen}
      title='Unsaved changes'
      confirmButtonVariant={ButtonVariant.danger}
      onClose={() => setIsOpen(false)}
      onConfirm={() => setIsOpen(false)}>
      Your page contains unsaved changes. Do you want to leave?
    </WarningModal>
  </>
};



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/WarningModal/WarningModalExample.tsx
================================================
import React from 'react';
import WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';
import { Button } from '@patternfly/react-core';

export const BasicExample: React.FunctionComponent = () => {
  const [ isOpen, setIsOpen ] = React.useState(false);
  return <>
    <Button onClick={() => setIsOpen(true)}>Open modal</Button>
    <WarningModal
      isOpen={isOpen}
      title='Unsaved changes'
      confirmButtonLabel='Yes'
      cancelButtonLabel='No'
      onClose={() => setIsOpen(false)}
      onConfirm={() => setIsOpen(false)}>
      Your page contains unsaved changes. Do you want to leave?
    </WarningModal>
  </>
};



================================================
FILE: packages/module/patternfly-docs/content/extensions/component-groups/examples/WarningModal/WarningModalTextConfirmationExample.tsx
================================================
import React from 'react';
import WarningModal from '@patternfly/react-component-groups/dist/dynamic/WarningModal';
import { Button } from '@patternfly/react-core';

export const BasicExample: React.FunctionComponent = () => {
  const [ isOpen, setIsOpen ] = React.useState(false);
  return <>
    <Button onClick={() => setIsOpen(true)}>Open modal</Button>
    <WarningModal
      isOpen={isOpen}
      title='Delete item?'
      confirmButtonLabel='Yes'
      cancelButtonLabel='No'
      onClose={() => setIsOpen(false)}
      onConfirm={() => setIsOpen(false)}
      confirmationInputProps={{ type: 'text', isRequired: true }}
      confirmationText='Item1'>
      The item will be deleted.
    </WarningModal>
  </>
};



================================================
FILE: packages/module/patternfly-docs/pages/index.js
================================================
import React from 'react';
import { Title, PageSection } from '@patternfly/react-core';

const centerStyle = {
  flexGrow: 1,
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center'
};

const IndexPage = () => {
  return (
    <PageSection hasBodyWrapper={false} style={centerStyle}>
      <div style={{ flex: 'none', textAlign: 'center' }}>
        <Title size="4xl" headingLevel="h1">
          My extension docs
        </Title>
        <Title size="2xl" headingLevel="h2">
          {'Hi people!'}
        </Title>
        <p>Welcome to my extension docs.</p>
      </div>
    </PageSection>
  );
};

export default IndexPage;



================================================
FILE: packages/module/src/index.ts
================================================
// this file is autogenerated by generate-index.js, modifying it manually will have no effect

export { default as WarningModal } from './WarningModal';
export * from './WarningModal';

export { default as UnavailableContent } from './UnavailableContent';
export * from './UnavailableContent';

export { default as UnauthorizedAccess } from './UnauthorizedAccess';
export * from './UnauthorizedAccess';

export { default as TagCount } from './TagCount';
export * from './TagCount';

export { default as StaleDataWarning } from './StaleDataWarning';
export * from './StaleDataWarning';

export { default as SkeletonTableHead } from './SkeletonTableHead';
export * from './SkeletonTableHead';

export { default as SkeletonTableBody } from './SkeletonTableBody';
export * from './SkeletonTableBody';

export { default as SkeletonTable } from './SkeletonTable';
export * from './SkeletonTable';

export { default as ShortcutGrid } from './ShortcutGrid';
export * from './ShortcutGrid';

export { default as Shortcut } from './Shortcut';
export * from './Shortcut';

export { default as Severity } from './Severity';
export * from './Severity';

export { default as ServiceCard } from './ServiceCard';
export * from './ServiceCard';

export { default as ResponsiveActions } from './ResponsiveActions';
export * from './ResponsiveActions';

export { default as ResponsiveAction } from './ResponsiveAction';
export * from './ResponsiveAction';

export { default as PageHeader } from './PageHeader';
export * from './PageHeader';

export { default as NotFoundIcon } from './NotFoundIcon';
export * from './NotFoundIcon';

export { default as MultiContentCard } from './MultiContentCard';
export * from './MultiContentCard';

export { default as MissingPage } from './MissingPage';
export * from './MissingPage';

export { default as Maintenance } from './Maintenance';
export * from './Maintenance';

export { default as LogSnippet } from './LogSnippet';
export * from './LogSnippet';

export { default as ErrorState } from './ErrorState';
export * from './ErrorState';

export { default as ErrorStack } from './ErrorStack';
export * from './ErrorStack';

export { default as ErrorBoundary } from './ErrorBoundary';
export * from './ErrorBoundary';

export { default as ColumnManagementModal } from './ColumnManagementModal';
export * from './ColumnManagementModal';

export { default as CloseButton } from './CloseButton';
export * from './CloseButton';

export { default as BulkSelect } from './BulkSelect';
export * from './BulkSelect';

export { default as Ansible } from './Ansible';
export * from './Ansible';



================================================
FILE: packages/module/src/Ansible/Ansible.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import Ansible from './Ansible';

describe('Ansible component', () => {

  it('should render unsupported', () => {
    const { container } = render(<Ansible isSupported={false} />);
    expect(container).toMatchSnapshot();
  });

  it('should render supported', () => {
    const { container } = render(<Ansible />);
    expect(container).toMatchSnapshot();
  });

  it('should render RHAAP', () => {
    const { container } = render(<Ansible isRHAAP />);
    expect(container).toMatchSnapshot();
  });
});



================================================
FILE: packages/module/src/Ansible/Ansible.tsx
================================================
import React from 'react';
import clsx from 'clsx';
import { createUseStyles } from 'react-jss';

export interface AnsibleProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement> {
  /** Supported/unsupported variant flag */
  isSupported?: boolean;
  /** Red Hat Ansible Automation Platform technology icon */
  isRHAAP?: boolean;
  /** Ansible icon className */
  className?: string;
  /** Custom OUIA ID */
  ouiaId?: string | number;
}

const RHAAPTechnologyIcon = 
<svg
  width="24" height="24" viewBox="0 0 38 38"
  xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      {`.uuid-6998fa22-ec9a-4e2f-9d0d-f4bc3361e80e{fill:#e00;}`}
      {`.uuid-2a01d04c-89d4-48ba-a2d8-51034215da9b{fill:#fff;}`}
      {`.uuid-a19226e8-b71f-481c-815f-1ed60f4363a6{fill:#4d4d4d;}`}
    </style>
  </defs>
  <rect x="1" y="1" width="36" height="36" rx="9" ry="9"/>
  <path className="uuid-a19226e8-b71f-481c-815f-1ed60f4363a6" d="m28,2.25c4.27338,0,7.75,3.47664,7.75,7.75v18c0,4.27336-3.47662,7.75-7.75,7.75H10c-4.27338,0-7.75-3.47664-7.75-7.75V10c0-4.27336,3.47662-7.75,7.75-7.75h18m0-1.25H10C5.02942,1,1,5.02944,1,10v18c0,4.97057,4.02942,9,9,9h18c4.97058,0,9-4.02943,9-9V10c0-4.97056-4.02942-9-9-9h0Z"/>
  <path className="uuid-2a01d04c-89d4-48ba-a2d8-51034215da9b" d="m15,23.625c-.08594,0-.17383-.01758-.25684-.05566-.31445-.1416-.45508-.51172-.3125-.82617l2.02051-4.48145c.00293-.00586.00586-.01172.00781-.01758l1.97168-4.36914c.20117-.44922.9375-.44922,1.13867,0l4,8.86816c.11814.25977.04395.56641-.17871.74512-.22266.17773-.53613.18262-.7666.01172l-5.34961-4.02148-1.70508,3.77832c-.10352.23145-.33105.36816-.56934.36816Zm2.80078-5.31445l3.62891,2.72754-2.42969-5.38574-1.19922,2.6582Z"/>
  <path className="uuid-6998fa22-ec9a-4e2f-9d0d-f4bc3361e80e" d="m19,30.125c-6.13477,0-11.125-4.99023-11.125-11.125s4.99023-11.125,11.125-11.125,11.125,4.99023,11.125,11.125-4.99023,11.125-11.125,11.125Zm0-21c-5.44531,0-9.875,4.42969-9.875,9.875s4.42969,9.875,9.875,9.875,9.875-4.42969,9.875-9.875-4.42969-9.875-9.875-9.875Z"/>
</svg>

const useStyles = createUseStyles({
  ansible: {
    '& svg': {
      height: 'var(--pf-t--global--font--size--xl)',
      position: 'relative',
      top: '0.25rem'
    }
  },
  ansibleSupported: {
    '& .st0': {
      fill: 'var(--pf-t-global--icon--color--regular)',
    }
  },
  ansibleUnsupported: {
    '& .st0, .st1, .st2': {
      fill: 'var(--pf-t--global--icon--color--disabled)',
      cursor: 'not-allowed',
    }
  }
})

const Ansible: React.FunctionComponent<AnsibleProps> = ({ isSupported = true, isRHAAP, className, ouiaId = "Ansible-icon", ...props }: AnsibleProps) => {
  const classes = useStyles();
  const ansibleLogoClass = clsx(
    classes.ansible,
    { [classes.ansibleSupported]: isSupported },
    { [classes.ansibleUnsupported]: !isSupported },
    className
  );

  const unsupportedSlash = (
    <React.Fragment>
      <rect
        x="1245.1"
        y="272.4"
        transform="matrix(-0.7071 0.7071 -0.7071 -0.7071 3082.5815 -510.474)"
        className="st0"
        width="803.8"
        height="221.5"
      />
  
      <rect
        x="-279.7"
        y="904"
        transform="matrix(-0.7071 0.7071 -0.7071 -0.7071 2450.9683 1014.3757)"
        className="st1"
        width="2590.2"
        height="221.5"
      />
  
      <rect
        x="17.1"
        y="1620.5"
        transform="matrix(-0.7071 0.7071 -0.7071 -0.7071 1734.4641 2744.1697)"
        className="st0"
        width="563.7"
        height="221.5"
      />
    </React.Fragment>
  );

  return (
    <React.Fragment>
      {isRHAAP ? (
        <i title="Red Hat Ansible Automation Platform" data-ouia-component-id={ouiaId} {...props}>
          {RHAAPTechnologyIcon}
        </i>
      ) : (
        <i className={ansibleLogoClass} title={isSupported ? "Ansible supported" : "Ansible is not supported" } data-ouia-component-id={ouiaId} {...props}>
          <svg
            version="1.1"
            x="0px"
            y="0px"
            viewBox="0 0 2032 2027.2"
            style={{ enableBackground: 'new 0 0 2032 2027.2' } as React.CSSProperties}
          >
            <path
              className="st0"
              d="M2030.8,1014.8c0,559.2-453.3,1012.4-1012.4,1012.4C459.2,2027.2,5.9,1574,5.9,1014.8
                        C5.9,455.7,459.2,2.4,1018.3,2.4C1577.5,2.4,2030.8,455.7,2030.8,1014.8 M1035.4,620.9l262,646.6L901.7,955.8L1035.4,620.9
                        L1035.4,620.9z M1500.8,1416.5l-403-969.9c-11.5-28-34.5-42.8-62.4-42.8c-28,0-52.7,14.8-64.2,42.8L528.9,1510.4h151.3l175.1-438.6
                        l522.5,422.1c21,17,36.2,24.7,55.9,24.7c39.5,0,74-29.6,74-72.3C1507.7,1439.4,1505.3,1428.3,1500.8,1416.5L1500.8,1416.5z"
            />
            {isSupported ? null : unsupportedSlash}
          </svg>
        </i>
      ) }
    </React.Fragment>
  );
};

export default Ansible;



================================================
FILE: packages/module/src/Ansible/index.ts
================================================
export { default } from './Ansible';
export * from './Ansible';



================================================
FILE: packages/module/src/Ansible/__snapshots__/Ansible.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Ansible component should render RHAAP 1`] = `
<div>
  <i
    data-ouia-component-id="Ansible-icon"
    title="Red Hat Ansible Automation Platform"
  >
    <svg
      height="24"
      viewBox="0 0 38 38"
      width="24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <defs>
        <style>
          .uuid-6998fa22-ec9a-4e2f-9d0d-f4bc3361e80e{fill:#e00;}
          .uuid-2a01d04c-89d4-48ba-a2d8-51034215da9b{fill:#fff;}
          .uuid-a19226e8-b71f-481c-815f-1ed60f4363a6{fill:#4d4d4d;}
        </style>
      </defs>
      <rect
        height="36"
        rx="9"
        ry="9"
        width="36"
        x="1"
        y="1"
      />
      <path
        class="uuid-a19226e8-b71f-481c-815f-1ed60f4363a6"
        d="m28,2.25c4.27338,0,7.75,3.47664,7.75,7.75v18c0,4.27336-3.47662,7.75-7.75,7.75H10c-4.27338,0-7.75-3.47664-7.75-7.75V10c0-4.27336,3.47662-7.75,7.75-7.75h18m0-1.25H10C5.02942,1,1,5.02944,1,10v18c0,4.97057,4.02942,9,9,9h18c4.97058,0,9-4.02943,9-9V10c0-4.97056-4.02942-9-9-9h0Z"
      />
      <path
        class="uuid-2a01d04c-89d4-48ba-a2d8-51034215da9b"
        d="m15,23.625c-.08594,0-.17383-.01758-.25684-.05566-.31445-.1416-.45508-.51172-.3125-.82617l2.02051-4.48145c.00293-.00586.00586-.01172.00781-.01758l1.97168-4.36914c.20117-.44922.9375-.44922,1.13867,0l4,8.86816c.11814.25977.04395.56641-.17871.74512-.22266.17773-.53613.18262-.7666.01172l-5.34961-4.02148-1.70508,3.77832c-.10352.23145-.33105.36816-.56934.36816Zm2.80078-5.31445l3.62891,2.72754-2.42969-5.38574-1.19922,2.6582Z"
      />
      <path
        class="uuid-6998fa22-ec9a-4e2f-9d0d-f4bc3361e80e"
        d="m19,30.125c-6.13477,0-11.125-4.99023-11.125-11.125s4.99023-11.125,11.125-11.125,11.125,4.99023,11.125,11.125-4.99023,11.125-11.125,11.125Zm0-21c-5.44531,0-9.875,4.42969-9.875,9.875s4.42969,9.875,9.875,9.875,9.875-4.42969,9.875-9.875-4.42969-9.875-9.875-9.875Z"
      />
    </svg>
  </i>
</div>
`;

exports[`Ansible component should render supported 1`] = `
<div>
  <i
    class="ansible-0-2-1 ansibleSupported-0-2-2"
    data-ouia-component-id="Ansible-icon"
    title="Ansible supported"
  >
    <svg
      style="enable-background: new 0 0 2032 2027.2;"
      version="1.1"
      viewBox="0 0 2032 2027.2"
      x="0px"
      y="0px"
    >
      <path
        class="st0"
        d="M2030.8,1014.8c0,559.2-453.3,1012.4-1012.4,1012.4C459.2,2027.2,5.9,1574,5.9,1014.8
                        C5.9,455.7,459.2,2.4,1018.3,2.4C1577.5,2.4,2030.8,455.7,2030.8,1014.8 M1035.4,620.9l262,646.6L901.7,955.8L1035.4,620.9
                        L1035.4,620.9z M1500.8,1416.5l-403-969.9c-11.5-28-34.5-42.8-62.4-42.8c-28,0-52.7,14.8-64.2,42.8L528.9,1510.4h151.3l175.1-438.6
                        l522.5,422.1c21,17,36.2,24.7,55.9,24.7c39.5,0,74-29.6,74-72.3C1507.7,1439.4,1505.3,1428.3,1500.8,1416.5L1500.8,1416.5z"
      />
    </svg>
  </i>
</div>
`;

exports[`Ansible component should render unsupported 1`] = `
<div>
  <i
    class="ansible-0-2-1 ansibleUnsupported-0-2-3"
    data-ouia-component-id="Ansible-icon"
    title="Ansible is not supported"
  >
    <svg
      style="enable-background: new 0 0 2032 2027.2;"
      version="1.1"
      viewBox="0 0 2032 2027.2"
      x="0px"
      y="0px"
    >
      <path
        class="st0"
        d="M2030.8,1014.8c0,559.2-453.3,1012.4-1012.4,1012.4C459.2,2027.2,5.9,1574,5.9,1014.8
                        C5.9,455.7,459.2,2.4,1018.3,2.4C1577.5,2.4,2030.8,455.7,2030.8,1014.8 M1035.4,620.9l262,646.6L901.7,955.8L1035.4,620.9
                        L1035.4,620.9z M1500.8,1416.5l-403-969.9c-11.5-28-34.5-42.8-62.4-42.8c-28,0-52.7,14.8-64.2,42.8L528.9,1510.4h151.3l175.1-438.6
                        l522.5,422.1c21,17,36.2,24.7,55.9,24.7c39.5,0,74-29.6,74-72.3C1507.7,1439.4,1505.3,1428.3,1500.8,1416.5L1500.8,1416.5z"
      />
      <rect
        class="st0"
        height="221.5"
        transform="matrix(-0.7071 0.7071 -0.7071 -0.7071 3082.5815 -510.474)"
        width="803.8"
        x="1245.1"
        y="272.4"
      />
      <rect
        class="st1"
        height="221.5"
        transform="matrix(-0.7071 0.7071 -0.7071 -0.7071 2450.9683 1014.3757)"
        width="2590.2"
        x="-279.7"
        y="904"
      />
      <rect
        class="st0"
        height="221.5"
        transform="matrix(-0.7071 0.7071 -0.7071 -0.7071 1734.4641 2744.1697)"
        width="563.7"
        x="17.1"
        y="1620.5"
      />
    </svg>
  </i>
</div>
`;



================================================
FILE: packages/module/src/BulkSelect/BulkSelect.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import BulkSelect from './BulkSelect';

describe('BulkSelect component', () => {
  test('should render', () => {
    expect(render(
      <BulkSelect
        canSelectAll
        pageCount={5}
        totalCount={10}
        selectedCount={2}
        pageSelected={false}
        pagePartiallySelected={true}
        onSelect={() => null}
      />)).toMatchSnapshot();
  });
});


================================================
FILE: packages/module/src/BulkSelect/BulkSelect.tsx
================================================
import React, { useMemo, useState } from 'react';
import {
  Dropdown,
  DropdownItem,
  DropdownList,
  DropdownProps,
  MenuToggle,
  MenuToggleCheckbox,
  MenuToggleCheckboxProps,
  MenuToggleElement
} from '@patternfly/react-core';

export const BulkSelectValue = {
  all: 'all',
  none: 'none',
  page: 'page',
  nonePage: 'nonePage'
} as const;

export type BulkSelectValue = (typeof BulkSelectValue)[keyof typeof BulkSelectValue];

/** extends DropdownProps */
export interface BulkSelectProps extends Omit<DropdownProps, 'toggle' | 'onSelect'> {
  /** BulkSelect className */
  className?: string;
  /** Indicates whether selectable items are paginated */
  isDataPaginated?: boolean;
  /** Indicates whether "Select all" option should be available */
  canSelectAll?: boolean;
  /** Number of entries present in current page */
  pageCount?: number;
  /** Number of selected entries */
  selectedCount: number;
  /** Number of all entries */
  totalCount?: number;
  /** Indicates if ALL current page items are selected */
  pageSelected?: boolean;
  /** Indicates if ONLY some current page items are selected */
  pagePartiallySelected?: boolean;
  /** Callback called on item select */
  onSelect: (value: BulkSelectValue) => void;
  /** Custom OUIA ID */
  ouiaId?: string;
  /** Additional props for MenuToggleCheckbox */
  menuToggleCheckboxProps?: Omit<MenuToggleCheckboxProps, 'onChange' | 'isChecked' | 'instance' | 'ref'>;
}

export const BulkSelect: React.FC<BulkSelectProps> = ({
  isDataPaginated = true,
  canSelectAll,
  pageSelected,
  pagePartiallySelected,
  pageCount,
  selectedCount = 0,
  totalCount = 0,
  ouiaId = 'BulkSelect',
  onSelect,
  menuToggleCheckboxProps,
  ...props
}: BulkSelectProps) => {
  const [ isOpen, setOpen ] = useState(false);

  const splitButtonDropdownItems = useMemo(
    () => (
      <>
        <DropdownItem ouiaId={`${ouiaId}-select-none`} value={BulkSelectValue.none} key={BulkSelectValue.none}>
          Select none (0)
        </DropdownItem>
        {isDataPaginated && (
          <DropdownItem ouiaId={`${ouiaId}-select-page`} value={BulkSelectValue.page} key={BulkSelectValue.page}>
            {`Select page${pageCount ? ` (${pageCount})` : ''}`}
          </DropdownItem>
        )}
        {canSelectAll && (
          <DropdownItem ouiaId={`${ouiaId}-select-all`} value={BulkSelectValue.all} key={BulkSelectValue.all}>
            {`Select all${totalCount ? ` (${totalCount})` : ''}`}
          </DropdownItem>
        )}
      </>
    ),
    [ isDataPaginated, canSelectAll, ouiaId, pageCount, totalCount ]
  );

  const allOption = isDataPaginated ? BulkSelectValue.page : BulkSelectValue.all;
  const noneOption = isDataPaginated ? BulkSelectValue.nonePage : BulkSelectValue.none;

  const onToggleClick = () => setOpen(!isOpen);

  return (
    <Dropdown
      shouldFocusToggleOnSelect
      ouiaId={`${ouiaId}-dropdown`}
      onSelect={(_e, value) => {
        setOpen(!isOpen);
        onSelect?.(value as BulkSelectValue);
      }}
      isOpen={isOpen}
      onOpenChange={(isOpen: boolean) => setOpen(isOpen)}
      toggle={(toggleRef: React.Ref<MenuToggleElement>) => (
        <MenuToggle
          ref={toggleRef}
          isExpanded={isOpen}
          onClick={onToggleClick}
          aria-label="Bulk select toggle"
          ouiaId={`${ouiaId}-toggle`}
          splitButtonItems={[
            <MenuToggleCheckbox
              ouiaId={`${ouiaId}-checkbox`}
              id={`${ouiaId}-checkbox`}
              key="bulk-select-checkbox"
              aria-label={`Select ${allOption}`}
              isChecked={
                (isDataPaginated && pagePartiallySelected) ||
                  (!isDataPaginated && selectedCount > 0 && selectedCount < totalCount)
                  ? null
                  : pageSelected || (selectedCount === totalCount && totalCount > 0)
              }
              onChange={(checked) => onSelect?.(!checked || checked === null ? noneOption : allOption)}
              {...menuToggleCheckboxProps}
            />,
            selectedCount > 0 ? (
              <span onClick={onToggleClick} data-ouia-component-id={`${ouiaId}-text`} key="bulk-select-text">
                {`${selectedCount} selected`}
              </span>
            ) : null
          ]}
        />
      )}
      {...props}
    >
      <DropdownList>{splitButtonDropdownItems}</DropdownList>
    </Dropdown>
  );
};

export default BulkSelect;



================================================
FILE: packages/module/src/BulkSelect/index.ts
================================================
export { default } from './BulkSelect';
export * from './BulkSelect';



================================================
FILE: packages/module/src/BulkSelect/__snapshots__/BulkSelect.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BulkSelect component should render 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="pf-v6-c-menu-toggle pf-m-split-button"
      >
        <label
          class="pf-v6-c-check pf-m-standalone"
        >
          <input
            aria-invalid="false"
            aria-label="Select page"
            class="pf-v6-c-check__input"
            data-ouia-component-id="BulkSelect-checkbox"
            data-ouia-component-type="PF6/MenuToggleCheckbox"
            data-ouia-safe="true"
            name="BulkSelect-checkbox"
            type="checkbox"
          />
        </label>
        <span
          data-ouia-component-id="BulkSelect-text"
        >
          2 selected
        </span>
        <button
          aria-expanded="false"
          aria-label="Bulk select toggle"
          class="pf-v6-c-menu-toggle__button"
          data-ouia-component-id="BulkSelect-toggle"
          data-ouia-component-type="PF6/MenuToggle"
          data-ouia-safe="true"
          type="button"
        >
          <span
            class="pf-v6-c-menu-toggle__controls"
          >
            <span
              class="pf-v6-c-menu-toggle__toggle-icon"
            >
              <svg
                aria-hidden="true"
                class="pf-v6-svg"
                fill="currentColor"
                height="1em"
                role="img"
                viewBox="0 0 320 512"
                width="1em"
              >
                <path
                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                />
              </svg>
            </span>
          </span>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="pf-v6-c-menu-toggle pf-m-split-button"
    >
      <label
        class="pf-v6-c-check pf-m-standalone"
      >
        <input
          aria-invalid="false"
          aria-label="Select page"
          class="pf-v6-c-check__input"
          data-ouia-component-id="BulkSelect-checkbox"
          data-ouia-component-type="PF6/MenuToggleCheckbox"
          data-ouia-safe="true"
          name="BulkSelect-checkbox"
          type="checkbox"
        />
      </label>
      <span
        data-ouia-component-id="BulkSelect-text"
      >
        2 selected
      </span>
      <button
        aria-expanded="false"
        aria-label="Bulk select toggle"
        class="pf-v6-c-menu-toggle__button"
        data-ouia-component-id="BulkSelect-toggle"
        data-ouia-component-type="PF6/MenuToggle"
        data-ouia-safe="true"
        type="button"
      >
        <span
          class="pf-v6-c-menu-toggle__controls"
        >
          <span
            class="pf-v6-c-menu-toggle__toggle-icon"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              />
            </svg>
          </span>
        </span>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/CloseButton/CloseButton.tsx
================================================
import React from 'react';
import { Button, ButtonProps, ButtonVariant } from '@patternfly/react-core';
import { CloseIcon } from '@patternfly/react-icons';
import { createUseStyles } from 'react-jss';
import clsx from 'clsx';

const useStyles = createUseStyles({
  closeButton: {
    float: 'inline-end',
    padding: '10px 14px'
  },
});

/** extends ButtonProps */
export interface CloseButtonProps extends ButtonProps {
  /** Data test ID used for testing. */
  dataTestID?: string;
};

export const CloseButton: React.FunctionComponent<CloseButtonProps> = ({
  className,
  dataTestID,
  onClick,
  ouiaId="CloseButton",
  ...props
}: CloseButtonProps) => {
  const classes = useStyles();
  return (
    <Button icon={<CloseIcon />}
      aria-label={props['aria-label'] || 'Close'}
      className={clsx(classes.closeButton, className)}
      data-test-id={dataTestID}
      onClick={onClick}
      variant={ButtonVariant.plain}
      ouiaId={ouiaId}
      {...props}
    />
  );
};

export default CloseButton;



================================================
FILE: packages/module/src/CloseButton/index.ts
================================================
export { default } from './CloseButton';
export * from './CloseButton';



================================================
FILE: packages/module/src/ColumnManagementModal/ColumnManagementModal.test.tsx
================================================
import * as React from 'react';
import '@testing-library/jest-dom'
import { render, screen, fireEvent } from '@testing-library/react';
import ColumnManagementModal, { ColumnManagementModalColumn } from './ColumnManagementModal';

const DEFAULT_COLUMNS : ColumnManagementModalColumn[] = [
  {
    title: 'ID',
    key: 'id',
    isShownByDefault: true,
    isShown: true,
    isUntoggleable: true
  },
  {
    title: 'Publish date',
    key: 'publishDate',
    isShownByDefault: true,
    isShown: true
  },
  {
    title: 'Impact',
    key: 'impact',
    isShownByDefault: true,
    isShown: true
  },
  {
    title: 'Score',
    key: 'score',
    isShownByDefault: false,
    isShown: false
  }
];

const onClose = jest.fn();
const setColumns = jest.fn();

beforeEach(() => {
  render(<ColumnManagementModal
    appliedColumns={DEFAULT_COLUMNS}
    applyColumns={newColumns => setColumns(newColumns)}
    isOpen
    onClose={onClose}
    data-testid="column-mgmt-modal"
  />);
});

const getCheckboxesState = () => {
  const checkboxes = screen.getByTestId('column-mgmt-modal').querySelectorAll('input[type="checkbox"]');
  return (Array.from(checkboxes) as HTMLInputElement[]).map(c => c.checked);
}

describe('ColumnManagementModal component', () => {
  it('should have disabled and checked checkboxes for columns that should always be shown', () => {
    expect(getCheckboxesState()).toEqual(DEFAULT_COLUMNS.map(c => c.isShownByDefault));
  });

  it('should have checkbox checked if column is shown by default', () => {
    const idCheckbox = screen.getByTestId('column-mgmt-modal').querySelector('input[type="checkbox"][data-ouia-component-id="ColumnManagementModal-column0-checkbox"]');

    expect(idCheckbox).toHaveAttribute('disabled');
    expect(idCheckbox).toHaveAttribute('checked');
  });

  it('should set columns to default state upon clicking on "Reset to default"', () => {
    // disable Impact column which is enabled by default
    fireEvent.click(screen.getByText('Impact'));

    // enable Score column which is disabled by default
    fireEvent.click(screen.getByText('Score'));

    fireEvent.click(screen.getByText('Reset to default'));
  
    expect(getCheckboxesState()).toEqual(DEFAULT_COLUMNS.map(c => c.isShownByDefault));
  });

  it('should set all columns to show upon clicking on "Select all"', () => {
    // disable Impact column which is enabled by default
    fireEvent.click(screen.getByText('Impact'));

    fireEvent.click(screen.getByText('Select all'));

    expect(getCheckboxesState()).toEqual(DEFAULT_COLUMNS.map(_ => true));
  });

  it('should change columns on save', () => {
    fireEvent.click(screen.getByText('Impact'));
    fireEvent.click(screen.getByText('Save'));

    const expectedColumns = DEFAULT_COLUMNS;
    const impactColumn = expectedColumns.find(c => c.title === 'Impact');

    if (impactColumn === undefined) {
      throw new Error('Expected to find "Impact" column in "DEFAULT_COLUMNS"');
    }

    impactColumn.isShown = false;

    expect(onClose).toHaveBeenCalled();
    expect(setColumns).toHaveBeenCalledWith(expectedColumns);
  });

  it('should retain columns on cancel', () => {
    fireEvent.click(screen.getByText('Impact'));
    fireEvent.click(screen.getByText('Cancel'));

    expect(onClose).toHaveBeenCalled();
    expect(setColumns).toHaveBeenCalledWith(DEFAULT_COLUMNS);
  });
});



================================================
FILE: packages/module/src/ColumnManagementModal/ColumnManagementModal.tsx
================================================
import React from 'react';
import {
  Button,
  Content,
  ContentVariants,
  DataListItem,
  DataList,
  DataListItemRow,
  DataListCheck,
  DataListCell,
  DataListItemCells,
  Split,
  SplitItem,
  ButtonVariant
} from '@patternfly/react-core';
import { ModalProps, Modal, ModalVariant } from '@patternfly/react-core/deprecated';

export interface ColumnManagementModalColumn {
  /** Internal identifier of a column by which table displayed columns are filtered. */
  key: string,
  /** The actual display name of the column possibly with a tooltip or icon. */
  title: React.ReactNode,
  /** If user changes checkboxes, the component will send back column array with this property altered. */
  isShown?: boolean,
  /** Set to false if the column should be hidden initially */
  isShownByDefault: boolean,
  /** The checkbox will be disabled, this is applicable to columns which should not be toggleable by user */
  isUntoggleable?: boolean
}

/** extends ModalProps */
export interface ColumnManagementModalProps extends Omit<ModalProps, 'ref' | 'children'> {
  /** Flag to show the modal */
  isOpen?: boolean,
  /** Invoked when modal visibility is changed */
  onClose?: (event: KeyboardEvent | React.MouseEvent) => void,
  /** Current column state */
  appliedColumns: ColumnManagementModalColumn[],
  /** Invoked with new column state after save button is clicked */
  applyColumns: (newColumns: ColumnManagementModalColumn[]) => void,
  /* Modal description text */
  description?: string,
  /* Modal title text */
  title?: string,
  /** Custom OUIA ID */
  ouiaId?: string | number,
};

const ColumnManagementModal: React.FunctionComponent<ColumnManagementModalProps> = (
  { title = 'Manage columns',
    description = 'Selected categories will be displayed in the table.',
    isOpen = false,
    onClose = () => undefined,
    appliedColumns,
    applyColumns,
    ouiaId = 'ColumnManagementModal',
    ...props }: ColumnManagementModalProps) => {

  const [ currentColumns, setCurrentColumns ] = React.useState(
    appliedColumns.map(column => ({ ...column, isShown: column.isShown ?? column.isShownByDefault }))
  );

  const handleChange = index => {
    const newColumns = [ ...currentColumns ];
    const changedColumn = { ...newColumns[index] };

    changedColumn.isShown = !changedColumn.isShown;
    newColumns[index] = changedColumn;

    setCurrentColumns(newColumns);
  };

  const selectAll = () => {
    let newColumns = [ ...currentColumns ];
    newColumns = newColumns.map(column => ({ ...column, isShown: true }));

    setCurrentColumns(newColumns);
  };

  const resetToDefault = () => {
    setCurrentColumns(currentColumns.map(column => ({ ...column, isShown: column.isShownByDefault ?? false })));
  };

  const handleSave = event => {
    applyColumns(currentColumns);
    onClose(event);
  };

  const handleCancel = event => {
    setCurrentColumns(appliedColumns.map(column => ({ ...column, isShown: column.isShown ?? column.isShownByDefault })));
    onClose(event);
  };

  return (
    <Modal
      title={title}
      onClose={onClose}
      isOpen={isOpen}
      variant={ModalVariant.small}
      description={
        <>
          <Content component={ContentVariants.p}>{description}</Content>
          <Split hasGutter>
            <SplitItem>
              <Button isInline onClick={selectAll} variant={ButtonVariant.link} ouiaId={`${ouiaId}-selectAll-button`}>
                Select all
              </Button>
            </SplitItem>
            <SplitItem>
              <Button isInline onClick={resetToDefault} variant={ButtonVariant.link} ouiaId={`${ouiaId}-reset-button`}>
                Reset to default
              </Button>
            </SplitItem>
          </Split>
        </>
      }
      actions={[
        <Button key="save" className='pf-v6-u-mr-md' variant={ButtonVariant.primary} onClick={handleSave} ouiaId={`${ouiaId}-save-button`}>
          Save
        </Button>,
        <Button key="cancel" variant={ButtonVariant.link} onClick={handleCancel} ouiaId={`${ouiaId}-cancel-button`}>
          Cancel
        </Button>
      ]}
      ouiaId={ouiaId}
      {...props}
    >
      <DataList aria-label="Selected columns" isCompact data-ouia-component-id={`${ouiaId}-column-list`}>
        {currentColumns.map((column, index) =>
          <DataListItem key={column.key}>
            <DataListItemRow>
              <DataListCheck
                isChecked={column.isShown}
                onChange={() => handleChange(index)}
                isDisabled={column.isUntoggleable}
                aria-labelledby={`${ouiaId}-column${index}-label`}
                ouiaId={`${ouiaId}-column${index}-checkbox`}
                id={`${ouiaId}-column${index}-checkbox`}
              />
              <DataListItemCells
                dataListCells={[
                  <DataListCell key={column.key} data-ouia-component-id={`${ouiaId}-column${index}-label`}>
                    <label htmlFor={`${ouiaId}-column${index}-checkbox`} id={`${ouiaId}-column${index}-label`}>
                      {column.title}
                    </label>
                  </DataListCell>
                ]}
              />
            </DataListItemRow>
          </DataListItem>
        )}
      </DataList>
    </Modal>
  );
}

export default ColumnManagementModal;



================================================
FILE: packages/module/src/ColumnManagementModal/index.ts
================================================
export { default } from './ColumnManagementModal';
export * from './ColumnManagementModal';



================================================
FILE: packages/module/src/ContentHeader/ContentHeader.tsx
================================================
import React from 'react';
import {
  Flex,
  FlexItem,
  Split,
  SplitItem,
  Content,
  PageSection,
  Button,
  ButtonVariant,
  ButtonProps,
  Divider,
} from '@patternfly/react-core';
import { ExternalLinkAltIcon } from '@patternfly/react-icons';
import { createUseStyles } from 'react-jss';

/** extends ButtonProps */
export interface PageHeaderLinkProps extends ButtonProps {
  /** Title for the link */
  label: string;
  /** Indicates if the link points to an external page */
  isExternal?: boolean;
}

export interface ContentHeaderProps {
  /** Title for content header */
  title: React.ReactNode;
  /** Optional subtitle for content header */
  subtitle?: React.ReactNode;
  /** Optional link below subtitle */
  linkProps?: PageHeaderLinkProps;
  /** Optional icon for content header (appears to the left of the content header's title with a divider) */
  icon?: React.ReactNode;
  /** Optional label for content header (appears to the right of the content header's title) */
  label?: React.ReactNode;
  /** Breadcrumbs component */
  breadcrumbs?: React.ReactNode;
  /** Menu that appears to the far right of the title */
  actionMenu?: React.ReactNode;
  /** Custom OUIA ID */
  ouiaId?: string | number;
}

const useStyles = createUseStyles({
  iconMinWidth: {
    minWidth: '48px',
  }
});

export const ContentHeader: React.FunctionComponent<React.PropsWithChildren<ContentHeaderProps>> = ({
  title,
  subtitle = null,
  linkProps,
  icon,
  label,
  breadcrumbs = null,
  actionMenu,
  ouiaId = 'ContentHeader',
}: ContentHeaderProps) => {
  const classes = useStyles();
  const { isExternal = false, ...linkRestProps } = linkProps ?? {};

  return (
    <PageSection hasBodyWrapper={false}>
      { breadcrumbs && (
        <div className="pf-v6-u-mb-md">
          {breadcrumbs}
        </div>
      )}
      <Flex>
        {icon && (
          <>
            <FlexItem alignSelf={{ default: 'alignSelfCenter' }} className={`${classes.iconMinWidth}`}>
              {icon}
            </FlexItem>
            <Divider orientation={{
              default: 'vertical',
            }} />
          </>
        )}
        <FlexItem flex={{ default: 'flex_1' }}>
          <Split hasGutter>
            <SplitItem>
              {typeof title === 'string' ? (
                <Content className="pf-v6-u-mb-sm" component="h1" ouiaId={`${ouiaId}-title`}>
                  {title}
                </Content>
              ) : title}
            </SplitItem>
            {label && (
              <SplitItem>
                {label}
              </SplitItem>
            )}
            <SplitItem isFilled />
            {actionMenu && (
              <SplitItem>
                {actionMenu}
              </SplitItem>
            )}
          </Split>
          {typeof subtitle === 'string' ? (
            <Content component="p" ouiaId={`${ouiaId}-subtitle`}>
              {subtitle}
            </Content>
          ) : subtitle}
          {linkProps && (
            <Button variant={ButtonVariant.link} component="a" ouiaId={`${ouiaId}-link-button`} isInline icon={isExternal ? <ExternalLinkAltIcon className='pf-v6-u-ml-sm' /> : null} iconPosition="end" {...linkRestProps}>
              {linkProps.label}
            </Button>
          )}
        </FlexItem>
      </Flex>
    </PageSection>
  );
};

export default ContentHeader;



================================================
FILE: packages/module/src/ErrorBoundary/ErrorBoundary.test.tsx
================================================
import * as React from 'react';
import ErrorBoundary from './ErrorBoundary';
import { render, screen } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import '@testing-library/jest-dom'

describe('ErrorBoundary component', () => {
  const Surprise = () => {
    throw new Error('but a welcome one');
  };

  // The error boundary is noisy, silence for this test
  let mockConsole: jest.SpyInstance;
  beforeEach(() => {
    mockConsole = jest.spyOn(console, 'error');
    mockConsole.mockImplementation(() => '');
  });

  afterEach(() => {
    mockConsole.mockRestore();
  });

  it('should render content when there is no error', () => {
    render(
      <ErrorBoundary headerTitle={'My app'}>
        <div>hello world</div>
      </ErrorBoundary>
    );

    expect(screen.getByText('hello world')).toBeVisible();
  });

  it('should render error if there is any error', () => {
    render(
      <ErrorBoundary headerTitle="My app" errorTitle="Something wrong happened">
        <Surprise />
      </ErrorBoundary>
    );

    expect(screen.getByText(/Something wrong happened/i)).toBeVisible();
  });

  it('should have details hidden', () => {
    render(
      <ErrorBoundary headerTitle="My app" errorTitle="Something wrong happened">
        <Surprise />
      </ErrorBoundary>
    );

    expect(screen.getByText(/but a welcome one/i)).not.toBeVisible();
  });

  it('should show details when clicking the show details button', () => {
    render(
      <ErrorBoundary headerTitle="My app" errorTitle="Something wrong happened">
        <Surprise />
      </ErrorBoundary>
    );

    userEvent.click(screen.getByText(/show details/i));
    expect(screen.getByText(/but a welcome one/i)).toBeInTheDocument();
  });

  it('should show content again after changing url', () => {
    let fail = true;
    const FailConditionally = () => {
      if (fail) {
        throw new Error('failing');
      } else {
        return <div>hello world</div>;
      }
    };

    const { rerender } = render(
      <ErrorBoundary headerTitle="My app" errorTitle="Something wrong happened">
        <FailConditionally />
      </ErrorBoundary>
    );

    expect(screen.getByText(/Something wrong happened/i)).toBeVisible();

    // a re-render does not get out of the error state
    rerender(
      <ErrorBoundary headerTitle="My app" errorTitle="Something wrong happened">
        <FailConditionally />
      </ErrorBoundary>
    );

    expect(screen.getByText(/Something wrong happened/i)).toBeVisible();

    fail = false;
    // Simulates a state change in the history
    history.pushState({ data: 2 }, 'unused');
    rerender(
      <ErrorBoundary headerTitle="My app" errorTitle="Something wrong happened">
        <FailConditionally />
      </ErrorBoundary>
    );
    expect(screen.getByText('hello world')).toBeVisible();
  });
});



================================================
FILE: packages/module/src/ErrorBoundary/ErrorBoundary.tsx
================================================
import * as React from 'react';
import { ExpandableSection, Title } from '@patternfly/react-core';
import { createUseStyles } from 'react-jss';
import ErrorState from '../ErrorState';
import ErrorStack from '../ErrorStack';

const useStyles = createUseStyles({
  expandableSectionToggle: {
    "& > .pf-v6-c-expandable-section__toggle": {
      margin: "auto",
    }
  },
})

export interface ErrorBoundaryProps {
  /** The title text to display on the error page */
  headerTitle?: React.ReactNode;
  /** Indicates if the error is silent */
  silent?: boolean;
  /** The title text to display with the error */
  errorTitle?: React.ReactNode;
  /** The description text to display with the error */
  errorDescription?: React.ReactNode;
  /** The default description text to display with the error if no errorDescription is provided */
  defaultErrorDescription?: React.ReactNode;
  /** The text for the toggle link that users can select to view error details */
  errorToggleText?: string;
  /** The component that the error boundary component is wrapped around, which should be returned if there is no error  */
  children?: React.ReactNode;
  /** Custom OUIA ID */
  ouiaId?: string | number;
  /** The heading level to use on the header title, default is h1 */
  headerTitleHeadingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
  /** The heading level to use on the error title, default is h2 */
  errorTitleHeadingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
}

export interface ErrorBoundaryState {
  /** Indicates if there is currently an error */
  hasError: boolean;
  /** Error */
  error?: Error;
  /** Used for browser session history */
  historyState: History['state'];
}

interface ErrorPageProps extends ErrorBoundaryProps {
  /** JSS classes */
  classes: Record<string | number | symbol, string>;
}

export const ErrorBoundary: React.FunctionComponent<ErrorBoundaryProps> = ({
  headerTitleHeadingLevel = "h1",
  errorTitleHeadingLevel = "h2",
  ...props
}: ErrorBoundaryProps) => {
  const classes = useStyles();
  return (
    <ErrorBoundaryContent 
      classes={classes} 
      headerTitleHeadingLevel={headerTitleHeadingLevel} 
      errorTitleHeadingLevel={errorTitleHeadingLevel}
      {...props} 
    />
  );
}

// As of time of writing, React only supports error boundaries in class components
class ErrorBoundaryContent extends React.Component<ErrorPageProps, ErrorBoundaryState> {
  constructor(props: Readonly<ErrorPageProps>) {
    super(props);
    this.state = {
      hasError: false,
      historyState: history.state,
    };
  }

  static getDerivedStateFromError(error: Error): ErrorBoundaryState {
    return { hasError: true, error, historyState: history.state };
  }

  updateState = () => {
    if (this.state.historyState !== history.state) {
      this.setState({
        hasError: false,
        historyState: history.state,
      });
    }
  };

  componentDidUpdate(): void {
    this.updateState();
  }

  componentDidMount(): void {
    this.updateState();
  }

  render() {
    const { ouiaId = 'ErrorBoundary', errorTitleHeadingLevel, headerTitleHeadingLevel, ...props } = this.props;
    
    if (this.state.hasError) {
      if (this.props.silent) {
        return null;
      }

      return (
        <div data-ouia-component-id={ouiaId}>
          {props?.headerTitle && <Title headingLevel={headerTitleHeadingLevel || 'h1'} size="2xl" ouiaId={`${ouiaId}-title`}>{props.headerTitle}</Title>}
          <ErrorState
            titleText={props.errorTitle}
            headingLevel={errorTitleHeadingLevel}
            bodyText={
              <>
                <span>{props.errorDescription}</span>
                {this.state.error && ( 
                  <ExpandableSection className={props.classes.expandableSectionToggle} toggleText={props.errorToggleText ? props.errorToggleText : "Show details"} data-ouia-component-id={`${ouiaId}-toggle`}>
                    <ErrorStack error={this.state.error} data-ouia-component-id={`${ouiaId}-stack`}/>
                  </ExpandableSection>
                )}
              </>
            }
            defaultBodyText={props.defaultErrorDescription}
          />
        </div>
      );
    }

    return props.children;
  }
};

export default ErrorBoundary;



================================================
FILE: packages/module/src/ErrorBoundary/index.ts
================================================
export { default } from './ErrorBoundary';
export * from './ErrorBoundary';



================================================
FILE: packages/module/src/ErrorStack/ErrorStack.tsx
================================================
import * as React from 'react';
import clsx from 'clsx';
import { Content } from '@patternfly/react-core';
import { createUseStyles } from 'react-jss';

export interface ErrorStackProps {
  /** Error object to be displayed in the stack */
  error: Error;
  /** Custom className */
  className?: string;
}

const useStyles = createUseStyles({
  errorStack: {
    fontFamily: 'monospace',
    fontSize: 'var(--pf-t--global--font--size--300)',
    textAlign: 'left',
    backgroundColor: 'white',
    borderStyle: 'solid',
    borderColor: 'var(--pf-t--color--gray--90)',
    overflowWrap: 'break-word',
    padding: 'var(--pf-t--global--spacer--200)'
  },
})

export const ErrorStack: React.FunctionComponent<ErrorStackProps> = ({ error, className, ...props }) => {
  const classes = useStyles();

  if (error.stack) {
    return (
      <Content className={clsx(classes.errorStack, className)} {...props} >
        {error.stack.split('\n').map((line) => (
          <div key={line}>{line}</div>
        ))}
      </Content>
    );
  }

  if (error.name && error.message) {
    return (
      <>
        <Content component="h6">{error.name}</Content>
        <Content className={clsx(classes.errorStack, className)} component="blockquote" {...props}>
          {error.message}
        </Content>
      </>
    );
  }

  return (
    <Content className={classes.errorStack} component="blockquote">
      {error.toString()}
    </Content>
  );
};

export default ErrorStack;



================================================
FILE: packages/module/src/ErrorStack/index.ts
================================================
export { default } from './ErrorStack';
export * from './ErrorStack';



================================================
FILE: packages/module/src/ErrorState/ErrorState.test.tsx
================================================
import * as React from 'react';
import ErrorState from './ErrorState';
import { render, screen } from '@testing-library/react';
import { Button } from '@patternfly/react-core';

describe('ErrorState component', () => {

  it('should render correctly', () => {
    render(<ErrorState titleText='A Basic Error' bodyText='The following is an example of a basic error' customFooter={<Button>Custom button</Button>} />);

    expect(screen.getByText('A Basic Error')).toBeVisible();
    expect(screen.getByText('The following is an example of a basic error')).toBeVisible();
    expect(screen.getByText('Custom button')).toBeVisible();
  });

  it('should render correctly with default props', () => {
    render(<ErrorState />);

    expect(screen.getByText('Something went wrong')).toBeVisible();
    expect(screen.getByText('Go to home page')).toBeVisible();
  });

  it('should spread empty state props', () => {
    render(<ErrorState headingLevel="h2" variant="xs" data-testid="test"/>);

    expect(screen.getByRole('heading', { level: 2 })).toBeInTheDocument();
    expect(screen.getByTestId('test')).toHaveClass('pf-m-xs');
  });

});



================================================
FILE: packages/module/src/ErrorState/ErrorState.tsx
================================================
import {
  Button,
  EmptyState,
  EmptyStateBody,
  EmptyStateFooter,
  EmptyStateProps,
  EmptyStateStatus,
  EmptyStateVariant,
  Stack,
  StackItem, 
} from '@patternfly/react-core';
import { createUseStyles } from 'react-jss'
import React from 'react';

const useStyles = createUseStyles({
  errorDescription: {
    margin: 'auto'
  }
})

/** extends EmptyStateProps */
export interface ErrorStateProps extends Omit<EmptyStateProps, 'children' | 'titleText' | 'status'> {
  /** Title of the error. */
  titleText?: React.ReactNode;
  /** A description of the error, if no body text is provided then it will be set to the defaultBodyText. */
  bodyText?: React.ReactNode;
  /** A default description of the error used if no errorDescription is provided. */
  defaultBodyText?: React.ReactNode;
  /** Custom footer content */
  customFooter?: React.ReactNode;
  /** ErrorState OUIA ID */
  ouiaId?: string | number;
  /** Status of the error message. */
  status?: 'danger' | 'warning' | 'success' | 'info' | 'custom' | 'none';
}

const ErrorState: React.FunctionComponent<ErrorStateProps> = ({ 
  titleText = 'Something went wrong', 
  bodyText, 
  defaultBodyText, 
  customFooter, 
  ouiaId = "ErrorState", 
  headingLevel = "h4",
  status = EmptyStateStatus.danger,
  variant = EmptyStateVariant.lg,
  ...props 
}: ErrorStateProps) => { 
  const classes = useStyles();
  return (
    <EmptyState 
      headingLevel={headingLevel} 
      {...(status !== 'none' && { status } )}
      variant={variant} 
      titleText={titleText} 
      data-ouia-component-id={ouiaId} 
      {...props}
    >
      <EmptyStateBody data-ouia-component-id={`${ouiaId}-body`}>
        <Stack>
          {bodyText ? <StackItem className={classes.errorDescription}>{bodyText}</StackItem> : defaultBodyText}
        </Stack>
      </EmptyStateBody>
      <EmptyStateFooter data-ouia-component-id={`${ouiaId}-footer`}>
        { customFooter ||
          (document.referrer ? (
            <Button variant="primary" onClick={() => history.back()} ouiaId={`${ouiaId}-back-button`}>
              Return to last page
            </Button>
          ) : (
            <Button variant="primary" component="a" href="." target="_blank" rel="noopener noreferrer" ouiaId={`${ouiaId}-home-button`}>
              Go to home page
            </Button>
          ))}
      </EmptyStateFooter>
    </EmptyState>
  );
}

export default ErrorState;



================================================
FILE: packages/module/src/ErrorState/index.ts
================================================
export { default } from './ErrorState';
export * from './ErrorState';



================================================
FILE: packages/module/src/LogSnippet/index.ts
================================================
export { default } from './LogSnippet';
export * from './LogSnippet';


================================================
FILE: packages/module/src/LogSnippet/LogSnippet.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import LogSnippet from './LogSnippet';

describe('LogSnippet component', () => {
  it('should render LogSnippet component', () => {
    expect(render(<LogSnippet message='A log snippet' logSnippet='console.log(hello world)'/>)).toMatchSnapshot();
  });
});


================================================
FILE: packages/module/src/LogSnippet/LogSnippet.tsx
================================================
import * as React from 'react';
import { Alert, AlertVariant, CodeBlock, CodeBlockCode, Flex, FlexItem, FlexProps } from '@patternfly/react-core';

/** extends FlexProps */
export interface LogSnippetProps extends FlexProps {
  /** Log snippet or code to be displayed */
  logSnippet?: React.ReactNode;
  /** Message to appear above the log snippet */
  message: string | React.ReactNode;
  /** Log snippet alert variant */
  variant?: AlertVariant;
  /** Custom OUIA ID */
  ouiaId?: string | number;
}

export const LogSnippet: React.FunctionComponent<LogSnippetProps> = ({ logSnippet, message, variant = AlertVariant.danger, ouiaId = "LogSnippet", ...props }: LogSnippetProps) => (
  <Flex direction={{ default: 'column' }} data-ouia-component-id={ouiaId} {...props}>
    <FlexItem>
      { typeof message === 'string' ? <Alert isInline isPlain title={message} variant={variant} data-ouia-component-id={`${ouiaId}-message`} /> : message }
    </FlexItem>
    { logSnippet && <FlexItem>
      <CodeBlock data-ouia-component-id={`${ouiaId}-code-block`}>
        <CodeBlockCode data-ouia-component-id={`${ouiaId}-code-content`}>{logSnippet}</CodeBlockCode>
      </CodeBlock> 
    </FlexItem> }
  </Flex>
);

export default LogSnippet;



================================================
FILE: packages/module/src/LogSnippet/__snapshots__/LogSnippet.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LogSnippet component should render LogSnippet component 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="pf-v6-l-flex pf-m-column"
        data-ouia-component-id="LogSnippet"
      >
        <div
          class=""
        >
          <div
            class="pf-v6-c-alert pf-m-inline pf-m-plain pf-m-danger"
            data-ouia-component-id="LogSnippet-message"
            data-ouia-component-type="PF6/Alert"
            data-ouia-safe="true"
          >
            <div
              class="pf-v6-c-alert__icon"
            >
              <svg
                aria-hidden="true"
                class="pf-v6-svg"
                fill="currentColor"
                height="1em"
                role="img"
                viewBox="0 0 512 512"
                width="1em"
              >
                <path
                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                />
              </svg>
            </div>
            <h4
              class="pf-v6-c-alert__title"
            >
              <span
                class="pf-v6-screen-reader"
              >
                Danger alert:
              </span>
              A log snippet
            </h4>
          </div>
        </div>
        <div
          class=""
        >
          <div
            class="pf-v6-c-code-block"
            data-ouia-component-id="LogSnippet-code-block"
          >
            <div
              class="pf-v6-c-code-block__content"
            >
              <pre
                class="pf-v6-c-code-block__pre"
                data-ouia-component-id="LogSnippet-code-content"
              >
                <code
                  class="pf-v6-c-code-block__code"
                >
                  console.log(hello world)
                </code>
              </pre>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="pf-v6-l-flex pf-m-column"
      data-ouia-component-id="LogSnippet"
    >
      <div
        class=""
      >
        <div
          class="pf-v6-c-alert pf-m-inline pf-m-plain pf-m-danger"
          data-ouia-component-id="LogSnippet-message"
          data-ouia-component-type="PF6/Alert"
          data-ouia-safe="true"
        >
          <div
            class="pf-v6-c-alert__icon"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 512 512"
              width="1em"
            >
              <path
                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
              />
            </svg>
          </div>
          <h4
            class="pf-v6-c-alert__title"
          >
            <span
              class="pf-v6-screen-reader"
            >
              Danger alert:
            </span>
            A log snippet
          </h4>
        </div>
      </div>
      <div
        class=""
      >
        <div
          class="pf-v6-c-code-block"
          data-ouia-component-id="LogSnippet-code-block"
        >
          <div
            class="pf-v6-c-code-block__content"
          >
            <pre
              class="pf-v6-c-code-block__pre"
              data-ouia-component-id="LogSnippet-code-content"
            >
              <code
                class="pf-v6-c-code-block__code"
              >
                console.log(hello world)
              </code>
            </pre>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/Maintenance/index.ts
================================================
export { default } from './Maintenance';
export * from './Maintenance';


================================================
FILE: packages/module/src/Maintenance/Maintenance.tsx
================================================
import React from 'react';
import { Button, EmptyState, EmptyStateBody, EmptyStateFooter, EmptyStateProps, EmptyStateStatus, EmptyStateVariant } from '@patternfly/react-core';
import { HourglassHalfIcon } from '@patternfly/react-icons';

/** extends EmptyStateProps */
export interface MaintenanceProps extends Omit<EmptyStateProps, 'children' | 'title'> {
    /** The title for the maintenance message */
    titleText?: React.ReactNode;
    /** Custom body text */
    bodyText?: React.ReactNode;
    /** A default bodyText used if no bodyText is provided */
    defaultBodyText?: React.ReactNode;
    /** Start time in a specific time zone */
    startTime?: React.ReactNode;
    /** End time in a specific time zone */
    endTime?: React.ReactNode;
    /** Time zone specification */
    timeZone?: React.ReactNode;
    /** Information link */
    redirectLinkUrl?: string;
    /** Information link title */
    redirectLinkText?: React.ReactNode;
    /** Custom footer content */
    customFooter?: React.ReactNode;
    /** Custom OUIA ID */
    ouiaId?: string | number;  }

const Maintenance: React.FunctionComponent<MaintenanceProps> = ({ 
  titleText = 'Maintenance in progress',
  defaultBodyText = 'We are currently undergoing scheduled maintenance. Thank you for understanding.',
  startTime,
  endTime,
  timeZone = 'UTC',
  bodyText,
  redirectLinkUrl = 'https://status.redhat.com',
  redirectLinkText = 'status.redhat.com.',
  customFooter = 'For more information please visit',
  ouiaId = 'Maintenance',
  headingLevel = 'h5',
  ...props 
}: MaintenanceProps) => {
  let formattedBodyText = bodyText;
  if (startTime && endTime && timeZone) {
    formattedBodyText += ` ${startTime} to ${endTime} ${timeZone}.`;
  }

  return (
    <EmptyState headingLevel={headingLevel} status={EmptyStateStatus.danger} icon={HourglassHalfIcon}  titleText={titleText} variant={EmptyStateVariant.lg} data-ouia-component-id={ouiaId} {...props}>
      <EmptyStateBody data-ouia-component-id={`${ouiaId}-body`}>
        {bodyText ? formattedBodyText : defaultBodyText}
      </EmptyStateBody>
      <EmptyStateFooter data-ouia-component-id={`${ouiaId}-footer`}>
        {customFooter && (
          <span>
            {customFooter}{' '}
            <Button 
              variant="link" 
              component="span" 
              isInline 
              href={redirectLinkUrl} 
              target="_blank" 
              ouiaId={`${ouiaId}-link`}
            >
              {redirectLinkText}
            </Button>
          </span>
        )}
      </EmptyStateFooter>
    </EmptyState>
  )};

export default Maintenance;





================================================
FILE: packages/module/src/MissingPage/index.ts
================================================
export { default } from './MissingPage';
export * from './MissingPage';


================================================
FILE: packages/module/src/MissingPage/MissingPage.test.tsx
================================================
import MissingPage from './MissingPage';
import React from 'react';
import { render } from '@testing-library/react';

describe('MissingPage component', () => {
  test('should render', () => {
    expect(render(<MissingPage />)).toMatchSnapshot();
  });
});


================================================
FILE: packages/module/src/MissingPage/MissingPage.tsx
================================================
import React from 'react';
import { Button, EmptyState, EmptyStateBody, EmptyStateFooter, EmptyStateProps, EmptyStateVariant } from '@patternfly/react-core';
import NotFoundIcon from '../NotFoundIcon';

/** extends EmptyStateProps */
export interface MissingPageProps extends Omit<EmptyStateProps, 'children' | 'title' | 'titleText'> {
  /** The URL that the home page link points to */
  toHomePageUrl?: string;
  /** The text label for the link that points back to the home page */
  toHomePageText?: React.ReactNode;
  /** The title for the invalid object message */
  titleText?: React.ReactNode;
  /** The body text for the invalid object message */
  bodyText?: React.ReactNode;
  /** Custom OUIA ID */
  ouiaId?: string | number;
}

export const MissingPage: React.FunctionComponent<MissingPageProps> = ({
  toHomePageUrl = window.location.origin,
  toHomePageText = 'Return to homepage',
  titleText = 'We lost that page',
  bodyText = "Let's find you a new one. Try a new search or return home.",
  ouiaId = "MissingPage",
  headingLevel = 'h1',
  ...props
}: MissingPageProps) => (
  <EmptyState headingLevel={headingLevel} icon={NotFoundIcon} variant={EmptyStateVariant.full} data-ouia-component-id={ouiaId} {...props} titleText={titleText}>
    <EmptyStateBody data-ouia-component-id={`${ouiaId}-body`}>{bodyText}</EmptyStateBody>
    <EmptyStateFooter data-ouia-component-id={`${ouiaId}-footer`}>
      <Button variant="link" component="a" href={toHomePageUrl} ouiaId={`${ouiaId}-home-button`}>
        {toHomePageText}
      </Button>
    </EmptyStateFooter>
  </EmptyState>
);

export default MissingPage;



================================================
FILE: packages/module/src/MissingPage/__snapshots__/MissingPage.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MissingPage component should render 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="pf-v6-c-empty-state"
        data-ouia-component-id="MissingPage"
      >
        <div
          class="pf-v6-c-empty-state__content"
        >
          <div
            class="pf-v6-c-empty-state__header"
          >
            <div
              class="pf-v6-c-empty-state__icon"
            >
              <svg
                aria-hidden="true"
                class="pf-v6-svg notFoundIcon-0-2-1"
                fill="currentColor"
                height="1em"
                role="img"
                viewBox="0 0 131 131"
                width="1em"
              >
                <path
                  d="M8,95.56a1.83,1.83,0,0,0-2,1.68c-.21,1.86-.23,3.05-.23,3.1a1.88,1.88,0,0,0,1.79,2h0a1.89,1.89,0,0,0,1.82-1.91s0-1,.2-2.67A1.91,1.91,0,0,0,8,95.56  M104.29,104.42a26.42,26.42,0,0,1-4.72,1.89,1.89,1.89,0,0,0-1.25,2.32,1.82,1.82,0,0,0,1.74,1.36,1.73,1.73,0,0,0,.5-.07,29.3,29.3,0,0,0,5.36-2.16,1.89,1.89,0,0,0,.8-2.52,1.78,1.78,0,0,0-2.43-.82  M74.84,57.4A1.88,1.88,0,0,0,76.2,58a1.9,1.9,0,0,0,1.21-.44,1.68,1.68,0,0,0,.15-2.45,19.81,19.81,0,0,1-2.85-3.9,1.88,1.88,0,0,0-2.47-.71,1.7,1.7,0,0,0-.75,2.34,23.82,23.82,0,0,0,3.35,4.58  M75.44,105.24a1.76,1.76,0,0,0-2.17,1.29,1.84,1.84,0,0,0,1.23,2.26A45.56,45.56,0,0,0,79.84,110a1.23,1.23,0,0,0,.27,0,1.78,1.78,0,0,0,1.74-1.56,1.82,1.82,0,0,0-1.47-2.1,40.81,40.81,0,0,1-4.94-1.09  M92.56,107.11a49.67,49.67,0,0,1-5,0h-.07a1.8,1.8,0,0,0-1.73,1.82,1.82,1.82,0,0,0,1.67,2c1,0,2,.07,3.07.07.78,0,1.54,0,2.29-.08a1.83,1.83,0,0,0,1.63-2,1.77,1.77,0,0,0-1.83-1.77  M65.38,100.76a1.62,1.62,0,0,0-2.41.32,2,2,0,0,0,.3,2.62,28.62,28.62,0,0,0,4.55,3.19,1.6,1.6,0,0,0,.78.21,1.69,1.69,0,0,0,1.52-1,2,2,0,0,0-.73-2.52,26,26,0,0,1-4-2.81  M109.71,70.18a2,2,0,0,0,1.1.32,2,2,0,0,0,1.53-.69,1.57,1.57,0,0,0-.42-2.35,26.14,26.14,0,0,0-5.3-2.61,2,2,0,0,0-2.45.91,1.63,1.63,0,0,0,1,2.19,23.39,23.39,0,0,1,4.51,2.23  M70.28,38.72a1.74,1.74,0,0,0-1.85,1.63c0,.46,0,.93,0,1.39A23,23,0,0,0,68.78,46a1.74,1.74,0,1,0,3.43-.63,18.84,18.84,0,0,1-.32-3.58c0-.39,0-.79,0-1.18a1.73,1.73,0,0,0-1.64-1.84  M76.35,27.53a2.08,2.08,0,0,0-2.68.25,20.42,20.42,0,0,0-3.2,4.71,1.64,1.64,0,0,0,1,2.23,2,2,0,0,0,.75.14,1.93,1.93,0,0,0,1.75-1,16.54,16.54,0,0,1,2.67-3.93,1.57,1.57,0,0,0-.29-2.38  M98.18,66.63l.26,0a1.74,1.74,0,0,0,.24-3.47,40.77,40.77,0,0,0-5.42-.39h0a1.74,1.74,0,0,0,0,3.48,37,37,0,0,1,4.94.36  M79.88,26.19a1.92,1.92,0,0,0,1-.26,25.06,25.06,0,0,1,4.62-2.13,1.71,1.71,0,0,0,1.09-2.24,1.87,1.87,0,0,0-2.37-1A30.71,30.71,0,0,0,78.89,23a1.7,1.7,0,0,0-.59,2.41,1.9,1.9,0,0,0,1.58.82  M86.28,65.61a1.79,1.79,0,0,0,.51.07,1.84,1.84,0,0,0,1.76-1.32,1.83,1.83,0,0,0-1.26-2.26,21.06,21.06,0,0,1-4.6-2,1.83,1.83,0,1,0-1.82,3.17,24.64,24.64,0,0,0,5.41,2.29  M47.85,80.53A1.7,1.7,0,0,0,47.61,83a41.72,41.72,0,0,1,3,4.06,1.84,1.84,0,0,0,2.49.52,1.71,1.71,0,0,0,.55-2.4,44.19,44.19,0,0,0-3.27-4.4,1.85,1.85,0,0,0-2.54-.23  M12.51,84.2A1.84,1.84,0,0,0,10,85a33.19,33.19,0,0,0-2.24,5.32A1.83,1.83,0,0,0,9,92.57a1.77,1.77,0,0,0,.56.08,1.83,1.83,0,0,0,1.74-1.26,29.21,29.21,0,0,1,2-4.72,1.81,1.81,0,0,0-.76-2.47  M54.77,91a1.7,1.7,0,0,0-.54,2.4,50.54,50.54,0,0,0,3.24,4.38,1.85,1.85,0,0,0,1.41.64A1.81,1.81,0,0,0,60,98.05a1.69,1.69,0,0,0,.27-2.45,47.21,47.21,0,0,1-3-4.08A1.84,1.84,0,0,0,54.77,91  M112.48,97.29a22.47,22.47,0,0,1-3.09,3.78,1.89,1.89,0,0,0-.09,2.56,1.64,1.64,0,0,0,1.25.58,1.67,1.67,0,0,0,1.16-.48,25.42,25.42,0,0,0,3.57-4.38,1.87,1.87,0,0,0-.43-2.52,1.64,1.64,0,0,0-2.37.46  M118.61,84a1.84,1.84,0,0,0-2,1.65,18.6,18.6,0,0,1-.93,4.74,1.74,1.74,0,0,0,1.26,2.2,2.15,2.15,0,0,0,.56.07,1.88,1.88,0,0,0,1.82-1.24,21.56,21.56,0,0,0,1.09-5.57A1.81,1.81,0,0,0,118.61,84  M117.66,81.1a1.88,1.88,0,0,0,.52-.08,1.85,1.85,0,0,0,1.18-2.3,21.55,21.55,0,0,0-2.43-5.45,1.73,1.73,0,0,0-2.46-.54,1.88,1.88,0,0,0-.52,2.55,17.79,17.79,0,0,1,2,4.51,1.8,1.8,0,0,0,1.7,1.31  M39,73.46a1.84,1.84,0,0,0-2.27,1.24A1.81,1.81,0,0,0,37.93,77a18,18,0,0,1,4.54,2,1.89,1.89,0,0,0,1,.27A1.85,1.85,0,0,0,45,78.3a1.8,1.8,0,0,0-.61-2.5A22.68,22.68,0,0,0,39,73.46  M18.61,75.53A20.68,20.68,0,0,0,14,79a1.81,1.81,0,0,0,0,2.53,1.7,1.7,0,0,0,1.26.55,1.72,1.72,0,0,0,1.22-.51,17,17,0,0,1,3.81-2.86A1.82,1.82,0,0,0,21,76.26a1.73,1.73,0,0,0-2.37-.73  M26.51,72.76a1.77,1.77,0,0,0,.27,3.52l.28,0A26,26,0,0,1,31.92,76a1.84,1.84,0,0,0,1.79-1.72A1.76,1.76,0,0,0,32,72.44a30.51,30.51,0,0,0-5.51.32  M92.47,22.34l.27,0q1.33-.16,2.76-.27a1.83,1.83,0,0,0,1.78-1.92,1.87,1.87,0,0,0-2.07-1.64c-1,.07-2,.17-3,.29a1.83,1.83,0,0,0-1.65,2,1.89,1.89,0,0,0,1.91,1.54  M133,66.72H118.94V44.44h9.27a.89.89,0,1,0,0-1.78h-9.27V36.71a.9.9,0,0,0-1.8,0v5.95H94.41V37.38a.9.9,0,0,0-1.79,0v5.28H77a.89.89,0,0,0,0,1.78H92.62v13a.9.9,0,1,0,1.79,0v-13h22.73V67.68a.89.89,0,0,0,.9.89.86.86,0,0,0,.36-.07H133a.89.89,0,1,0,0-1.78  M128.16,92.65h-4.92a1,1,0,0,0,0,1.93h4.92a1,1,0,0,0,0-1.93  M109.87,116.68H93.2v-1.27a.9.9,0,1,0-1.8,0v1.27H69.05v-5.55a.9.9,0,1,0-1.8,0v5.55H44.82V93.89h4.27a.9.9,0,0,0,0-1.8H44.82V83.92a.9.9,0,1,0-1.79,0v8.17H20.3V84.37a.9.9,0,1,0-1.8,0v7.72H13.42a.9.9,0,1,0,0,1.8H18.5v17.39a.9.9,0,0,0,1.8,0V93.89H43v22.79H26.28a.9.9,0,1,0,0,1.8H43v9.9a.9.9,0,1,0,1.79,0v-9.9H67.25v14.69a.9.9,0,1,0,1.8,0V118.48H91.4v10.2a.9.9,0,1,0,1.8,0v-10.2h16.67a.9.9,0,0,0,0-1.8 M20.55,67.5H43.31V45H20.55Zm-1.79,3a.9.9,0,1,0,1.79,0V69.3H43.31v2.1a.9.9,0,0,0,1.8,0V69.3H67.56V92.38H63.3a.9.9,0,1,0,0,1.79h4.26v3.3a.9.9,0,1,0,1.8,0v-3.3h23v9.14a.9.9,0,0,0,1.8,0V94.17H111.8a.9.9,0,1,0,0-1.79H94.21V71a.9.9,0,0,0-1.8,0V92.38h-23V69.3h12.8a.9.9,0,0,0,0-1.8H69.36v-10a.9.9,0,0,0-1.8,0v10H45.11V45h18a.9.9,0,1,0,0-1.8h-18V20.46H67.56V26a.9.9,0,1,0,1.8,0V20.46h6.06a.9.9,0,1,0,0-1.8H69.36V4a.9.9,0,0,0-1.8,0V18.66H45.11v-10a.9.9,0,1,0-1.8,0v10H26.24a.9.9,0,0,0,0,1.8H43.31V43.23H20.55V26.6a.9.9,0,1,0-1.79,0V43.23H8.88a.9.9,0,0,0,0,1.8h9.88V67.5h-15a.9.9,0,1,0,0,1.8h15Z M117.51,104.21a.94.94,0,0,0-1,.92V111a1,1,0,0,0,1.93,0v-5.87a1,1,0,0,0-1-.92 M106.16,7.75a13.31,13.31,0,0,1,3.35-.41,6.07,6.07,0,0,1,4.09,1.23A4.42,4.42,0,0,1,115,12.09a5.92,5.92,0,0,1-.77,3.12,20.1,20.1,0,0,1-3.72,3.86,11.51,11.51,0,0,0-2.92,3.55,10.22,10.22,0,0,0-.78,4.29v1.21h2.8v-.74a7,7,0,0,1,.71-3.39,13.86,13.86,0,0,1,2.9-3.19,30,30,0,0,0,3.56-3.55,8.29,8.29,0,0,0,1.25-2.34,8.66,8.66,0,0,0,.43-2.87,7.61,7.61,0,0,0-2.3-5.91A9.3,9.3,0,0,0,109.72,4a17.8,17.8,0,0,0-8.58,2.21l1.28,3a17.6,17.6,0,0,1,3.74-1.51 M108.35,31c-1.59,0-2.39,1-2.39,2.9a3,3,0,0,0,.67,2.2,2.36,2.36,0,0,0,1.72.68,2.21,2.21,0,0,0,1.78-.76,3.16,3.16,0,0,0,.64-2.12,3.27,3.27,0,0,0-.63-2.16,2.22,2.22,0,0,0-1.79-.74"
                />
              </svg>
            </div>
            <div
              class="pf-v6-c-empty-state__title"
            >
              <h1
                class="pf-v6-c-empty-state__title-text"
              >
                We lost that page
              </h1>
            </div>
          </div>
          <div
            class="pf-v6-c-empty-state__body"
            data-ouia-component-id="MissingPage-body"
          >
            Let's find you a new one. Try a new search or return home.
          </div>
          <div
            class="pf-v6-c-empty-state__footer"
            data-ouia-component-id="MissingPage-footer"
          >
            <a
              aria-disabled="false"
              class="pf-v6-c-button pf-m-link"
              data-ouia-component-id="MissingPage-home-button"
              data-ouia-component-type="PF6/Button"
              data-ouia-safe="true"
              href="http://localhost:5000"
            >
              <span
                class="pf-v6-c-button__text"
              >
                Return to homepage
              </span>
            </a>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="pf-v6-c-empty-state"
      data-ouia-component-id="MissingPage"
    >
      <div
        class="pf-v6-c-empty-state__content"
      >
        <div
          class="pf-v6-c-empty-state__header"
        >
          <div
            class="pf-v6-c-empty-state__icon"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg notFoundIcon-0-2-1"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 131 131"
              width="1em"
            >
              <path
                d="M8,95.56a1.83,1.83,0,0,0-2,1.68c-.21,1.86-.23,3.05-.23,3.1a1.88,1.88,0,0,0,1.79,2h0a1.89,1.89,0,0,0,1.82-1.91s0-1,.2-2.67A1.91,1.91,0,0,0,8,95.56  M104.29,104.42a26.42,26.42,0,0,1-4.72,1.89,1.89,1.89,0,0,0-1.25,2.32,1.82,1.82,0,0,0,1.74,1.36,1.73,1.73,0,0,0,.5-.07,29.3,29.3,0,0,0,5.36-2.16,1.89,1.89,0,0,0,.8-2.52,1.78,1.78,0,0,0-2.43-.82  M74.84,57.4A1.88,1.88,0,0,0,76.2,58a1.9,1.9,0,0,0,1.21-.44,1.68,1.68,0,0,0,.15-2.45,19.81,19.81,0,0,1-2.85-3.9,1.88,1.88,0,0,0-2.47-.71,1.7,1.7,0,0,0-.75,2.34,23.82,23.82,0,0,0,3.35,4.58  M75.44,105.24a1.76,1.76,0,0,0-2.17,1.29,1.84,1.84,0,0,0,1.23,2.26A45.56,45.56,0,0,0,79.84,110a1.23,1.23,0,0,0,.27,0,1.78,1.78,0,0,0,1.74-1.56,1.82,1.82,0,0,0-1.47-2.1,40.81,40.81,0,0,1-4.94-1.09  M92.56,107.11a49.67,49.67,0,0,1-5,0h-.07a1.8,1.8,0,0,0-1.73,1.82,1.82,1.82,0,0,0,1.67,2c1,0,2,.07,3.07.07.78,0,1.54,0,2.29-.08a1.83,1.83,0,0,0,1.63-2,1.77,1.77,0,0,0-1.83-1.77  M65.38,100.76a1.62,1.62,0,0,0-2.41.32,2,2,0,0,0,.3,2.62,28.62,28.62,0,0,0,4.55,3.19,1.6,1.6,0,0,0,.78.21,1.69,1.69,0,0,0,1.52-1,2,2,0,0,0-.73-2.52,26,26,0,0,1-4-2.81  M109.71,70.18a2,2,0,0,0,1.1.32,2,2,0,0,0,1.53-.69,1.57,1.57,0,0,0-.42-2.35,26.14,26.14,0,0,0-5.3-2.61,2,2,0,0,0-2.45.91,1.63,1.63,0,0,0,1,2.19,23.39,23.39,0,0,1,4.51,2.23  M70.28,38.72a1.74,1.74,0,0,0-1.85,1.63c0,.46,0,.93,0,1.39A23,23,0,0,0,68.78,46a1.74,1.74,0,1,0,3.43-.63,18.84,18.84,0,0,1-.32-3.58c0-.39,0-.79,0-1.18a1.73,1.73,0,0,0-1.64-1.84  M76.35,27.53a2.08,2.08,0,0,0-2.68.25,20.42,20.42,0,0,0-3.2,4.71,1.64,1.64,0,0,0,1,2.23,2,2,0,0,0,.75.14,1.93,1.93,0,0,0,1.75-1,16.54,16.54,0,0,1,2.67-3.93,1.57,1.57,0,0,0-.29-2.38  M98.18,66.63l.26,0a1.74,1.74,0,0,0,.24-3.47,40.77,40.77,0,0,0-5.42-.39h0a1.74,1.74,0,0,0,0,3.48,37,37,0,0,1,4.94.36  M79.88,26.19a1.92,1.92,0,0,0,1-.26,25.06,25.06,0,0,1,4.62-2.13,1.71,1.71,0,0,0,1.09-2.24,1.87,1.87,0,0,0-2.37-1A30.71,30.71,0,0,0,78.89,23a1.7,1.7,0,0,0-.59,2.41,1.9,1.9,0,0,0,1.58.82  M86.28,65.61a1.79,1.79,0,0,0,.51.07,1.84,1.84,0,0,0,1.76-1.32,1.83,1.83,0,0,0-1.26-2.26,21.06,21.06,0,0,1-4.6-2,1.83,1.83,0,1,0-1.82,3.17,24.64,24.64,0,0,0,5.41,2.29  M47.85,80.53A1.7,1.7,0,0,0,47.61,83a41.72,41.72,0,0,1,3,4.06,1.84,1.84,0,0,0,2.49.52,1.71,1.71,0,0,0,.55-2.4,44.19,44.19,0,0,0-3.27-4.4,1.85,1.85,0,0,0-2.54-.23  M12.51,84.2A1.84,1.84,0,0,0,10,85a33.19,33.19,0,0,0-2.24,5.32A1.83,1.83,0,0,0,9,92.57a1.77,1.77,0,0,0,.56.08,1.83,1.83,0,0,0,1.74-1.26,29.21,29.21,0,0,1,2-4.72,1.81,1.81,0,0,0-.76-2.47  M54.77,91a1.7,1.7,0,0,0-.54,2.4,50.54,50.54,0,0,0,3.24,4.38,1.85,1.85,0,0,0,1.41.64A1.81,1.81,0,0,0,60,98.05a1.69,1.69,0,0,0,.27-2.45,47.21,47.21,0,0,1-3-4.08A1.84,1.84,0,0,0,54.77,91  M112.48,97.29a22.47,22.47,0,0,1-3.09,3.78,1.89,1.89,0,0,0-.09,2.56,1.64,1.64,0,0,0,1.25.58,1.67,1.67,0,0,0,1.16-.48,25.42,25.42,0,0,0,3.57-4.38,1.87,1.87,0,0,0-.43-2.52,1.64,1.64,0,0,0-2.37.46  M118.61,84a1.84,1.84,0,0,0-2,1.65,18.6,18.6,0,0,1-.93,4.74,1.74,1.74,0,0,0,1.26,2.2,2.15,2.15,0,0,0,.56.07,1.88,1.88,0,0,0,1.82-1.24,21.56,21.56,0,0,0,1.09-5.57A1.81,1.81,0,0,0,118.61,84  M117.66,81.1a1.88,1.88,0,0,0,.52-.08,1.85,1.85,0,0,0,1.18-2.3,21.55,21.55,0,0,0-2.43-5.45,1.73,1.73,0,0,0-2.46-.54,1.88,1.88,0,0,0-.52,2.55,17.79,17.79,0,0,1,2,4.51,1.8,1.8,0,0,0,1.7,1.31  M39,73.46a1.84,1.84,0,0,0-2.27,1.24A1.81,1.81,0,0,0,37.93,77a18,18,0,0,1,4.54,2,1.89,1.89,0,0,0,1,.27A1.85,1.85,0,0,0,45,78.3a1.8,1.8,0,0,0-.61-2.5A22.68,22.68,0,0,0,39,73.46  M18.61,75.53A20.68,20.68,0,0,0,14,79a1.81,1.81,0,0,0,0,2.53,1.7,1.7,0,0,0,1.26.55,1.72,1.72,0,0,0,1.22-.51,17,17,0,0,1,3.81-2.86A1.82,1.82,0,0,0,21,76.26a1.73,1.73,0,0,0-2.37-.73  M26.51,72.76a1.77,1.77,0,0,0,.27,3.52l.28,0A26,26,0,0,1,31.92,76a1.84,1.84,0,0,0,1.79-1.72A1.76,1.76,0,0,0,32,72.44a30.51,30.51,0,0,0-5.51.32  M92.47,22.34l.27,0q1.33-.16,2.76-.27a1.83,1.83,0,0,0,1.78-1.92,1.87,1.87,0,0,0-2.07-1.64c-1,.07-2,.17-3,.29a1.83,1.83,0,0,0-1.65,2,1.89,1.89,0,0,0,1.91,1.54  M133,66.72H118.94V44.44h9.27a.89.89,0,1,0,0-1.78h-9.27V36.71a.9.9,0,0,0-1.8,0v5.95H94.41V37.38a.9.9,0,0,0-1.79,0v5.28H77a.89.89,0,0,0,0,1.78H92.62v13a.9.9,0,1,0,1.79,0v-13h22.73V67.68a.89.89,0,0,0,.9.89.86.86,0,0,0,.36-.07H133a.89.89,0,1,0,0-1.78  M128.16,92.65h-4.92a1,1,0,0,0,0,1.93h4.92a1,1,0,0,0,0-1.93  M109.87,116.68H93.2v-1.27a.9.9,0,1,0-1.8,0v1.27H69.05v-5.55a.9.9,0,1,0-1.8,0v5.55H44.82V93.89h4.27a.9.9,0,0,0,0-1.8H44.82V83.92a.9.9,0,1,0-1.79,0v8.17H20.3V84.37a.9.9,0,1,0-1.8,0v7.72H13.42a.9.9,0,1,0,0,1.8H18.5v17.39a.9.9,0,0,0,1.8,0V93.89H43v22.79H26.28a.9.9,0,1,0,0,1.8H43v9.9a.9.9,0,1,0,1.79,0v-9.9H67.25v14.69a.9.9,0,1,0,1.8,0V118.48H91.4v10.2a.9.9,0,1,0,1.8,0v-10.2h16.67a.9.9,0,0,0,0-1.8 M20.55,67.5H43.31V45H20.55Zm-1.79,3a.9.9,0,1,0,1.79,0V69.3H43.31v2.1a.9.9,0,0,0,1.8,0V69.3H67.56V92.38H63.3a.9.9,0,1,0,0,1.79h4.26v3.3a.9.9,0,1,0,1.8,0v-3.3h23v9.14a.9.9,0,0,0,1.8,0V94.17H111.8a.9.9,0,1,0,0-1.79H94.21V71a.9.9,0,0,0-1.8,0V92.38h-23V69.3h12.8a.9.9,0,0,0,0-1.8H69.36v-10a.9.9,0,0,0-1.8,0v10H45.11V45h18a.9.9,0,1,0,0-1.8h-18V20.46H67.56V26a.9.9,0,1,0,1.8,0V20.46h6.06a.9.9,0,1,0,0-1.8H69.36V4a.9.9,0,0,0-1.8,0V18.66H45.11v-10a.9.9,0,1,0-1.8,0v10H26.24a.9.9,0,0,0,0,1.8H43.31V43.23H20.55V26.6a.9.9,0,1,0-1.79,0V43.23H8.88a.9.9,0,0,0,0,1.8h9.88V67.5h-15a.9.9,0,1,0,0,1.8h15Z M117.51,104.21a.94.94,0,0,0-1,.92V111a1,1,0,0,0,1.93,0v-5.87a1,1,0,0,0-1-.92 M106.16,7.75a13.31,13.31,0,0,1,3.35-.41,6.07,6.07,0,0,1,4.09,1.23A4.42,4.42,0,0,1,115,12.09a5.92,5.92,0,0,1-.77,3.12,20.1,20.1,0,0,1-3.72,3.86,11.51,11.51,0,0,0-2.92,3.55,10.22,10.22,0,0,0-.78,4.29v1.21h2.8v-.74a7,7,0,0,1,.71-3.39,13.86,13.86,0,0,1,2.9-3.19,30,30,0,0,0,3.56-3.55,8.29,8.29,0,0,0,1.25-2.34,8.66,8.66,0,0,0,.43-2.87,7.61,7.61,0,0,0-2.3-5.91A9.3,9.3,0,0,0,109.72,4a17.8,17.8,0,0,0-8.58,2.21l1.28,3a17.6,17.6,0,0,1,3.74-1.51 M108.35,31c-1.59,0-2.39,1-2.39,2.9a3,3,0,0,0,.67,2.2,2.36,2.36,0,0,0,1.72.68,2.21,2.21,0,0,0,1.78-.76,3.16,3.16,0,0,0,.64-2.12,3.27,3.27,0,0,0-.63-2.16,2.22,2.22,0,0,0-1.79-.74"
              />
            </svg>
          </div>
          <div
            class="pf-v6-c-empty-state__title"
          >
            <h1
              class="pf-v6-c-empty-state__title-text"
            >
              We lost that page
            </h1>
          </div>
        </div>
        <div
          class="pf-v6-c-empty-state__body"
          data-ouia-component-id="MissingPage-body"
        >
          Let's find you a new one. Try a new search or return home.
        </div>
        <div
          class="pf-v6-c-empty-state__footer"
          data-ouia-component-id="MissingPage-footer"
        >
          <a
            aria-disabled="false"
            class="pf-v6-c-button pf-m-link"
            data-ouia-component-id="MissingPage-home-button"
            data-ouia-component-type="PF6/Button"
            data-ouia-safe="true"
            href="http://localhost:5000"
          >
            <span
              class="pf-v6-c-button__text"
            >
              Return to homepage
            </span>
          </a>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/MultiContentCard/index.ts
================================================
export { default } from './MultiContentCard'
export * from './MultiContentCard'



================================================
FILE: packages/module/src/MultiContentCard/MultiContentCard.test.tsx
================================================
import React from 'react';
import { screen, render } from '@testing-library/react';
import { Button, Card, CardHeader, CardBody, Content, ContentVariants, Icon, List, ListItem, CardFooter, Dropdown, MenuToggle, DropdownList, DropdownItem, MenuToggleElement } from '@patternfly/react-core';
import { ArrowRightIcon, BellIcon, CogIcon, EllipsisVIcon, LockIcon } from '@patternfly/react-icons';
import MultiContentCard, { MultiContentCardDividerVariant } from './MultiContentCard';

const cards = [
  <Card isFullHeight isPlain key="card-1">
    <CardHeader>
      <Content component={ContentVariants.h4}>Getting Started</Content>
    </CardHeader>
    <CardBody>
      <Content className="pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover">
        <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
          <CogIcon />
        </Icon>
        Configure application
      </Content>
      <Content className="pf-v6-u-font-size-sm">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
      </Content>
    </CardBody>
    <CardFooter>
      <List className="pf-v6-u-font-size-sm pf-v6-u-link-color pf-v6-u-ml-0">
        <ListItem>
          <Button variant="link" isInline>First link</Button>
        </ListItem>
        <ListItem>
          <Button variant="link" isInline>Second link</Button>
        </ListItem>
        <ListItem>
          <Button variant="link" isInline>Another link</Button>
        </ListItem>
      </List>
    </CardFooter>
  </Card>,
  <Card isFullHeight isPlain key="card-2">
    <CardBody>
      <Content className="pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover">
        <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
          <LockIcon />
        </Icon>
        Configure access
      </Content>
      <Content className="pf-v6-u-font-size-sm">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
      </Content>
    </CardBody>
    <CardFooter>
      <Content>
        <Button icon={<Icon className="pf-v6-u-ml-sm" isInline><ArrowRightIcon /></Icon>} variant="link" isInline>
          Learn more
        </Button>
      </Content>
    </CardFooter>
  </Card>,
  <Card isFullHeight isPlain key="card-3">
    <CardHeader>
      <Content component={ContentVariants.h4}>Next Steps</Content>
    </CardHeader>
    <CardBody>
      <Content className="pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover">
        <Icon size="md" className="pf-v6-u-pl-sm pf-v6-u-pr-md">
          <BellIcon />
        </Icon>
        Configure notifications
      </Content>
      <Content className="pf-v6-u-font-size-sm">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
      </Content>
    </CardBody>
    <CardFooter>
      <Content>
        <Button icon={<Icon className="pf-v6-u-ml-sm" isInline><ArrowRightIcon /></Icon>} variant="link" isInline>
          Learn more  
        </Button>
      </Content>
    </CardFooter>
  </Card>
];

describe('MultiContentCard component', () => {
  it('should render basic multi-content card', () => {
    const { container } = render(<MultiContentCard cards={cards} />);
    expect(screen.getByText('Getting Started')).toBeInTheDocument();
    expect(screen.getByText('Next Steps')).toBeInTheDocument();
    expect(screen.getByText('Configure application')).toBeInTheDocument();
    expect(screen.getByText('Configure access')).toBeInTheDocument();
    expect(screen.getByText('Configure notifications')).toBeInTheDocument();
    expect(screen.getAllByText('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.')).toHaveLength(2);
    expect(screen.getByText('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.')).toBeInTheDocument();
    expect(screen.getByText('First link')).toBeInTheDocument();
    expect(screen.getByText('Second link')).toBeInTheDocument();
    expect(screen.getByText('Another link')).toBeInTheDocument();
    expect(screen.getAllByText('Learn more')).toHaveLength(2);

    expect(container.firstChild).toMatchSnapshot();
  });

  it('should render expandable multi-content card - expanded', () => {
    const { container } = render(
      <MultiContentCard
        isExpandable
        toggleText='Expandable card toggle text' 
        cards={cards}
      />
    );
    expect(screen.getByText('Expandable card toggle text')).toBeInTheDocument();
    expect(screen.getByText('Getting Started')).toBeInTheDocument();

    expect(container.firstChild).toMatchSnapshot();
  });

  it('should render expandable multi-content card - collapsed', () => {
    const { container } = render(
      <MultiContentCard
        isExpandable
        defaultExpanded={false}
        toggleText='Expandable card toggle text' 
        cards={cards}
      />
    );
    expect(screen.getByText('Expandable card toggle text')).toBeInTheDocument();
    expect(screen.queryByText('Getting Started')).toBe(null);

    expect(container.firstChild).toMatchSnapshot();
  });

  it('should render expandable multi-content card - with actions', () => {
    const { container } = render(
      <MultiContentCard
        isExpandable
        defaultExpanded={false}
        toggleText='Expandable card toggle text' 
        cards={cards}
        actions={
          <Dropdown
            isOpen
            onSelect={() => null}
            onOpenChange={() => null}
            toggle={(toggleRef: React.Ref<MenuToggleElement>) => (
              <MenuToggle
                ref={toggleRef}
                aria-label="kebab dropdown toggle"
                variant="plain"
                icon={<EllipsisVIcon />}
                onClick={() => null}
                isExpanded
              />
            )}
            shouldFocusToggleOnSelect
          >
            <DropdownList>
              <DropdownItem value={0} key="action">
                Action item
              </DropdownItem>
            </DropdownList>
          </Dropdown>
        }
      />
    );
    expect(screen.getByText('Action item')).toBeInTheDocument();

    expect(container.firstChild).toMatchSnapshot();
  });

  it('should render multi-content card with dividers', () => {
    const { container } = render(<MultiContentCard cards={cards} withDividers />);

    expect(screen.getAllByRole('separator')).toHaveLength(2);

    expect(container.firstChild).toMatchSnapshot();
  });

  it('should render multi-content card with a single divider', () => {
    const { container } = render(<MultiContentCard cards={[ cards[0], cards[1], { content: cards[2], dividerVariant: MultiContentCardDividerVariant.left } ]} />);

    expect(screen.getAllByRole('separator')).toHaveLength(1);

    expect(container.firstChild).toMatchSnapshot();
  });

});


================================================
FILE: packages/module/src/MultiContentCard/MultiContentCard.tsx
================================================
import React from 'react';
import {
  Card,
  CardExpandableContent,
  CardHeader,
  CardProps,
  CardTitle,
  Divider,
  Flex,
  FlexItem,
} from '@patternfly/react-core';
import { createUseStyles } from 'react-jss';

export const MultiContentCardDividerVariant = {
  left: 'left',
  right: 'right'
} as const;

export type MultiContentCardDividerVariant = typeof MultiContentCardDividerVariant[keyof typeof MultiContentCardDividerVariant];

export interface MutliContentCardProps {
  /** Card element to be displayed as a content */
  content: React.ReactElement;
  /** Allows adding divider on the left/right from the card */
  dividerVariant?: MultiContentCardDividerVariant;
}

/** extends CardProps */
export interface MultiContentCardProps extends Omit<CardProps, 'children' | 'title'> {
  /** Cards to be displayed as a content */
  cards?: (React.ReactElement | MutliContentCardProps)[];
  /** Actions to be displayed in the expandable section */
  actions?: React.ReactElement;
  /** Toggle text for the expandable section */
  toggleText?: React.ReactNode;
  /** Toggle content for the expandable section */
  toggleContent?: React.ReactElement;
  /** When set to true, all content cards will be separated with dividers */
  withDividers?: boolean;
  /** Indicates whether the card is expandable */
  isExpandable?: boolean;
  /** Indicates whether the card is expanded by default */
  defaultExpanded?: boolean;
  /** Indicates whether the actions toggle is right aligned */
  isToggleRightAligned?: boolean;
  /** Custom OUIA ID */
  ouiaId?: string | number;
}

export const isCardWithProps = (
  card: React.ReactElement | MutliContentCardProps
): card is MutliContentCardProps => !!card && !React.isValidElement(card);

const useStyles = createUseStyles({
  cardTitle: {
    fontSize: 'var(--pf-t--global--font--size--heading--h3)',
  }
});

const MultiContentCard: React.FunctionComponent<MultiContentCardProps> = ({
  cards = [],
  isToggleRightAligned = false,
  actions,
  toggleText,
  toggleContent,
  withDividers = false,
  isExpandable = false,
  defaultExpanded = true,
  ouiaId = 'MultiContentCard',
  ...props
}: MultiContentCardProps) => {
  const [ isExpanded, setIsExpanded ] = React.useState(defaultExpanded);
  const classes = useStyles();
  const onExpand = () => {
    setIsExpanded(!isExpanded);
  };
  
  const renderCards = (cards: (React.ReactElement | MutliContentCardProps)[], withDividers?: boolean) =>  (
    <Flex alignSelf={{ default: 'alignSelfStretch' }} alignItems={{ default: 'alignItemsStretch' }}>
      {cards.map((card, index) => (
        <React.Fragment key={`card-${index}`}>
          {index > 0 && isCardWithProps(card) && card.dividerVariant === MultiContentCardDividerVariant.left && (
            <Divider 
              orientation={{ md: 'vertical' }} 
              inset={{ default: 'inset3xl' }}
            />
          )}
          <FlexItem key={`card-${index}`} flex={{ default: 'flex_1' }} data-ouia-component-id={`${ouiaId}-content-${index}`}>
            {isCardWithProps(card) ? card.content : card}
          </FlexItem>
          {(index + 1 < cards.length && (withDividers || isCardWithProps(card) && card.dividerVariant === MultiContentCardDividerVariant.right)) && (
            <Divider 
              orientation={{ md: 'vertical' }} 
              inset={{ default: 'inset3xl' }}
            />
          )}
        </React.Fragment>
      ))} 
    </Flex>
  );
  
  return (
    <Card isExpanded={isExpanded} ouiaId={ouiaId} {...props}>
      {isExpandable && (
        <CardHeader
          data-ouia-component-id={`${ouiaId}-header`}
          onExpand={onExpand}
          isToggleRightAligned={isToggleRightAligned}
          toggleButtonProps={{
            'aria-label': 'Details',
            'aria-expanded': isExpanded
          }}
          actions={{ actions }}
        >
          {toggleText ? <CardTitle component="h3" className={classes.cardTitle} data-ouia-component-id={`${ouiaId}-title`}>{toggleText}</CardTitle> : toggleContent}
        </CardHeader>
      )}
      {isExpandable ? <CardExpandableContent data-ouia-component-id={`${ouiaId}-expandable-content`}>{renderCards(cards, withDividers)}</CardExpandableContent> : renderCards(cards, withDividers)}
    </Card>
  );}


export default MultiContentCard;



================================================
FILE: packages/module/src/MultiContentCard/__snapshots__/MultiContentCard.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MultiContentCard component should render basic multi-content card 1`] = `
<div
  class="pf-v6-c-card pf-m-expanded"
  data-ouia-component-id="MultiContentCard"
  data-ouia-component-type="PF6/Card"
  data-ouia-safe="true"
  id=""
>
  <div
    class="pf-v6-l-flex pf-m-align-items-stretch pf-m-align-self-stretch"
  >
    <div
      class="pf-m-flex-1"
      data-ouia-component-id="MultiContentCard-content-0"
    >
      <div
        class="pf-v6-c-card pf-m-full-height pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Card-2"
        data-ouia-component-type="PF6/Card"
        data-ouia-safe="true"
        id=""
      >
        <div
          class="pf-v6-c-card__header"
        >
          <div
            class="pf-v6-c-card__header-main"
          >
            <h4
              class="pf-v6-c-content--h4"
              data-ouia-component-id="OUIA-Generated-Content-1"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              Getting Started
            </h4>
          </div>
        </div>
        <div
          class="pf-v6-c-card__body"
        >
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover"
            data-ouia-component-id="OUIA-Generated-Content-2"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <span
              class="pf-v6-c-icon pf-m-md pf-v6-u-pl-sm pf-v6-u-pr-md"
            >
              <span
                class="pf-v6-c-icon__content"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"
                  />
                </svg>
              </span>
            </span>
            Configure application
          </div>
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm"
            data-ouia-component-id="OUIA-Generated-Content-3"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
          </div>
        </div>
        <div
          class="pf-v6-c-card__footer"
        >
          <ul
            class="pf-v6-c-list pf-v6-u-font-size-sm pf-v6-u-link-color pf-v6-u-ml-0"
          >
            <li
              class=""
            >
              <span>
                <button
                  aria-disabled="false"
                  class="pf-v6-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id="OUIA-Generated-Button-link-1"
                  data-ouia-component-type="PF6/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  <span
                    class="pf-v6-c-button__text"
                  >
                    First link
                  </span>
                </button>
              </span>
            </li>
            <li
              class=""
            >
              <span>
                <button
                  aria-disabled="false"
                  class="pf-v6-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id="OUIA-Generated-Button-link-2"
                  data-ouia-component-type="PF6/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  <span
                    class="pf-v6-c-button__text"
                  >
                    Second link
                  </span>
                </button>
              </span>
            </li>
            <li
              class=""
            >
              <span>
                <button
                  aria-disabled="false"
                  class="pf-v6-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id="OUIA-Generated-Button-link-3"
                  data-ouia-component-type="PF6/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  <span
                    class="pf-v6-c-button__text"
                  >
                    Another link
                  </span>
                </button>
              </span>
            </li>
          </ul>
        </div>
      </div>
    </div>
    <div
      class="pf-m-flex-1"
      data-ouia-component-id="MultiContentCard-content-1"
    >
      <div
        class="pf-v6-c-card pf-m-full-height pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Card-3"
        data-ouia-component-type="PF6/Card"
        data-ouia-safe="true"
        id=""
      >
        <div
          class="pf-v6-c-card__body"
        >
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover"
            data-ouia-component-id="OUIA-Generated-Content-4"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <span
              class="pf-v6-c-icon pf-m-md pf-v6-u-pl-sm pf-v6-u-pr-md"
            >
              <span
                class="pf-v6-c-icon__content"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 448 512"
                  width="1em"
                >
                  <path
                    d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
                  />
                </svg>
              </span>
            </span>
            Configure access
          </div>
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm"
            data-ouia-component-id="OUIA-Generated-Content-5"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
          </div>
        </div>
        <div
          class="pf-v6-c-card__footer"
        >
          <div
            class="pf-v6-c-content"
            data-ouia-component-id="OUIA-Generated-Content-6"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <button
              aria-disabled="false"
              class="pf-v6-c-button pf-m-link pf-m-inline"
              data-ouia-component-id="OUIA-Generated-Button-link-4"
              data-ouia-component-type="PF6/Button"
              data-ouia-safe="true"
              type="button"
            >
              <span
                class="pf-v6-c-button__icon pf-m-start"
              >
                <span
                  class="pf-v6-c-icon pf-m-inline pf-v6-u-ml-sm"
                >
                  <span
                    class="pf-v6-c-icon__content"
                  >
                    <svg
                      aria-hidden="true"
                      class="pf-v6-svg"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      viewBox="0 0 448 512"
                      width="1em"
                    >
                      <path
                        d="M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z"
                      />
                    </svg>
                  </span>
                </span>
              </span>
              <span
                class="pf-v6-c-button__text"
              >
                Learn more
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
    <div
      class="pf-m-flex-1"
      data-ouia-component-id="MultiContentCard-content-2"
    >
      <div
        class="pf-v6-c-card pf-m-full-height pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Card-4"
        data-ouia-component-type="PF6/Card"
        data-ouia-safe="true"
        id=""
      >
        <div
          class="pf-v6-c-card__header"
        >
          <div
            class="pf-v6-c-card__header-main"
          >
            <h4
              class="pf-v6-c-content--h4"
              data-ouia-component-id="OUIA-Generated-Content-7"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              Next Steps
            </h4>
          </div>
        </div>
        <div
          class="pf-v6-c-card__body"
        >
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover"
            data-ouia-component-id="OUIA-Generated-Content-8"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <span
              class="pf-v6-c-icon pf-m-md pf-v6-u-pl-sm pf-v6-u-pr-md"
            >
              <span
                class="pf-v6-c-icon__content"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 896 1024"
                  width="1em"
                >
                  <path
                    d="M448,0 C465.333333,0 480.333333,6.33333333 493,19 C505.666667,31.6666667 512,46.6666667 512,64 L512,106 L514.23,106.45 C587.89,121.39 648.48,157.24 696,214 C744,271.333333 768,338.666667 768,416 C768,500 780,568.666667 804,622 C818.666667,652.666667 841.333333,684 872,716 C873.773676,718.829136 875.780658,721.505113 878,724 C890,737.333333 896,752.333333 896,769 C896,785.666667 890,800.333333 878,813 C866,825.666667 850.666667,832 832,832 L63.3,832 C44.9533333,831.84 29.8533333,825.506667 18,813 C6,800.333333 0,785.666667 0,769 C0,752.333333 6,737.333333 18,724 L24,716 L25.06,714.9 C55.1933333,683.28 77.5066667,652.313333 92,622 C116,568.666667 128,500 128,416 C128,338.666667 152,271.333333 200,214 C248,156.666667 309.333333,120.666667 384,106 L384,63.31 C384.166667,46.27 390.5,31.5 403,19 C415.666667,6.33333333 430.666667,0 448,0 Z M576,896 L576,897.08 C575.74,932.6 563.073333,962.573333 538,987 C512.666667,1011.66667 482.666667,1024 448,1024 C413.333333,1024 383.333333,1011.66667 358,987 C332.666667,962.333333 320,932 320,896 L576,896 Z"
                  />
                </svg>
              </span>
            </span>
            Configure notifications
          </div>
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm"
            data-ouia-component-id="OUIA-Generated-Content-9"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
          </div>
        </div>
        <div
          class="pf-v6-c-card__footer"
        >
          <div
            class="pf-v6-c-content"
            data-ouia-component-id="OUIA-Generated-Content-10"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <button
              aria-disabled="false"
              class="pf-v6-c-button pf-m-link pf-m-inline"
              data-ouia-component-id="OUIA-Generated-Button-link-5"
              data-ouia-component-type="PF6/Button"
              data-ouia-safe="true"
              type="button"
            >
              <span
                class="pf-v6-c-button__icon pf-m-start"
              >
                <span
                  class="pf-v6-c-icon pf-m-inline pf-v6-u-ml-sm"
                >
                  <span
                    class="pf-v6-c-icon__content"
                  >
                    <svg
                      aria-hidden="true"
                      class="pf-v6-svg"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      viewBox="0 0 448 512"
                      width="1em"
                    >
                      <path
                        d="M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z"
                      />
                    </svg>
                  </span>
                </span>
              </span>
              <span
                class="pf-v6-c-button__text"
              >
                Learn more
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`MultiContentCard component should render expandable multi-content card - collapsed 1`] = `
<div
  class="pf-v6-c-card"
  data-ouia-component-id="MultiContentCard"
  data-ouia-component-type="PF6/Card"
  data-ouia-safe="true"
  id=""
>
  <div
    class="pf-v6-c-card__header"
    data-ouia-component-id="MultiContentCard-header"
  >
    <div
      class="pf-v6-c-card__header-toggle"
    >
      <button
        aria-disabled="false"
        aria-expanded="false"
        aria-label="Details"
        class="pf-v6-c-button pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Button-plain-2"
        data-ouia-component-type="PF6/Button"
        data-ouia-safe="true"
        type="button"
      >
        <span
          class="pf-v6-c-button__icon"
        >
          <span
            class="pf-v6-c-card__header-toggle-icon"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 256 512"
              width="1em"
            >
              <path
                d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
              />
            </svg>
          </span>
        </span>
      </button>
    </div>
    <div
      class="pf-v6-c-card__actions"
    />
    <div
      class="pf-v6-c-card__header-main"
    >
      <div
        class="pf-v6-c-card__title"
      >
        <h3
          class="pf-v6-c-card__title-text cardTitle-0-2-1"
          data-ouia-component-id="MultiContentCard-title"
        >
          Expandable card toggle text
        </h3>
      </div>
    </div>
  </div>
</div>
`;

exports[`MultiContentCard component should render expandable multi-content card - expanded 1`] = `
<div
  class="pf-v6-c-card pf-m-expanded"
  data-ouia-component-id="MultiContentCard"
  data-ouia-component-type="PF6/Card"
  data-ouia-safe="true"
  id=""
>
  <div
    class="pf-v6-c-card__header"
    data-ouia-component-id="MultiContentCard-header"
  >
    <div
      class="pf-v6-c-card__header-toggle"
    >
      <button
        aria-disabled="false"
        aria-expanded="true"
        aria-label="Details"
        class="pf-v6-c-button pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Button-plain-1"
        data-ouia-component-type="PF6/Button"
        data-ouia-safe="true"
        type="button"
      >
        <span
          class="pf-v6-c-button__icon"
        >
          <span
            class="pf-v6-c-card__header-toggle-icon"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 256 512"
              width="1em"
            >
              <path
                d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
              />
            </svg>
          </span>
        </span>
      </button>
    </div>
    <div
      class="pf-v6-c-card__actions"
    />
    <div
      class="pf-v6-c-card__header-main"
    >
      <div
        class="pf-v6-c-card__title"
      >
        <h3
          class="pf-v6-c-card__title-text cardTitle-0-2-1"
          data-ouia-component-id="MultiContentCard-title"
        >
          Expandable card toggle text
        </h3>
      </div>
    </div>
  </div>
  <div
    class="pf-v6-c-card__expandable-content"
    data-ouia-component-id="MultiContentCard-expandable-content"
  >
    <div
      class="pf-v6-l-flex pf-m-align-items-stretch pf-m-align-self-stretch"
    >
      <div
        class="pf-m-flex-1"
        data-ouia-component-id="MultiContentCard-content-0"
      >
        <div
          class="pf-v6-c-card pf-m-full-height pf-m-plain"
          data-ouia-component-id="OUIA-Generated-Card-6"
          data-ouia-component-type="PF6/Card"
          data-ouia-safe="true"
          id=""
        >
          <div
            class="pf-v6-c-card__header"
          >
            <div
              class="pf-v6-c-card__header-main"
            >
              <h4
                class="pf-v6-c-content--h4"
                data-ouia-component-id="OUIA-Generated-Content-11"
                data-ouia-component-type="PF6/Content"
                data-ouia-safe="true"
                data-pf-content="true"
              >
                Getting Started
              </h4>
            </div>
          </div>
          <div
            class="pf-v6-c-card__body"
          >
            <div
              class="pf-v6-c-content pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover"
              data-ouia-component-id="OUIA-Generated-Content-12"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              <span
                class="pf-v6-c-icon pf-m-md pf-v6-u-pl-sm pf-v6-u-pr-md"
              >
                <span
                  class="pf-v6-c-icon__content"
                >
                  <svg
                    aria-hidden="true"
                    class="pf-v6-svg"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <path
                      d="M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"
                    />
                  </svg>
                </span>
              </span>
              Configure application
            </div>
            <div
              class="pf-v6-c-content pf-v6-u-font-size-sm"
              data-ouia-component-id="OUIA-Generated-Content-13"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
            </div>
          </div>
          <div
            class="pf-v6-c-card__footer"
          >
            <ul
              class="pf-v6-c-list pf-v6-u-font-size-sm pf-v6-u-link-color pf-v6-u-ml-0"
            >
              <li
                class=""
              >
                <span>
                  <button
                    aria-disabled="false"
                    class="pf-v6-c-button pf-m-link pf-m-inline"
                    data-ouia-component-id="OUIA-Generated-Button-link-6"
                    data-ouia-component-type="PF6/Button"
                    data-ouia-safe="true"
                    type="button"
                  >
                    <span
                      class="pf-v6-c-button__text"
                    >
                      First link
                    </span>
                  </button>
                </span>
              </li>
              <li
                class=""
              >
                <span>
                  <button
                    aria-disabled="false"
                    class="pf-v6-c-button pf-m-link pf-m-inline"
                    data-ouia-component-id="OUIA-Generated-Button-link-7"
                    data-ouia-component-type="PF6/Button"
                    data-ouia-safe="true"
                    type="button"
                  >
                    <span
                      class="pf-v6-c-button__text"
                    >
                      Second link
                    </span>
                  </button>
                </span>
              </li>
              <li
                class=""
              >
                <span>
                  <button
                    aria-disabled="false"
                    class="pf-v6-c-button pf-m-link pf-m-inline"
                    data-ouia-component-id="OUIA-Generated-Button-link-8"
                    data-ouia-component-type="PF6/Button"
                    data-ouia-safe="true"
                    type="button"
                  >
                    <span
                      class="pf-v6-c-button__text"
                    >
                      Another link
                    </span>
                  </button>
                </span>
              </li>
            </ul>
          </div>
        </div>
      </div>
      <div
        class="pf-m-flex-1"
        data-ouia-component-id="MultiContentCard-content-1"
      >
        <div
          class="pf-v6-c-card pf-m-full-height pf-m-plain"
          data-ouia-component-id="OUIA-Generated-Card-7"
          data-ouia-component-type="PF6/Card"
          data-ouia-safe="true"
          id=""
        >
          <div
            class="pf-v6-c-card__body"
          >
            <div
              class="pf-v6-c-content pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover"
              data-ouia-component-id="OUIA-Generated-Content-14"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              <span
                class="pf-v6-c-icon pf-m-md pf-v6-u-pl-sm pf-v6-u-pr-md"
              >
                <span
                  class="pf-v6-c-icon__content"
                >
                  <svg
                    aria-hidden="true"
                    class="pf-v6-svg"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    viewBox="0 0 448 512"
                    width="1em"
                  >
                    <path
                      d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
                    />
                  </svg>
                </span>
              </span>
              Configure access
            </div>
            <div
              class="pf-v6-c-content pf-v6-u-font-size-sm"
              data-ouia-component-id="OUIA-Generated-Content-15"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
            </div>
          </div>
          <div
            class="pf-v6-c-card__footer"
          >
            <div
              class="pf-v6-c-content"
              data-ouia-component-id="OUIA-Generated-Content-16"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              <button
                aria-disabled="false"
                class="pf-v6-c-button pf-m-link pf-m-inline"
                data-ouia-component-id="OUIA-Generated-Button-link-9"
                data-ouia-component-type="PF6/Button"
                data-ouia-safe="true"
                type="button"
              >
                <span
                  class="pf-v6-c-button__icon pf-m-start"
                >
                  <span
                    class="pf-v6-c-icon pf-m-inline pf-v6-u-ml-sm"
                  >
                    <span
                      class="pf-v6-c-icon__content"
                    >
                      <svg
                        aria-hidden="true"
                        class="pf-v6-svg"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        viewBox="0 0 448 512"
                        width="1em"
                      >
                        <path
                          d="M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z"
                        />
                      </svg>
                    </span>
                  </span>
                </span>
                <span
                  class="pf-v6-c-button__text"
                >
                  Learn more
                </span>
              </button>
            </div>
          </div>
        </div>
      </div>
      <div
        class="pf-m-flex-1"
        data-ouia-component-id="MultiContentCard-content-2"
      >
        <div
          class="pf-v6-c-card pf-m-full-height pf-m-plain"
          data-ouia-component-id="OUIA-Generated-Card-8"
          data-ouia-component-type="PF6/Card"
          data-ouia-safe="true"
          id=""
        >
          <div
            class="pf-v6-c-card__header"
          >
            <div
              class="pf-v6-c-card__header-main"
            >
              <h4
                class="pf-v6-c-content--h4"
                data-ouia-component-id="OUIA-Generated-Content-17"
                data-ouia-component-type="PF6/Content"
                data-ouia-safe="true"
                data-pf-content="true"
              >
                Next Steps
              </h4>
            </div>
          </div>
          <div
            class="pf-v6-c-card__body"
          >
            <div
              class="pf-v6-c-content pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover"
              data-ouia-component-id="OUIA-Generated-Content-18"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              <span
                class="pf-v6-c-icon pf-m-md pf-v6-u-pl-sm pf-v6-u-pr-md"
              >
                <span
                  class="pf-v6-c-icon__content"
                >
                  <svg
                    aria-hidden="true"
                    class="pf-v6-svg"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    viewBox="0 0 896 1024"
                    width="1em"
                  >
                    <path
                      d="M448,0 C465.333333,0 480.333333,6.33333333 493,19 C505.666667,31.6666667 512,46.6666667 512,64 L512,106 L514.23,106.45 C587.89,121.39 648.48,157.24 696,214 C744,271.333333 768,338.666667 768,416 C768,500 780,568.666667 804,622 C818.666667,652.666667 841.333333,684 872,716 C873.773676,718.829136 875.780658,721.505113 878,724 C890,737.333333 896,752.333333 896,769 C896,785.666667 890,800.333333 878,813 C866,825.666667 850.666667,832 832,832 L63.3,832 C44.9533333,831.84 29.8533333,825.506667 18,813 C6,800.333333 0,785.666667 0,769 C0,752.333333 6,737.333333 18,724 L24,716 L25.06,714.9 C55.1933333,683.28 77.5066667,652.313333 92,622 C116,568.666667 128,500 128,416 C128,338.666667 152,271.333333 200,214 C248,156.666667 309.333333,120.666667 384,106 L384,63.31 C384.166667,46.27 390.5,31.5 403,19 C415.666667,6.33333333 430.666667,0 448,0 Z M576,896 L576,897.08 C575.74,932.6 563.073333,962.573333 538,987 C512.666667,1011.66667 482.666667,1024 448,1024 C413.333333,1024 383.333333,1011.66667 358,987 C332.666667,962.333333 320,932 320,896 L576,896 Z"
                    />
                  </svg>
                </span>
              </span>
              Configure notifications
            </div>
            <div
              class="pf-v6-c-content pf-v6-u-font-size-sm"
              data-ouia-component-id="OUIA-Generated-Content-19"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
            </div>
          </div>
          <div
            class="pf-v6-c-card__footer"
          >
            <div
              class="pf-v6-c-content"
              data-ouia-component-id="OUIA-Generated-Content-20"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              <button
                aria-disabled="false"
                class="pf-v6-c-button pf-m-link pf-m-inline"
                data-ouia-component-id="OUIA-Generated-Button-link-10"
                data-ouia-component-type="PF6/Button"
                data-ouia-safe="true"
                type="button"
              >
                <span
                  class="pf-v6-c-button__icon pf-m-start"
                >
                  <span
                    class="pf-v6-c-icon pf-m-inline pf-v6-u-ml-sm"
                  >
                    <span
                      class="pf-v6-c-icon__content"
                    >
                      <svg
                        aria-hidden="true"
                        class="pf-v6-svg"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        viewBox="0 0 448 512"
                        width="1em"
                      >
                        <path
                          d="M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z"
                        />
                      </svg>
                    </span>
                  </span>
                </span>
                <span
                  class="pf-v6-c-button__text"
                >
                  Learn more
                </span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`MultiContentCard component should render expandable multi-content card - with actions 1`] = `
<div
  class="pf-v6-c-card"
  data-ouia-component-id="MultiContentCard"
  data-ouia-component-type="PF6/Card"
  data-ouia-safe="true"
  id=""
>
  <div
    class="pf-v6-c-card__header"
    data-ouia-component-id="MultiContentCard-header"
  >
    <div
      class="pf-v6-c-card__header-toggle"
    >
      <button
        aria-disabled="false"
        aria-expanded="false"
        aria-label="Details"
        class="pf-v6-c-button pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Button-plain-3"
        data-ouia-component-type="PF6/Button"
        data-ouia-safe="true"
        type="button"
      >
        <span
          class="pf-v6-c-button__icon"
        >
          <span
            class="pf-v6-c-card__header-toggle-icon"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 256 512"
              width="1em"
            >
              <path
                d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
              />
            </svg>
          </span>
        </span>
      </button>
    </div>
    <div
      class="pf-v6-c-card__actions"
    >
      <button
        aria-expanded="true"
        aria-label="kebab dropdown toggle"
        class="pf-v6-c-menu-toggle pf-m-expanded pf-m-plain"
        data-ouia-component-id="OUIA-Generated-MenuToggle-plain-1"
        data-ouia-component-type="PF6/MenuToggle"
        data-ouia-safe="true"
        type="button"
      >
        <span
          class="pf-v6-c-menu-toggle__icon"
        >
          <svg
            aria-hidden="true"
            class="pf-v6-svg"
            fill="currentColor"
            height="1em"
            role="img"
            viewBox="0 0 192 512"
            width="1em"
          >
            <path
              d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
            />
          </svg>
        </span>
      </button>
    </div>
    <div
      class="pf-v6-c-card__header-main"
    >
      <div
        class="pf-v6-c-card__title"
      >
        <h3
          class="pf-v6-c-card__title-text cardTitle-0-2-1"
          data-ouia-component-id="MultiContentCard-title"
        >
          Expandable card toggle text
        </h3>
      </div>
    </div>
  </div>
</div>
`;

exports[`MultiContentCard component should render multi-content card with a single divider 1`] = `
<div
  class="pf-v6-c-card pf-m-expanded"
  data-ouia-component-id="MultiContentCard"
  data-ouia-component-type="PF6/Card"
  data-ouia-safe="true"
  id=""
>
  <div
    class="pf-v6-l-flex pf-m-align-items-stretch pf-m-align-self-stretch"
  >
    <div
      class="pf-m-flex-1"
      data-ouia-component-id="MultiContentCard-content-0"
    >
      <div
        class="pf-v6-c-card pf-m-full-height pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Card-16"
        data-ouia-component-type="PF6/Card"
        data-ouia-safe="true"
        id=""
      >
        <div
          class="pf-v6-c-card__header"
        >
          <div
            class="pf-v6-c-card__header-main"
          >
            <h4
              class="pf-v6-c-content--h4"
              data-ouia-component-id="OUIA-Generated-Content-31"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              Getting Started
            </h4>
          </div>
        </div>
        <div
          class="pf-v6-c-card__body"
        >
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover"
            data-ouia-component-id="OUIA-Generated-Content-32"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <span
              class="pf-v6-c-icon pf-m-md pf-v6-u-pl-sm pf-v6-u-pr-md"
            >
              <span
                class="pf-v6-c-icon__content"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"
                  />
                </svg>
              </span>
            </span>
            Configure application
          </div>
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm"
            data-ouia-component-id="OUIA-Generated-Content-33"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
          </div>
        </div>
        <div
          class="pf-v6-c-card__footer"
        >
          <ul
            class="pf-v6-c-list pf-v6-u-font-size-sm pf-v6-u-link-color pf-v6-u-ml-0"
          >
            <li
              class=""
            >
              <span>
                <button
                  aria-disabled="false"
                  class="pf-v6-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id="OUIA-Generated-Button-link-16"
                  data-ouia-component-type="PF6/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  <span
                    class="pf-v6-c-button__text"
                  >
                    First link
                  </span>
                </button>
              </span>
            </li>
            <li
              class=""
            >
              <span>
                <button
                  aria-disabled="false"
                  class="pf-v6-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id="OUIA-Generated-Button-link-17"
                  data-ouia-component-type="PF6/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  <span
                    class="pf-v6-c-button__text"
                  >
                    Second link
                  </span>
                </button>
              </span>
            </li>
            <li
              class=""
            >
              <span>
                <button
                  aria-disabled="false"
                  class="pf-v6-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id="OUIA-Generated-Button-link-18"
                  data-ouia-component-type="PF6/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  <span
                    class="pf-v6-c-button__text"
                  >
                    Another link
                  </span>
                </button>
              </span>
            </li>
          </ul>
        </div>
      </div>
    </div>
    <div
      class="pf-m-flex-1"
      data-ouia-component-id="MultiContentCard-content-1"
    >
      <div
        class="pf-v6-c-card pf-m-full-height pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Card-17"
        data-ouia-component-type="PF6/Card"
        data-ouia-safe="true"
        id=""
      >
        <div
          class="pf-v6-c-card__body"
        >
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover"
            data-ouia-component-id="OUIA-Generated-Content-34"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <span
              class="pf-v6-c-icon pf-m-md pf-v6-u-pl-sm pf-v6-u-pr-md"
            >
              <span
                class="pf-v6-c-icon__content"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 448 512"
                  width="1em"
                >
                  <path
                    d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
                  />
                </svg>
              </span>
            </span>
            Configure access
          </div>
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm"
            data-ouia-component-id="OUIA-Generated-Content-35"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
          </div>
        </div>
        <div
          class="pf-v6-c-card__footer"
        >
          <div
            class="pf-v6-c-content"
            data-ouia-component-id="OUIA-Generated-Content-36"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <button
              aria-disabled="false"
              class="pf-v6-c-button pf-m-link pf-m-inline"
              data-ouia-component-id="OUIA-Generated-Button-link-19"
              data-ouia-component-type="PF6/Button"
              data-ouia-safe="true"
              type="button"
            >
              <span
                class="pf-v6-c-button__icon pf-m-start"
              >
                <span
                  class="pf-v6-c-icon pf-m-inline pf-v6-u-ml-sm"
                >
                  <span
                    class="pf-v6-c-icon__content"
                  >
                    <svg
                      aria-hidden="true"
                      class="pf-v6-svg"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      viewBox="0 0 448 512"
                      width="1em"
                    >
                      <path
                        d="M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z"
                      />
                    </svg>
                  </span>
                </span>
              </span>
              <span
                class="pf-v6-c-button__text"
              >
                Learn more
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
    <hr
      class="pf-v6-c-divider pf-m-inset-3xl pf-m-vertical-on-md"
    />
    <div
      class="pf-m-flex-1"
      data-ouia-component-id="MultiContentCard-content-2"
    >
      <div
        class="pf-v6-c-card pf-m-full-height pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Card-18"
        data-ouia-component-type="PF6/Card"
        data-ouia-safe="true"
        id=""
      >
        <div
          class="pf-v6-c-card__header"
        >
          <div
            class="pf-v6-c-card__header-main"
          >
            <h4
              class="pf-v6-c-content--h4"
              data-ouia-component-id="OUIA-Generated-Content-37"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              Next Steps
            </h4>
          </div>
        </div>
        <div
          class="pf-v6-c-card__body"
        >
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover"
            data-ouia-component-id="OUIA-Generated-Content-38"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <span
              class="pf-v6-c-icon pf-m-md pf-v6-u-pl-sm pf-v6-u-pr-md"
            >
              <span
                class="pf-v6-c-icon__content"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 896 1024"
                  width="1em"
                >
                  <path
                    d="M448,0 C465.333333,0 480.333333,6.33333333 493,19 C505.666667,31.6666667 512,46.6666667 512,64 L512,106 L514.23,106.45 C587.89,121.39 648.48,157.24 696,214 C744,271.333333 768,338.666667 768,416 C768,500 780,568.666667 804,622 C818.666667,652.666667 841.333333,684 872,716 C873.773676,718.829136 875.780658,721.505113 878,724 C890,737.333333 896,752.333333 896,769 C896,785.666667 890,800.333333 878,813 C866,825.666667 850.666667,832 832,832 L63.3,832 C44.9533333,831.84 29.8533333,825.506667 18,813 C6,800.333333 0,785.666667 0,769 C0,752.333333 6,737.333333 18,724 L24,716 L25.06,714.9 C55.1933333,683.28 77.5066667,652.313333 92,622 C116,568.666667 128,500 128,416 C128,338.666667 152,271.333333 200,214 C248,156.666667 309.333333,120.666667 384,106 L384,63.31 C384.166667,46.27 390.5,31.5 403,19 C415.666667,6.33333333 430.666667,0 448,0 Z M576,896 L576,897.08 C575.74,932.6 563.073333,962.573333 538,987 C512.666667,1011.66667 482.666667,1024 448,1024 C413.333333,1024 383.333333,1011.66667 358,987 C332.666667,962.333333 320,932 320,896 L576,896 Z"
                  />
                </svg>
              </span>
            </span>
            Configure notifications
          </div>
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm"
            data-ouia-component-id="OUIA-Generated-Content-39"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
          </div>
        </div>
        <div
          class="pf-v6-c-card__footer"
        >
          <div
            class="pf-v6-c-content"
            data-ouia-component-id="OUIA-Generated-Content-40"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <button
              aria-disabled="false"
              class="pf-v6-c-button pf-m-link pf-m-inline"
              data-ouia-component-id="OUIA-Generated-Button-link-20"
              data-ouia-component-type="PF6/Button"
              data-ouia-safe="true"
              type="button"
            >
              <span
                class="pf-v6-c-button__icon pf-m-start"
              >
                <span
                  class="pf-v6-c-icon pf-m-inline pf-v6-u-ml-sm"
                >
                  <span
                    class="pf-v6-c-icon__content"
                  >
                    <svg
                      aria-hidden="true"
                      class="pf-v6-svg"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      viewBox="0 0 448 512"
                      width="1em"
                    >
                      <path
                        d="M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z"
                      />
                    </svg>
                  </span>
                </span>
              </span>
              <span
                class="pf-v6-c-button__text"
              >
                Learn more
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`MultiContentCard component should render multi-content card with dividers 1`] = `
<div
  class="pf-v6-c-card pf-m-expanded"
  data-ouia-component-id="MultiContentCard"
  data-ouia-component-type="PF6/Card"
  data-ouia-safe="true"
  id=""
>
  <div
    class="pf-v6-l-flex pf-m-align-items-stretch pf-m-align-self-stretch"
  >
    <div
      class="pf-m-flex-1"
      data-ouia-component-id="MultiContentCard-content-0"
    >
      <div
        class="pf-v6-c-card pf-m-full-height pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Card-12"
        data-ouia-component-type="PF6/Card"
        data-ouia-safe="true"
        id=""
      >
        <div
          class="pf-v6-c-card__header"
        >
          <div
            class="pf-v6-c-card__header-main"
          >
            <h4
              class="pf-v6-c-content--h4"
              data-ouia-component-id="OUIA-Generated-Content-21"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              Getting Started
            </h4>
          </div>
        </div>
        <div
          class="pf-v6-c-card__body"
        >
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover"
            data-ouia-component-id="OUIA-Generated-Content-22"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <span
              class="pf-v6-c-icon pf-m-md pf-v6-u-pl-sm pf-v6-u-pr-md"
            >
              <span
                class="pf-v6-c-icon__content"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"
                  />
                </svg>
              </span>
            </span>
            Configure application
          </div>
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm"
            data-ouia-component-id="OUIA-Generated-Content-23"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
          </div>
        </div>
        <div
          class="pf-v6-c-card__footer"
        >
          <ul
            class="pf-v6-c-list pf-v6-u-font-size-sm pf-v6-u-link-color pf-v6-u-ml-0"
          >
            <li
              class=""
            >
              <span>
                <button
                  aria-disabled="false"
                  class="pf-v6-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id="OUIA-Generated-Button-link-11"
                  data-ouia-component-type="PF6/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  <span
                    class="pf-v6-c-button__text"
                  >
                    First link
                  </span>
                </button>
              </span>
            </li>
            <li
              class=""
            >
              <span>
                <button
                  aria-disabled="false"
                  class="pf-v6-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id="OUIA-Generated-Button-link-12"
                  data-ouia-component-type="PF6/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  <span
                    class="pf-v6-c-button__text"
                  >
                    Second link
                  </span>
                </button>
              </span>
            </li>
            <li
              class=""
            >
              <span>
                <button
                  aria-disabled="false"
                  class="pf-v6-c-button pf-m-link pf-m-inline"
                  data-ouia-component-id="OUIA-Generated-Button-link-13"
                  data-ouia-component-type="PF6/Button"
                  data-ouia-safe="true"
                  type="button"
                >
                  <span
                    class="pf-v6-c-button__text"
                  >
                    Another link
                  </span>
                </button>
              </span>
            </li>
          </ul>
        </div>
      </div>
    </div>
    <hr
      class="pf-v6-c-divider pf-m-inset-3xl pf-m-vertical-on-md"
    />
    <div
      class="pf-m-flex-1"
      data-ouia-component-id="MultiContentCard-content-1"
    >
      <div
        class="pf-v6-c-card pf-m-full-height pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Card-13"
        data-ouia-component-type="PF6/Card"
        data-ouia-safe="true"
        id=""
      >
        <div
          class="pf-v6-c-card__body"
        >
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover"
            data-ouia-component-id="OUIA-Generated-Content-24"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <span
              class="pf-v6-c-icon pf-m-md pf-v6-u-pl-sm pf-v6-u-pr-md"
            >
              <span
                class="pf-v6-c-icon__content"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 448 512"
                  width="1em"
                >
                  <path
                    d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
                  />
                </svg>
              </span>
            </span>
            Configure access
          </div>
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm"
            data-ouia-component-id="OUIA-Generated-Content-25"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
          </div>
        </div>
        <div
          class="pf-v6-c-card__footer"
        >
          <div
            class="pf-v6-c-content"
            data-ouia-component-id="OUIA-Generated-Content-26"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <button
              aria-disabled="false"
              class="pf-v6-c-button pf-m-link pf-m-inline"
              data-ouia-component-id="OUIA-Generated-Button-link-14"
              data-ouia-component-type="PF6/Button"
              data-ouia-safe="true"
              type="button"
            >
              <span
                class="pf-v6-c-button__icon pf-m-start"
              >
                <span
                  class="pf-v6-c-icon pf-m-inline pf-v6-u-ml-sm"
                >
                  <span
                    class="pf-v6-c-icon__content"
                  >
                    <svg
                      aria-hidden="true"
                      class="pf-v6-svg"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      viewBox="0 0 448 512"
                      width="1em"
                    >
                      <path
                        d="M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z"
                      />
                    </svg>
                  </span>
                </span>
              </span>
              <span
                class="pf-v6-c-button__text"
              >
                Learn more
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
    <hr
      class="pf-v6-c-divider pf-m-inset-3xl pf-m-vertical-on-md"
    />
    <div
      class="pf-m-flex-1"
      data-ouia-component-id="MultiContentCard-content-2"
    >
      <div
        class="pf-v6-c-card pf-m-full-height pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Card-14"
        data-ouia-component-type="PF6/Card"
        data-ouia-safe="true"
        id=""
      >
        <div
          class="pf-v6-c-card__header"
        >
          <div
            class="pf-v6-c-card__header-main"
          >
            <h4
              class="pf-v6-c-content--h4"
              data-ouia-component-id="OUIA-Generated-Content-27"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              Next Steps
            </h4>
          </div>
        </div>
        <div
          class="pf-v6-c-card__body"
        >
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm pf-v6-u-font-weight-bold pf-v6-u-mb-sm pf-v6-u-link-color-hover"
            data-ouia-component-id="OUIA-Generated-Content-28"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <span
              class="pf-v6-c-icon pf-m-md pf-v6-u-pl-sm pf-v6-u-pr-md"
            >
              <span
                class="pf-v6-c-icon__content"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 896 1024"
                  width="1em"
                >
                  <path
                    d="M448,0 C465.333333,0 480.333333,6.33333333 493,19 C505.666667,31.6666667 512,46.6666667 512,64 L512,106 L514.23,106.45 C587.89,121.39 648.48,157.24 696,214 C744,271.333333 768,338.666667 768,416 C768,500 780,568.666667 804,622 C818.666667,652.666667 841.333333,684 872,716 C873.773676,718.829136 875.780658,721.505113 878,724 C890,737.333333 896,752.333333 896,769 C896,785.666667 890,800.333333 878,813 C866,825.666667 850.666667,832 832,832 L63.3,832 C44.9533333,831.84 29.8533333,825.506667 18,813 C6,800.333333 0,785.666667 0,769 C0,752.333333 6,737.333333 18,724 L24,716 L25.06,714.9 C55.1933333,683.28 77.5066667,652.313333 92,622 C116,568.666667 128,500 128,416 C128,338.666667 152,271.333333 200,214 C248,156.666667 309.333333,120.666667 384,106 L384,63.31 C384.166667,46.27 390.5,31.5 403,19 C415.666667,6.33333333 430.666667,0 448,0 Z M576,896 L576,897.08 C575.74,932.6 563.073333,962.573333 538,987 C512.666667,1011.66667 482.666667,1024 448,1024 C413.333333,1024 383.333333,1011.66667 358,987 C332.666667,962.333333 320,932 320,896 L576,896 Z"
                  />
                </svg>
              </span>
            </span>
            Configure notifications
          </div>
          <div
            class="pf-v6-c-content pf-v6-u-font-size-sm"
            data-ouia-component-id="OUIA-Generated-Content-29"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
          </div>
        </div>
        <div
          class="pf-v6-c-card__footer"
        >
          <div
            class="pf-v6-c-content"
            data-ouia-component-id="OUIA-Generated-Content-30"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            <button
              aria-disabled="false"
              class="pf-v6-c-button pf-m-link pf-m-inline"
              data-ouia-component-id="OUIA-Generated-Button-link-15"
              data-ouia-component-type="PF6/Button"
              data-ouia-safe="true"
              type="button"
            >
              <span
                class="pf-v6-c-button__icon pf-m-start"
              >
                <span
                  class="pf-v6-c-icon pf-m-inline pf-v6-u-ml-sm"
                >
                  <span
                    class="pf-v6-c-icon__content"
                  >
                    <svg
                      aria-hidden="true"
                      class="pf-v6-svg"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      viewBox="0 0 448 512"
                      width="1em"
                    >
                      <path
                        d="M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z"
                      />
                    </svg>
                  </span>
                </span>
              </span>
              <span
                class="pf-v6-c-button__text"
              >
                Learn more
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;



================================================
FILE: packages/module/src/NotFoundIcon/index.ts
================================================
export { default } from './NotFoundIcon';
export * from './NotFoundIcon';



================================================
FILE: packages/module/src/NotFoundIcon/NotFoundIcon.tsx
================================================
import React from 'react';
import { createUseStyles } from 'react-jss';
import { PathMissingIcon } from '@patternfly/react-icons';

const useStyles = createUseStyles({
  notFoundIcon: { height: '150px', width: '150px' },
});


export const NotFoundIcon: React.FunctionComponent = (props) => (
  <PathMissingIcon
    {...props}
    className={useStyles().notFoundIcon}
  />
);

export default NotFoundIcon;



================================================
FILE: packages/module/src/PageHeader/index.ts
================================================
export { default } from './PageHeader'
export * from './PageHeader'


================================================
FILE: packages/module/src/PageHeader/PageHeader.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import PageHeader from './PageHeader';

describe('PageHeader component', () => {
  test('should render', () => {
    expect(render(<PageHeader title='My title' subtitle='This is a subtitle for your page header' />)).toMatchSnapshot();
  });
});


================================================
FILE: packages/module/src/PageHeader/PageHeader.tsx
================================================
import React from 'react';
import {
  Button,
  ButtonProps,
  ButtonVariant,
  Content,
  Divider,
  Flex,
  FlexItem,
  PageBreadcrumb,
  PageSection,
  Split,
  SplitItem,
} from '@patternfly/react-core';
import { ExternalLinkAltIcon } from '@patternfly/react-icons';
import { createUseStyles } from 'react-jss';

/** extends ButtonProps */
export interface PageHeaderLinkProps extends ButtonProps {
  /** Title for the link */
  label: string;
  /** Indicates if the link points to an external page */
  isExternal?: boolean;
}

export interface PageHeaderProps extends React.PropsWithChildren {
  /** Title for page header */
  title?: React.ReactNode;
  /** Subtitle for page header */
  subtitle?: React.ReactNode;
  /** Optional link below subtitle */
  linkProps?: PageHeaderLinkProps;
  /** Optional icon for page header (appears to the left of the page header's title with a divider) */
  icon?: React.ReactNode;
  /** Optional label for page header (appears to the right of the page header's title) */
  label?: React.ReactNode;
  /** Breadcrumbs component */
  breadcrumbs?: React.ReactNode;
  /** Menu that appears to the far right of the title */
  actionMenu?: React.ReactNode;
  /** Custom OUIA ID */
  ouiaId?: string | number;
  /** Child nodes */
  children?: React.ReactNode;
  /** Classname for the h1 element */
  headingClassname?: string;
}

const useStyles = createUseStyles({
  iconMinWidth: {
    minWidth: '48px',
  }
});

export const PageHeader: React.FunctionComponent<PageHeaderProps> = ({
  title,
  subtitle,
  linkProps,
  icon,
  label,
  breadcrumbs = null,
  actionMenu,
  ouiaId = 'PageHeader',
  children = null,
  headingClassname = subtitle ? 'pf-v6-u-mb-sm' : ''
}: PageHeaderProps) => {
  const classes = useStyles();
  const { isExternal = false, ...linkRestProps } = linkProps ?? {};
  const showSplitRow = title || label || actionMenu;
  const showMainFlex = showSplitRow || subtitle || linkProps;

  return (
    <>
      {breadcrumbs && (
        <PageBreadcrumb>
          {breadcrumbs}
        </PageBreadcrumb>
      )}
      <PageSection hasBodyWrapper={false}>
        {(showMainFlex || icon) &&
          <Flex>
            {icon && (
              <>
                <FlexItem alignSelf={{ default: 'alignSelfCenter' }} className={classes.iconMinWidth}>
                  {icon}
                </FlexItem>
                <Divider orientation={{
                  default: 'vertical',
                }} />
              </>
            )}
            {(showMainFlex) && (
              <FlexItem flex={{ default: 'flex_1' }}>
                {(showSplitRow) && (
                  <Split hasGutter>
                    {title && (
                      <SplitItem>
                        <Content className={headingClassname} component="h1" ouiaId={`${ouiaId}-title`}>
                          {title}
                        </Content>
                      </SplitItem>
                    )}
                    {label && (
                      <SplitItem>
                        {label}
                      </SplitItem>
                    )}
                    <SplitItem isFilled />
                    {actionMenu && (
                      <SplitItem>
                        {actionMenu}
                      </SplitItem>
                    )}
                  </Split>
                )}
                {subtitle && (
                  <Content component="p" ouiaId={`${ouiaId}-subtitle`}>
                    {subtitle}
                  </Content>
                )}
                {linkProps && (
                  <Button variant={ButtonVariant.link} component="a" ouiaId={`${ouiaId}-link-button`} isInline icon={isExternal ? <ExternalLinkAltIcon className='pf-v6-u-ml-sm' /> : null} iconPosition="end" {...linkRestProps}>
                    {linkProps.label}
                  </Button>
                )}
              </FlexItem>
            )}
          </Flex>
        }
        {children}
      </PageSection>
    </>
  )
};

export default PageHeader;



================================================
FILE: packages/module/src/PageHeader/__snapshots__/PageHeader.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PageHeader component should render 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <section
        class="pf-v6-c-page__main-section"
      >
        <div
          class="pf-v6-l-flex"
        >
          <div
            class="pf-m-flex-1"
          >
            <div
              class="pf-v6-l-split pf-m-gutter"
            >
              <div
                class="pf-v6-l-split__item"
              >
                <h1
                  class="pf-v6-c-content--h1 pf-v6-u-mb-sm"
                  data-ouia-component-id="PageHeader-title"
                  data-ouia-component-type="PF6/Content"
                  data-ouia-safe="true"
                  data-pf-content="true"
                >
                  My title
                </h1>
              </div>
              <div
                class="pf-v6-l-split__item pf-m-fill"
              />
            </div>
            <p
              class="pf-v6-c-content--p"
              data-ouia-component-id="PageHeader-subtitle"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
            >
              This is a subtitle for your page header
            </p>
          </div>
        </div>
      </section>
    </div>
  </body>,
  "container": <div>
    <section
      class="pf-v6-c-page__main-section"
    >
      <div
        class="pf-v6-l-flex"
      >
        <div
          class="pf-m-flex-1"
        >
          <div
            class="pf-v6-l-split pf-m-gutter"
          >
            <div
              class="pf-v6-l-split__item"
            >
              <h1
                class="pf-v6-c-content--h1 pf-v6-u-mb-sm"
                data-ouia-component-id="PageHeader-title"
                data-ouia-component-type="PF6/Content"
                data-ouia-safe="true"
                data-pf-content="true"
              >
                My title
              </h1>
            </div>
            <div
              class="pf-v6-l-split__item pf-m-fill"
            />
          </div>
          <p
            class="pf-v6-c-content--p"
            data-ouia-component-id="PageHeader-subtitle"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            This is a subtitle for your page header
          </p>
        </div>
      </div>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/ResponsiveAction/index.ts
================================================
export { default } from './ResponsiveAction';
export * from './ResponsiveAction';



================================================
FILE: packages/module/src/ResponsiveAction/ResponsiveAction.tsx
================================================
import React from 'react';
import { ButtonProps } from '@patternfly/react-core';

/** extends ButtonProps */
export interface ResponsiveActionProps extends ButtonProps {
  /** Determines whether the action should be displayed next to dropdown if possible */
  isPinned?: boolean;
  /** Determines whether the action should always be displayed as pinned */
  isPersistent?: boolean;
  /** Key for the action */
  key?: string;
  /** Action label */
  children: React.ReactNode;
};

// This component is only used declaratively - rendering ishandled by ResponsiveActions
export const ResponsiveAction: React.FunctionComponent<ResponsiveActionProps> = (_props: ResponsiveActionProps) => <div/>;

export default ResponsiveAction;


================================================
FILE: packages/module/src/ResponsiveActions/index.ts
================================================
export { default } from './ResponsiveActions';
export * from './ResponsiveActions';



================================================
FILE: packages/module/src/ResponsiveActions/ResponsiveActions.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import ResponsiveActions from './ResponsiveActions';
import ResponsiveAction from '../ResponsiveAction';

describe('ResponsiveActions component', () => {
  describe('should render correctly', () => {

    test('ResponsiveActions', () => {
      const { container } = render(
        <ResponsiveActions breakpoint="lg">
          <ResponsiveAction isPersistent>Persistent action</ResponsiveAction>
          <ResponsiveAction isPinned variant='secondary'>Pinned action</ResponsiveAction>
          <ResponsiveAction>Overflow action</ResponsiveAction>
        </ResponsiveActions>);
      expect(container).toMatchSnapshot();
    });
  });
});


================================================
FILE: packages/module/src/ResponsiveActions/ResponsiveActions.tsx
================================================
import React, { useState } from 'react';
import { Button, Dropdown, DropdownList, MenuToggle, OverflowMenu, OverflowMenuContent, OverflowMenuControl, OverflowMenuDropdownItem, OverflowMenuGroup, OverflowMenuItem, OverflowMenuProps } from '@patternfly/react-core';
import { EllipsisVIcon } from '@patternfly/react-icons';
import { ResponsiveActionProps } from '../ResponsiveAction';

/** extends OverflowMenuProps */
export interface ResponsiveActionsProps extends Omit<OverflowMenuProps, 'ref' | 'breakpoint'> {
  /** Indicates breakpoint at which to switch between horizontal menu and vertical dropdown */
  breakpoint?: OverflowMenuProps['breakpoint'];
  /** Custom OUIA ID */
  ouiaId?: string;
  /** Child actions to be displayed */
  children: React.ReactNode;
}

export const ResponsiveActions: React.FunctionComponent<ResponsiveActionsProps> = ({ ouiaId = 'ResponsiveActions', breakpoint = 'lg', children, ...props }: ResponsiveActionsProps) => {
  const [ isOpen, setIsOpen ] = useState(false);

  // separate persistent, pinned and collapsed actions
  const persistentActions: React.ReactNode[] = [];
  const pinnedActions: React.ReactNode[] = [];
  const dropdownItems: React.ReactNode[] = [];

  React.Children.forEach(children, (child, index) => {
    if (React.isValidElement<ResponsiveActionProps>(child)) {
      const { isPersistent, isPinned, key = index, children, onClick, ...actionProps } = child.props;

      if (isPersistent || isPinned) {
        (isPersistent ? persistentActions : pinnedActions).push(
          <OverflowMenuItem key={key} isPersistent={isPersistent}>
            <Button onClick={onClick} ouiaId={`${ouiaId}-action-${key}`} {...actionProps}>
              {children}
            </Button>
          </OverflowMenuItem>
        );
      }
      if (!isPersistent) {
        dropdownItems.push(
          <OverflowMenuDropdownItem key={key} onClick={onClick} isShared={isPinned} ouiaId={`${ouiaId}-action-${key}`} isDisabled={actionProps.isDisabled}>
            {children}
          </OverflowMenuDropdownItem>
        );
      }
    }
  });

  return (
    <OverflowMenu breakpoint={breakpoint} data-ouia-component-id={`${ouiaId}-menu`} {...props}>
      {persistentActions.length > 0 ? (
        <OverflowMenuContent isPersistent data-ouia-component-id={`${ouiaId}-menu-persistent-content`}>
          <OverflowMenuGroup groupType="button" data-ouia-component-id={`${ouiaId}-menu-persistent-group`} isPersistent>
            {persistentActions}
          </OverflowMenuGroup>
        </OverflowMenuContent>
      ) : null}
      {pinnedActions.length > 0 ? (
        <OverflowMenuContent data-ouia-component-id={`${ouiaId}-menu-pinned-content`}>
          <OverflowMenuGroup groupType="button" data-ouia-component-id={`${ouiaId}-menu-pinned-group`}>
            {pinnedActions}
          </OverflowMenuGroup>
        </OverflowMenuContent>
      ) : null}
      {dropdownItems.length > 0 && (
        <OverflowMenuControl hasAdditionalOptions data-ouia-component-id={`${ouiaId}-menu-control`}>
          <Dropdown
            ouiaId={`${ouiaId}-menu-dropdown`}
            onSelect={() => setIsOpen(false)}
            toggle={(toggleRef) => (
              <MenuToggle
                ouiaId={`${ouiaId}-menu-dropdown-toggle`}
                ref={toggleRef}
                aria-label="Actions overflow menu"
                variant="plain"
                icon={<EllipsisVIcon />}
                onClick={() => setIsOpen(!isOpen)}
                isExpanded={isOpen}
              />
            )}
            isOpen={isOpen}
            onOpenChange={setIsOpen}
          >
            <DropdownList data-ouia-component-id={`${ouiaId}-menu-dropdown-list`}>
              {dropdownItems}
            </DropdownList>
          </Dropdown>
        </OverflowMenuControl>
      )}
    </OverflowMenu>
  );
};

export default ResponsiveActions;


================================================
FILE: packages/module/src/ResponsiveActions/__snapshots__/ResponsiveActions.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResponsiveActions component should render correctly ResponsiveActions 1`] = `
<div>
  <div
    class="pf-v6-c-overflow-menu"
    data-ouia-component-id="ResponsiveActions-menu"
  >
    <div
      class="pf-v6-c-overflow-menu__content"
    >
      <div
        class="pf-v6-c-overflow-menu__group pf-m-button-group"
        data-ouia-component-id="ResponsiveActions-menu-persistent-group"
      >
        <div
          class="pf-v6-c-overflow-menu__item"
        >
           
          <button
            aria-disabled="false"
            class="pf-v6-c-button pf-m-primary"
            data-ouia-component-id="ResponsiveActions-action-0"
            data-ouia-component-type="PF6/Button"
            data-ouia-safe="true"
            type="button"
          >
            <span
              class="pf-v6-c-button__text"
            >
              Persistent action
            </span>
          </button>
           
        </div>
      </div>
    </div>
    <div
      class="pf-v6-c-overflow-menu__content"
    >
      <div
        class="pf-v6-c-overflow-menu__group pf-m-button-group"
        data-ouia-component-id="ResponsiveActions-menu-pinned-group"
      >
        <div
          class="pf-v6-c-overflow-menu__item"
        >
           
          <button
            aria-disabled="false"
            class="pf-v6-c-button pf-m-secondary"
            data-ouia-component-id="ResponsiveActions-action-1"
            data-ouia-component-type="PF6/Button"
            data-ouia-safe="true"
            type="button"
          >
            <span
              class="pf-v6-c-button__text"
            >
              Pinned action
            </span>
          </button>
           
        </div>
      </div>
    </div>
    <div
      class="pf-v6-c-overflow-menu__control"
      data-ouia-component-id="ResponsiveActions-menu-control"
    >
       
      <button
        aria-expanded="false"
        aria-label="Actions overflow menu"
        class="pf-v6-c-menu-toggle pf-m-plain"
        data-ouia-component-id="ResponsiveActions-menu-dropdown-toggle"
        data-ouia-component-type="PF6/MenuToggle"
        data-ouia-safe="true"
        type="button"
      >
        <span
          class="pf-v6-c-menu-toggle__icon"
        >
          <svg
            aria-hidden="true"
            class="pf-v6-svg"
            fill="currentColor"
            height="1em"
            role="img"
            viewBox="0 0 192 512"
            width="1em"
          >
            <path
              d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
            />
          </svg>
        </span>
      </button>
       
    </div>
  </div>
</div>
`;



================================================
FILE: packages/module/src/ServiceCard/index.ts
================================================
export { default } from './ServiceCard'
export * from './ServiceCard'



================================================
FILE: packages/module/src/ServiceCard/ServiceCard.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import ServiceCard from './ServiceCard';

describe('ServiceCard component', () => {
  it('should render ServiceCard component', () => {
    expect(render(<ServiceCard 
      title='Example'
      subtitle='A basic example'
      description='This is a basic ServiceCard Example'
      icon='/'
      helperText=''
    />)).toMatchSnapshot();
  });
});


================================================
FILE: packages/module/src/ServiceCard/ServiceCard.tsx
================================================
import React from 'react';
import { Card, CardBody, CardFooter, CardHeader, CardProps, Content, ContentVariants, Flex, FlexItem } from '@patternfly/react-core';
import { HelperText } from '@patternfly/react-core/dist/dynamic/components/HelperText';
import { HelperTextItem } from '@patternfly/react-core/dist/dynamic/components/HelperText';
import { createUseStyles } from 'react-jss';
import clsx from 'clsx';

/** extends CardProps */
export interface ServiceCardProps extends CardProps {
  /** Service card title */
  title: string;
  /** Service card subtitle */
  subtitle?: React.ReactNode;
  /** Service card description */
  description: React.ReactNode;
  /** Service card icon */
  icon: React.ReactNode;
  /** Optional Service card helper text*/
  helperText?: React.ReactNode;
  /** Optional footer */
  footer?: React.ReactElement | null;
  /** Optional custom OUIA ID */
  ouiaId?: string | number;
  /** Optional flag modifying the card header layout */
  isStacked?: boolean;
  /** Optional flag indicating if the card height fills the available space */
  isFullHeight?: boolean;
}

const useStyles = createUseStyles({
  fullHeightCard: {
    height: '100%'
  },
  image: {
    marginRight: 'var(--pf-t--global--spacer--md)',
    width: 48
  }
});

const ServiceCard: React.FunctionComponent<ServiceCardProps> = ({
  title,
  subtitle,
  description,
  icon,
  helperText,
  footer = null,
  ouiaId='ServiceCard',
  isStacked = false,
  isFullHeight = false,
  ...props
}: ServiceCardProps) => {
  const classes = useStyles();

  return (
    <Card className={clsx({ [classes.fullHeightCard]: isFullHeight })} ouiaId={`${ouiaId}-card`} {...props}>
      <CardHeader>
        <Flex direction={{ default: isStacked ? 'column' : 'row' }} alignItems={{ default: isStacked ? 'alignItemsFlexStart' : 'alignItemsCenter' }}>
          <FlexItem className={classes.image}>
            {icon}
          </FlexItem>
          <FlexItem>
            <Content>
              <Content component={ContentVariants.h2} ouiaId={`${ouiaId}-title`}>{title}</Content>
              {subtitle ?? null}
            </Content>
          </FlexItem>
        </Flex>
      </CardHeader>
      <CardBody data-ouia-component-id={`${ouiaId}-description`}>{description}</CardBody>
      { footer || helperText ? (
        <CardFooter data-ouia-component-id={`${ouiaId}-footer`}>
          { helperText ?
            ( <HelperText data-ouia-component-id={`${ouiaId}-helper-text`}>
              <HelperTextItem className="pf-v6-u-mb-lg">
                {helperText}
              </HelperTextItem>
            </HelperText>) : null
          }
          { footer }
        </CardFooter>) : null}
    </Card>
  )
}

export default ServiceCard;



================================================
FILE: packages/module/src/ServiceCard/__snapshots__/ServiceCard.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ServiceCard component should render ServiceCard component 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="pf-v6-c-card"
        data-ouia-component-id="ServiceCard-card"
        data-ouia-component-type="PF6/Card"
        data-ouia-safe="true"
        id=""
      >
        <div
          class="pf-v6-c-card__header"
        >
          <div
            class="pf-v6-c-card__header-main"
          >
            <div
              class="pf-v6-l-flex pf-m-row pf-m-align-items-center"
            >
              <div
                class="image-0-2-2"
              >
                /
              </div>
              <div
                class=""
              >
                <div
                  class="pf-v6-c-content"
                  data-ouia-component-id="OUIA-Generated-Content-1"
                  data-ouia-component-type="PF6/Content"
                  data-ouia-safe="true"
                  data-pf-content="true"
                >
                  <h2
                    class="pf-v6-c-content--h2"
                    data-ouia-component-id="ServiceCard-title"
                    data-ouia-component-type="PF6/Content"
                    data-ouia-safe="true"
                    data-pf-content="true"
                  >
                    Example
                  </h2>
                  A basic example
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          class="pf-v6-c-card__body"
          data-ouia-component-id="ServiceCard-description"
        >
          This is a basic ServiceCard Example
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="pf-v6-c-card"
      data-ouia-component-id="ServiceCard-card"
      data-ouia-component-type="PF6/Card"
      data-ouia-safe="true"
      id=""
    >
      <div
        class="pf-v6-c-card__header"
      >
        <div
          class="pf-v6-c-card__header-main"
        >
          <div
            class="pf-v6-l-flex pf-m-row pf-m-align-items-center"
          >
            <div
              class="image-0-2-2"
            >
              /
            </div>
            <div
              class=""
            >
              <div
                class="pf-v6-c-content"
                data-ouia-component-id="OUIA-Generated-Content-1"
                data-ouia-component-type="PF6/Content"
                data-ouia-safe="true"
                data-pf-content="true"
              >
                <h2
                  class="pf-v6-c-content--h2"
                  data-ouia-component-id="ServiceCard-title"
                  data-ouia-component-type="PF6/Content"
                  data-ouia-safe="true"
                  data-pf-content="true"
                >
                  Example
                </h2>
                A basic example
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        class="pf-v6-c-card__body"
        data-ouia-component-id="ServiceCard-description"
      >
        This is a basic ServiceCard Example
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/Severity/index.ts
================================================
export { default } from './Severity';
export * from './Severity';



================================================
FILE: packages/module/src/Severity/Severity.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import Severity, { SeverityType } from './Severity';

describe('Severity component', () => {
  jest.spyOn(global.console, 'error');
  describe('should render correctly', () => {

    test('CriticalSeverity', () => {
      const { container } = render(<Severity severity={SeverityType.critical} label="Critical" />);
      expect(container).toMatchSnapshot();
    });
  
    test('HighSeverity', () => {
      const { container } = render(<Severity severity={SeverityType.important} label="Important" />);
      expect(container).toMatchSnapshot();
    });

    test('MediumSeverity', () => {
      const { container } = render(<Severity severity={SeverityType.moderate} label="Moderate" />);
      expect(container).toMatchSnapshot();
    });

    test('LowSeverity', () => {
      const { container } = render(<Severity severity={SeverityType.minor} label="Minor" />);
      expect(container).toMatchSnapshot();
    });

    test('LowSeverity', () => {
      const { container } = render(<Severity severity={SeverityType.none} label="None" />);
      expect(container).toMatchSnapshot();
    });
    test('UndefinedSeverity, default', () => {
      const { container } = render(<Severity severity={'' as SeverityType} label={''} />);
      expect(container).toMatchSnapshot();
    });
  });

  describe('API', () => {
    test('should hide label', () => {
      const { container } = render(<Severity severity={SeverityType.important} label="important" labelHidden />);
      expect(container).toMatchSnapshot();
    });
  });
});


================================================
FILE: packages/module/src/Severity/Severity.tsx
================================================
import React, { useMemo } from 'react';
import {
  SeverityCriticalIcon,
  SeverityImportantIcon,
  SeverityMinorIcon,
  SeverityModerateIcon,
  SeverityNoneIcon,
  SeverityUndefinedIcon
} from '@patternfly/react-icons';
import { Flex, FlexItem } from '@patternfly/react-core';

const severityLevels = (severity: SeverityType) => {
  switch (severity) {
  case 'critical':
    return <SeverityCriticalIcon color='var(--pf-t--global--icon--color--severity--critical--default)'/>;
  case 'important':
    return <SeverityImportantIcon color='var(--pf-t--global--icon--color--severity--important--default)' />;
  case 'minor':
    return <SeverityMinorIcon color='var(--pf-t--global--icon--color--severity--minor--default)' />;
  case 'moderate':
    return <SeverityModerateIcon color='var(--pf-t--global--icon--color--severity--moderate--default)' />;
  case 'none':
    return <SeverityNoneIcon color='var(--pf-t--global--icon--color--severity--none--default)' />;
  default:
    return <SeverityUndefinedIcon color='var(--pf-t--global--icon--color--severity--undefined--default)' />;
  }
};

export const SeverityType = {
  critical: 'critical',
  important: 'important',
  minor: 'minor',
  moderate: 'moderate',
  none: 'none',
  undefined: 'undefined',  
} as const;

export type SeverityType = (typeof SeverityType)[keyof typeof SeverityType];

export interface SeverityProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement> {
  /** Determines a variant of displayed severity */
  severity: SeverityType;
  /** Label displayed next to the severity */
  label: React.ReactNode;
  /** Option to hide the label */
  labelHidden?: boolean;
  /** Custom className */
  className?: string;
  /** Custom OUIA ID */
  ouiaId?: string | number;
}

export const Severity: React.FunctionComponent<SeverityProps> = ({
  severity,
  label,
  labelHidden,
  ouiaId = 'Severity-icon',
  ...props
}: SeverityProps) => {


  const title = { title: `${severity} ${label}` };

  const severityVariant = useMemo(() => severityLevels(severity), [ severity ]);

  return (
    <React.Fragment>
      <Flex spaceItems={{ default: 'spaceItemsSm' }}>
        <FlexItem>
          {/* eslint-disable-next-line react/no-unknown-property */}
          <span  {...title} {...props} widget-type="Severity" widget-id={label} data-ouia-component-id={ouiaId}>
            {severityVariant}
          </span>
        </FlexItem>
        <FlexItem>
          {!labelHidden && label}
        </FlexItem>
      </Flex>
    </React.Fragment>
  );
};

export default Severity;



================================================
FILE: packages/module/src/Severity/__snapshots__/Severity.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Severity component API should hide label 1`] = `
<div>
  <div
    class="pf-v6-l-flex pf-m-space-items-sm"
  >
    <div
      class=""
    >
      <span
        data-ouia-component-id="Severity-icon"
        title="important important"
        widget-id="important"
        widget-type="Severity"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          color="var(--pf-t--global--icon--color--severity--important--default)"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 1024 1024"
          width="1em"
        >
          <path
            d="M0,587.2c0,23.2,10.8,40.4,30.7,51.6,20.8,11.7,42.1,12.5,63.1-.5l378.4-235.4c26.5-16.7,51.7-16.4,78.7.5,123.4,77.2,247.5,153.4,371,230.5,22.9,14.3,44.9,18.7,69.3,5.3,24.5-13.5,32.5-35,32.3-61.4-.4-49.4,0-41.9,0-91.3s-.3-99.9,0-149.8c.2-27.6-11.5-47.8-35.1-61.8C841.4,187.2,694.4,99.5,547.5,11.7c-24.5-14.6-48.1-14.4-72.4.2C327.3,100.3,179.4,188.5,31.7,276.8c-21.1,12.6-31.7,31.5-31.7,56.1v254.3ZM1023.8,857.8c0,1.9,0-.6.2-10.3,0-2.1,0-4.1-.2-6.1v-35.1c0-29.9,0,8.8,0,33.8-1.8-23.9-13.4-41.7-34.9-54.4-147-87.7-294-175.4-441-263.3-24.5-14.6-48.1-14.4-72.4.2-147.7,88.4-295.6,176.6-443.4,265-21.1,12.6-31.7,31.4-31.7,56.1v120.3c0,23.2,10.8,40.4,30.7,51.6,20.8,11.7,42.1,12.5,63.1-.5l378.4-235.4c26.5-16.7,51.7-16.4,78.7.5,123.4,77.2,247.5,153.4,371,230.5,22.9,14.3,44.9,18.7,69.3,5.3,24.5-13.5,32.5-35,32.3-61.4-.2-32.3-.2-64.6-.2-96.9h.2Z"
          />
        </svg>
      </span>
    </div>
    <div
      class=""
    />
  </div>
</div>
`;

exports[`Severity component should render correctly CriticalSeverity 1`] = `
<div>
  <div
    class="pf-v6-l-flex pf-m-space-items-sm"
  >
    <div
      class=""
    >
      <span
        data-ouia-component-id="Severity-icon"
        title="critical Critical"
        widget-id="Critical"
        widget-type="Severity"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          color="var(--pf-t--global--icon--color--severity--critical--default)"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 1024 1024"
          width="1em"
        >
          <path
            d="M0,963.4c0,23.2,10.8,40.4,30.7,51.6,20.8,11.7,42.1,12.5,63.1-.5l378.6-235.6c26.5-16.7,51.7-16.4,78.7.5,123.5,77.3,247.6,153.5,371.2,230.7,22.9,14.3,44.9,18.7,69.3,5.3,24.5-13.5,32.5-35,32.3-61.5-.4-49.4,0-41.9,0-91.4s-.3-476.6,0-526.5c.2-27.6-11.5-47.8-35.1-61.9C841.8,186.5,694.7,98.6,547.8,10.8c-24.5-14.6-48.1-14.4-72.4.2C327.5,99.4,179.5,187.8,31.7,276.2,10.6,288.8,0,307.7,0,332.3v631.1H0Z"
          />
        </svg>
      </span>
    </div>
    <div
      class=""
    >
      Critical
    </div>
  </div>
</div>
`;

exports[`Severity component should render correctly HighSeverity 1`] = `
<div>
  <div
    class="pf-v6-l-flex pf-m-space-items-sm"
  >
    <div
      class=""
    >
      <span
        data-ouia-component-id="Severity-icon"
        title="important Important"
        widget-id="Important"
        widget-type="Severity"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          color="var(--pf-t--global--icon--color--severity--important--default)"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 1024 1024"
          width="1em"
        >
          <path
            d="M0,587.2c0,23.2,10.8,40.4,30.7,51.6,20.8,11.7,42.1,12.5,63.1-.5l378.4-235.4c26.5-16.7,51.7-16.4,78.7.5,123.4,77.2,247.5,153.4,371,230.5,22.9,14.3,44.9,18.7,69.3,5.3,24.5-13.5,32.5-35,32.3-61.4-.4-49.4,0-41.9,0-91.3s-.3-99.9,0-149.8c.2-27.6-11.5-47.8-35.1-61.8C841.4,187.2,694.4,99.5,547.5,11.7c-24.5-14.6-48.1-14.4-72.4.2C327.3,100.3,179.4,188.5,31.7,276.8c-21.1,12.6-31.7,31.5-31.7,56.1v254.3ZM1023.8,857.8c0,1.9,0-.6.2-10.3,0-2.1,0-4.1-.2-6.1v-35.1c0-29.9,0,8.8,0,33.8-1.8-23.9-13.4-41.7-34.9-54.4-147-87.7-294-175.4-441-263.3-24.5-14.6-48.1-14.4-72.4.2-147.7,88.4-295.6,176.6-443.4,265-21.1,12.6-31.7,31.4-31.7,56.1v120.3c0,23.2,10.8,40.4,30.7,51.6,20.8,11.7,42.1,12.5,63.1-.5l378.4-235.4c26.5-16.7,51.7-16.4,78.7.5,123.4,77.2,247.5,153.4,371,230.5,22.9,14.3,44.9,18.7,69.3,5.3,24.5-13.5,32.5-35,32.3-61.4-.2-32.3-.2-64.6-.2-96.9h.2Z"
          />
        </svg>
      </span>
    </div>
    <div
      class=""
    >
      Important
    </div>
  </div>
</div>
`;

exports[`Severity component should render correctly LowSeverity 1`] = `
<div>
  <div
    class="pf-v6-l-flex pf-m-space-items-sm"
  >
    <div
      class=""
    >
      <span
        data-ouia-component-id="Severity-icon"
        title="minor Minor"
        widget-id="Minor"
        widget-type="Severity"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          color="var(--pf-t--global--icon--color--severity--minor--default)"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 1024 1024"
          width="1em"
        >
          <path
            d="M1023.9,538.3c0-49.4-.3-41.9,0-91.3.2-26.4-7.8-48-32.3-61.4-24.4-13.4-46.5-9-69.3,5.3-123.5,77.1-247.6,153.3-371,230.5-27,16.9-52.3,17.2-78.7.5L94.3,386.5c-20.9-13-42.2-12.2-63.1-.5-19.9,11.1-30.7,28.4-30.7,51.6v254.3c0,24.6,10.6,43.5,31.7,56.1,147.8,88.4,295.6,176.5,443.4,265,24.4,14.6,48,14.8,72.4.2,146.9-87.9,293.9-175.6,441-263.3,23.6-14.1,35.3-34.2,35.1-61.8-.4-49.9,0-99.9,0-149.8h0ZM1024.4,177.2c0-9.7,0-12.2-.2-10.3,0-32.3,0-64.6.2-96.9.2-26.4-7.8-48-32.3-61.4-24.4-13.4-46.5-9-69.3,5.3-123.5,77.1-247.6,153.3-371,230.5-27,16.9-52.3,17.2-78.7.5L94.7,9.7c-20.9-13-42.2-12.2-63.1-.5C11.7,20.3.9,37.5.9,60.7v120.3c0,24.6,10.6,43.5,31.7,56.1,147.8,88.4,295.6,176.5,443.4,265,24.4,14.6,48,14.8,72.4.2,146.9-87.9,293.9-175.6,441-263.3,21.4-12.8,33.1-30.6,34.9-54.4,0,25.1,0,63.7,0,33.8v-35.1c0-2,.2-4,.2-6.1h-.2Z"
          />
        </svg>
      </span>
    </div>
    <div
      class=""
    >
      Minor
    </div>
  </div>
</div>
`;

exports[`Severity component should render correctly LowSeverity 2`] = `
<div>
  <div
    class="pf-v6-l-flex pf-m-space-items-sm"
  >
    <div
      class=""
    >
      <span
        data-ouia-component-id="Severity-icon"
        title="none None"
        widget-id="None"
        widget-type="Severity"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          color="var(--pf-t--global--icon--color--severity--none--default)"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 1024 1024"
          width="1em"
        >
          <path
            d="M64,128h896c35.3,0,64,28.7,64,64v64c0,35.3-28.7,64-64,64H64c-35.3,0-64-28.7-64-64v-64c0-35.3,28.7-64,64-64ZM64,448h896c35.3,0,64,28.7,64,64v256c0,35.3-28.7,64-64,64H64c-35.3,0-64-28.7-64-64v-256c0-35.3,28.7-64,64-64Z"
          />
        </svg>
      </span>
    </div>
    <div
      class=""
    >
      None
    </div>
  </div>
</div>
`;

exports[`Severity component should render correctly MediumSeverity 1`] = `
<div>
  <div
    class="pf-v6-l-flex pf-m-space-items-sm"
  >
    <div
      class=""
    >
      <span
        data-ouia-component-id="Severity-icon"
        title="moderate Moderate"
        widget-id="Moderate"
        widget-type="Severity"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          color="var(--pf-t--global--icon--color--severity--moderate--default)"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 1024 1024"
          width="1em"
        >
          <path
            d="M.8,403.4c.2,25.2,0,28.2-.1,39.9,0-10.5,0-23.3.1-39.9ZM1023.2,389.4c0,1.7,0,3.4,0,5.2v8.7-13.9h0ZM1023.5,475h0v-32.2c0,6.4.2,15.3.2,32.2h-.2ZM1023.9,577.1c0,31.9-31.9,62.8-63.9,62.8H63.9C31.9,639.9,0,609,0,577.1c.4-62,.1-168.9.2-182.1,1.2-24.9,12.9-43.4,35-56.5,147.1-87.4,265.8-153.3,412.7-240.8,13.6-6.8,27.2-11.4,40.8-13.8,15.3-2.8,31.1-2.8,46.4,0,13.6,2.5,27.2,7.1,40.8,13.8,147,87.5,265.7,153.4,412.7,240.8,22.5,13.2,34.3,32.4,35,57.7,0,4.4-.2,131.6.2,180.8h0ZM.5,475c0-16.4,0-25.3.1-31.7v31.7h-.1ZM.7,394.6c0-1.8,0-3.5.1-5.2v13.8-8.6h-.1ZM1023.3,442.7c0-11.2-.3-14.6,0-39.3,0,16.3,0,29,0,39.3ZM63.9,752.1h896.1c35.3,0,64,28.3,64,63.3v63.3c0,34.9-28.6,63.3-64,63.3H63.9c-35.3.1-63.9-28.2-63.9-63.2v-63.3c0-34.9,28.6-63.3,64-63.3h0Z"
          />
        </svg>
      </span>
    </div>
    <div
      class=""
    >
      Moderate
    </div>
  </div>
</div>
`;

exports[`Severity component should render correctly UndefinedSeverity, default 1`] = `
<div>
  <div
    class="pf-v6-l-flex pf-m-space-items-sm"
  >
    <div
      class=""
    >
      <span
        data-ouia-component-id="Severity-icon"
        title=" "
        widget-id=""
        widget-type="Severity"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          color="var(--pf-t--global--icon--color--severity--undefined--default)"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 1024 1024"
          width="1em"
        >
          <path
            d="M640,384h320c35.3,0,64,28.7,64,64v64c0,35.3-28.7,64-64,64h-320c-35.3,0-64-28.7-64-64v-64c0-35.3,28.7-64,64-64ZM64,384h320c35.3,0,64,28.7,64,64v64c0,35.3-28.7,64-64,64H64c-35.3,0-64-28.7-64-64v-64c0-35.3,28.7-64,64-64Z"
          />
        </svg>
      </span>
    </div>
    <div
      class=""
    />
  </div>
</div>
`;



================================================
FILE: packages/module/src/Shortcut/index.ts
================================================
export { default } from './Shortcut';
export * from './Shortcut';



================================================
FILE: packages/module/src/Shortcut/Shortcut.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import Shortcut from './Shortcut';

describe('Shortcut component', () => {
  it('should render correctly', () => {
    expect(render(<Shortcut description='Shortcut description' keys={[ 'cmd', 'shift' ]} click/>)).toMatchSnapshot();
  });
});



================================================
FILE: packages/module/src/Shortcut/Shortcut.tsx
================================================
import * as React from 'react';
import { MouseIcon } from '@patternfly/react-icons';
import { Label } from '@patternfly/react-core';
import { createUseStyles } from 'react-jss';
import clsx from 'clsx';

export interface ShortcutProps {
  /** Array of shortcut keys */
  keys: string[];
  /** Shortcut description */
  description?: React.ReactNode;
  /** Indicates whether symbols should be displayed for certain keys */
  showSymbols?: boolean;
  /** Show hover in the shortcut */
  hover?: boolean;
  /** Show click in the shortcut */
  click?: boolean;
  /** Show right click in the shortcut */
  rightClick?: boolean;
  /** Show drag in the shortcut */
  drag?: boolean;
  /** Show drag and drop in the shortcut */
  dragAndDrop?: boolean;
  /** Shortcut className */
  className?: string;
  /** Custom OUIA ID */
  ouiaId?: string | number;
}

const symbols = {
  'shift': '⇧',
  'opt': '⌥',
  'cmd': '⌘',
  'enter': '↵',
  'ctrl': '^',
  'caps lock': '⇪',
  'tab': '↹',
  'win': '⊞',
  'backspace': '⌫'
}

const useStyles = createUseStyles({
  shortcut: {
    marginRight: 'var(--pf-t--global--spacer--400)'
  }
})

const Shortcut: React.FunctionComponent<ShortcutProps> = ({
  keys = [],
  description = null,
  showSymbols = true,
  hover,
  click,
  drag, 
  rightClick, 
  dragAndDrop,
  className,
  ouiaId = 'Shortcut',
  ...props
}: ShortcutProps) => {
  const classes = useStyles();
  const badges = [
    ...(hover ? [ 
      <Label variant="outline" key="hover" data-test-id="hover">
        <MouseIcon /> Hover
      </Label>
    ] : []),
    ...keys.map((key) => {
      const trimmedKey = key.trim().toLowerCase();
      return(
        <Label variant="outline" key={key} data-test-id={`${key}-key`}>
          {showSymbols && symbols[trimmedKey] ? `${symbols[trimmedKey]} ` : '' }
          {key.length === 1 ? key.toUpperCase() : key[0].toUpperCase() + key.slice(1).toLowerCase()}
        </Label>
      )}),
    ...(click ? [ 
      <Label variant="outline" key="click" data-test-id="click">
        <MouseIcon /> Click
      </Label>
    ] : []),
    ...(rightClick ? [ 
      <Label variant="outline" key="right-click" data-test-id="right-click">
        <MouseIcon /> Right click
      </Label>
    ] : []),
    ...(drag ? [ 
      <Label variant="outline" key="drag" data-test-id="drag">
        <MouseIcon /> Drag
      </Label>
    ] : []),
    ...(dragAndDrop ? [ 
      <Label variant="outline" key="drag-and-drop" data-test-id="drag-and-drop">
        <MouseIcon /> Drag + Drop
      </Label>
    ] : [])
  ]

  return (
    <>
      <span className={clsx({ [classes.shortcut]: description, className })} data-ouia-component-id={ouiaId} {...props}>
        {badges.length > 0 && badges.reduce((prev, curr, idx) => (
          <span key={idx}>{[ prev, ' + ', curr ]}</span>
        ))}
      </span>
      {description}
    </>
  );}

export default Shortcut;


================================================
FILE: packages/module/src/Shortcut/__snapshots__/Shortcut.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Shortcut component should render correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="shortcut-0-2-1"
        data-ouia-component-id="Shortcut"
      >
        <span>
          <span>
            <span
              class="pf-v6-c-label pf-m-outline"
              data-test-id="cmd-key"
            >
              <span
                class="pf-v6-c-label__content"
              >
                <span
                  class="pf-v6-c-label__text"
                >
                  ⌘ 
                  Cmd
                </span>
              </span>
            </span>
             + 
            <span
              class="pf-v6-c-label pf-m-outline"
              data-test-id="shift-key"
            >
              <span
                class="pf-v6-c-label__content"
              >
                <span
                  class="pf-v6-c-label__text"
                >
                  ⇧ 
                  Shift
                </span>
              </span>
            </span>
          </span>
           + 
          <span
            class="pf-v6-c-label pf-m-outline"
            data-test-id="click"
          >
            <span
              class="pf-v6-c-label__content"
            >
              <span
                class="pf-v6-c-label__text"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 384 512"
                  width="1em"
                >
                  <path
                    d="M0 352a160 160 0 0 0 160 160h64a160 160 0 0 0 160-160V224H0zM176 0h-16A160 160 0 0 0 0 160v32h176zm48 0h-16v192h176v-32A160 160 0 0 0 224 0z"
                  />
                </svg>
                 Click
              </span>
            </span>
          </span>
        </span>
      </span>
      Shortcut description
    </div>
  </body>,
  "container": <div>
    <span
      class="shortcut-0-2-1"
      data-ouia-component-id="Shortcut"
    >
      <span>
        <span>
          <span
            class="pf-v6-c-label pf-m-outline"
            data-test-id="cmd-key"
          >
            <span
              class="pf-v6-c-label__content"
            >
              <span
                class="pf-v6-c-label__text"
              >
                ⌘ 
                Cmd
              </span>
            </span>
          </span>
           + 
          <span
            class="pf-v6-c-label pf-m-outline"
            data-test-id="shift-key"
          >
            <span
              class="pf-v6-c-label__content"
            >
              <span
                class="pf-v6-c-label__text"
              >
                ⇧ 
                Shift
              </span>
            </span>
          </span>
        </span>
         + 
        <span
          class="pf-v6-c-label pf-m-outline"
          data-test-id="click"
        >
          <span
            class="pf-v6-c-label__content"
          >
            <span
              class="pf-v6-c-label__text"
            >
              <svg
                aria-hidden="true"
                class="pf-v6-svg"
                fill="currentColor"
                height="1em"
                role="img"
                viewBox="0 0 384 512"
                width="1em"
              >
                <path
                  d="M0 352a160 160 0 0 0 160 160h64a160 160 0 0 0 160-160V224H0zM176 0h-16A160 160 0 0 0 0 160v32h176zm48 0h-16v192h176v-32A160 160 0 0 0 224 0z"
                />
              </svg>
               Click
            </span>
          </span>
        </span>
      </span>
    </span>
    Shortcut description
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/ShortcutGrid/index.ts
================================================
export { default } from './ShortcutGrid';
export * from './ShortcutGrid';



================================================
FILE: packages/module/src/ShortcutGrid/ShortcutGrid.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import ShortcutGrid from './ShortcutGrid';

describe('ShortcutGrid component', () => {
  it('should render correctly', () => {
    expect(render(
      <ShortcutGrid 
        shortcuts={[ 
          { description: 'Open in a new tab', keys: [ 'cmd', 'shift', 't' ] }, 
          { description: 'Open new page', keys: [ 'opt', 'n' ] },
          { description: 'Move object', keys: [ 'ctrl' ], drag: true },  
        ]}
      />
    )).toMatchSnapshot();
  });
});



================================================
FILE: packages/module/src/ShortcutGrid/ShortcutGrid.tsx
================================================
import * as React from 'react';
import { createUseStyles } from 'react-jss';
import Shortcut, { ShortcutProps } from '../Shortcut/Shortcut';
import { Grid, GridItem, GridItemProps, GridProps } from '@patternfly/react-core';

/** extends GridProps */
export interface ShortcutGridProps extends GridProps {
  /** Array of shortcuts to be displayed in the grid */
  shortcuts: ShortcutProps[];
  /** Shortcut GridItem props */
  gridItemProps?: GridItemProps;
  /** Custom OUIA ID */
  ouiaId?: string | number;
}

const useStyles = createUseStyles({
  shortcutGridItem: {
    textAlign: 'right',
    marginRight: 'var(--pf-t--global--spacer--md)'
  }
})

const ShortcutGrid: React.FunctionComponent<ShortcutGridProps> = ({ shortcuts, gridItemProps, ouiaId = 'ShortcutGrid', ...props }: ShortcutGridProps) => {
  const classes = useStyles();
  return (
    <Grid span={6} hasGutter key="grid" data-ouia-component-id={ouiaId} {...props}>
      {shortcuts.map((shortcut, index) => {
        const { description, ...props } = shortcut;
        return(
          <React.Fragment key={index}>
            <GridItem className={classes.shortcutGridItem} data-ouia-component-id={`${ouiaId}-item-${index}`} {...gridItemProps}>
              <Shortcut {...props}/>
            </GridItem>
            <GridItem data-ouia-component-id={`${ouiaId}-item-description-${index}`}>{description}</GridItem>
          </React.Fragment>
        )})}
    </Grid>)
}

export default ShortcutGrid;


================================================
FILE: packages/module/src/ShortcutGrid/__snapshots__/ShortcutGrid.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ShortcutGrid component should render correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="pf-v6-l-grid pf-m-all-6-col pf-m-gutter"
        data-ouia-component-id="ShortcutGrid"
      >
        <div
          class="pf-v6-l-grid__item shortcutGridItem-0-2-1"
          data-ouia-component-id="ShortcutGrid-item-0"
        >
          <span
            class=""
            data-ouia-component-id="Shortcut"
          >
            <span>
              <span>
                <span
                  class="pf-v6-c-label pf-m-outline"
                  data-test-id="cmd-key"
                >
                  <span
                    class="pf-v6-c-label__content"
                  >
                    <span
                      class="pf-v6-c-label__text"
                    >
                      ⌘ 
                      Cmd
                    </span>
                  </span>
                </span>
                 + 
                <span
                  class="pf-v6-c-label pf-m-outline"
                  data-test-id="shift-key"
                >
                  <span
                    class="pf-v6-c-label__content"
                  >
                    <span
                      class="pf-v6-c-label__text"
                    >
                      ⇧ 
                      Shift
                    </span>
                  </span>
                </span>
              </span>
               + 
              <span
                class="pf-v6-c-label pf-m-outline"
                data-test-id="t-key"
              >
                <span
                  class="pf-v6-c-label__content"
                >
                  <span
                    class="pf-v6-c-label__text"
                  >
                    T
                  </span>
                </span>
              </span>
            </span>
          </span>
        </div>
        <div
          class="pf-v6-l-grid__item"
          data-ouia-component-id="ShortcutGrid-item-description-0"
        >
          Open in a new tab
        </div>
        <div
          class="pf-v6-l-grid__item shortcutGridItem-0-2-1"
          data-ouia-component-id="ShortcutGrid-item-1"
        >
          <span
            class=""
            data-ouia-component-id="Shortcut"
          >
            <span>
              <span
                class="pf-v6-c-label pf-m-outline"
                data-test-id="opt-key"
              >
                <span
                  class="pf-v6-c-label__content"
                >
                  <span
                    class="pf-v6-c-label__text"
                  >
                    ⌥ 
                    Opt
                  </span>
                </span>
              </span>
               + 
              <span
                class="pf-v6-c-label pf-m-outline"
                data-test-id="n-key"
              >
                <span
                  class="pf-v6-c-label__content"
                >
                  <span
                    class="pf-v6-c-label__text"
                  >
                    N
                  </span>
                </span>
              </span>
            </span>
          </span>
        </div>
        <div
          class="pf-v6-l-grid__item"
          data-ouia-component-id="ShortcutGrid-item-description-1"
        >
          Open new page
        </div>
        <div
          class="pf-v6-l-grid__item shortcutGridItem-0-2-1"
          data-ouia-component-id="ShortcutGrid-item-2"
        >
          <span
            class=""
            data-ouia-component-id="Shortcut"
          >
            <span>
              <span
                class="pf-v6-c-label pf-m-outline"
                data-test-id="ctrl-key"
              >
                <span
                  class="pf-v6-c-label__content"
                >
                  <span
                    class="pf-v6-c-label__text"
                  >
                    ^ 
                    Ctrl
                  </span>
                </span>
              </span>
               + 
              <span
                class="pf-v6-c-label pf-m-outline"
                data-test-id="drag"
              >
                <span
                  class="pf-v6-c-label__content"
                >
                  <span
                    class="pf-v6-c-label__text"
                  >
                    <svg
                      aria-hidden="true"
                      class="pf-v6-svg"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      viewBox="0 0 384 512"
                      width="1em"
                    >
                      <path
                        d="M0 352a160 160 0 0 0 160 160h64a160 160 0 0 0 160-160V224H0zM176 0h-16A160 160 0 0 0 0 160v32h176zm48 0h-16v192h176v-32A160 160 0 0 0 224 0z"
                      />
                    </svg>
                     Drag
                  </span>
                </span>
              </span>
            </span>
          </span>
        </div>
        <div
          class="pf-v6-l-grid__item"
          data-ouia-component-id="ShortcutGrid-item-description-2"
        >
          Move object
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="pf-v6-l-grid pf-m-all-6-col pf-m-gutter"
      data-ouia-component-id="ShortcutGrid"
    >
      <div
        class="pf-v6-l-grid__item shortcutGridItem-0-2-1"
        data-ouia-component-id="ShortcutGrid-item-0"
      >
        <span
          class=""
          data-ouia-component-id="Shortcut"
        >
          <span>
            <span>
              <span
                class="pf-v6-c-label pf-m-outline"
                data-test-id="cmd-key"
              >
                <span
                  class="pf-v6-c-label__content"
                >
                  <span
                    class="pf-v6-c-label__text"
                  >
                    ⌘ 
                    Cmd
                  </span>
                </span>
              </span>
               + 
              <span
                class="pf-v6-c-label pf-m-outline"
                data-test-id="shift-key"
              >
                <span
                  class="pf-v6-c-label__content"
                >
                  <span
                    class="pf-v6-c-label__text"
                  >
                    ⇧ 
                    Shift
                  </span>
                </span>
              </span>
            </span>
             + 
            <span
              class="pf-v6-c-label pf-m-outline"
              data-test-id="t-key"
            >
              <span
                class="pf-v6-c-label__content"
              >
                <span
                  class="pf-v6-c-label__text"
                >
                  T
                </span>
              </span>
            </span>
          </span>
        </span>
      </div>
      <div
        class="pf-v6-l-grid__item"
        data-ouia-component-id="ShortcutGrid-item-description-0"
      >
        Open in a new tab
      </div>
      <div
        class="pf-v6-l-grid__item shortcutGridItem-0-2-1"
        data-ouia-component-id="ShortcutGrid-item-1"
      >
        <span
          class=""
          data-ouia-component-id="Shortcut"
        >
          <span>
            <span
              class="pf-v6-c-label pf-m-outline"
              data-test-id="opt-key"
            >
              <span
                class="pf-v6-c-label__content"
              >
                <span
                  class="pf-v6-c-label__text"
                >
                  ⌥ 
                  Opt
                </span>
              </span>
            </span>
             + 
            <span
              class="pf-v6-c-label pf-m-outline"
              data-test-id="n-key"
            >
              <span
                class="pf-v6-c-label__content"
              >
                <span
                  class="pf-v6-c-label__text"
                >
                  N
                </span>
              </span>
            </span>
          </span>
        </span>
      </div>
      <div
        class="pf-v6-l-grid__item"
        data-ouia-component-id="ShortcutGrid-item-description-1"
      >
        Open new page
      </div>
      <div
        class="pf-v6-l-grid__item shortcutGridItem-0-2-1"
        data-ouia-component-id="ShortcutGrid-item-2"
      >
        <span
          class=""
          data-ouia-component-id="Shortcut"
        >
          <span>
            <span
              class="pf-v6-c-label pf-m-outline"
              data-test-id="ctrl-key"
            >
              <span
                class="pf-v6-c-label__content"
              >
                <span
                  class="pf-v6-c-label__text"
                >
                  ^ 
                  Ctrl
                </span>
              </span>
            </span>
             + 
            <span
              class="pf-v6-c-label pf-m-outline"
              data-test-id="drag"
            >
              <span
                class="pf-v6-c-label__content"
              >
                <span
                  class="pf-v6-c-label__text"
                >
                  <svg
                    aria-hidden="true"
                    class="pf-v6-svg"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    viewBox="0 0 384 512"
                    width="1em"
                  >
                    <path
                      d="M0 352a160 160 0 0 0 160 160h64a160 160 0 0 0 160-160V224H0zM176 0h-16A160 160 0 0 0 0 160v32h176zm48 0h-16v192h176v-32A160 160 0 0 0 224 0z"
                    />
                  </svg>
                   Drag
                </span>
              </span>
            </span>
          </span>
        </span>
      </div>
      <div
        class="pf-v6-l-grid__item"
        data-ouia-component-id="ShortcutGrid-item-description-2"
      >
        Move object
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/SkeletonTable/index.ts
================================================
export { default } from './SkeletonTable';
export * from './SkeletonTable';



================================================
FILE: packages/module/src/SkeletonTable/SkeletonTable.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import SkeletonTable from './SkeletonTable';

describe('SkeletonTable component', () => {
  it('should render correctly', () => {
    expect(render(<SkeletonTable columns={[ 'First', 'Second' ]}/>)).toMatchSnapshot();
  });

  it('should render correctly with rows', () => {
    expect(render(<SkeletonTable columns={[ 'First', 'Second' ]} rows={10} />)).toMatchSnapshot();
  });
});



================================================
FILE: packages/module/src/SkeletonTable/SkeletonTable.tsx
================================================
import React, { ReactNode } from 'react';
import {
  Caption,
  Table,
  TableProps,
  TableVariant,
  RowSelectVariant,
  ThProps
} from '@patternfly/react-table';
import SkeletonTableBody, { SkeletonTableBodyProps } from '../SkeletonTableBody';
import SkeletonTableHead, { SkeletonTableHeadProps } from '../SkeletonTableHead';

/** extends TableProps */
export interface SkeletonTableProps extends Omit<TableProps, 'ref'>, Omit<SkeletonTableBodyProps, 'columnsCount'>, SkeletonTableHeadProps {
  /** Indicates the table variant */
  variant?: TableVariant;
  /** Flag indicating if the table should have borders */
  borders?: boolean;
  /** The number of rows the skeleton table should contain */
  rowsCount?: number;
  /** Any captions that should be added to the table */
  caption?: React.ReactNode;
  /** Custom OUIA ID */
  ouiaId?: string | number;
  /** Flag indicating if the table is selectable */
  isSelectable?: boolean;
  /** Flag indicating if the table is expandable */
  isExpandable?: boolean;
  /** Determines if the row selection variant (radio/checkbox) */
  selectVariant?: RowSelectVariant;
  /** Custom columns for the table */
  columns?: (ReactNode | { cell: ReactNode; props?: ThProps })[];
  /** Number of columns in the table */
  columnsCount?: number;
}

const SkeletonTable: React.FunctionComponent<SkeletonTableProps> = ({
  variant,
  borders = true,
  rowsCount = 5,
  caption,
  ouiaId = 'SkeletonTable',
  isSelectable,
  isExpandable,
  selectVariant = RowSelectVariant.checkbox,
  columns,
  columnsCount,
  isTreeTable,
  ...rest
}: SkeletonTableProps) => {
  const rowCellsCount = Array.isArray(columns) ? columns.length : columnsCount;

  return (
    <Table aria-label="Loading" variant={variant} borders={borders} ouiaId={ouiaId} {...rest}>
      {caption && <Caption>{caption}</Caption>}
      <SkeletonTableHead 
        ouiaId={ouiaId}
        isSelectable={isSelectable}
        isExpandable={isExpandable}
        columnsCount={columnsCount}
        columns={columns}
        isTreeTable={isTreeTable}
      />
      <SkeletonTableBody 
        columnsCount={rowCellsCount ?? 0}
        rowsCount={rowsCount}
        isSelectable={isSelectable}
        isExpandable={isExpandable}
        selectVariant={selectVariant}
        ouiaId={ouiaId}
      />
    </Table>
  );
};

export default SkeletonTable;



================================================
FILE: packages/module/src/SkeletonTable/__snapshots__/SkeletonTable.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SkeletonTable component should render correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <table
        aria-label="Loading"
        class="pf-v6-c-table pf-m-grid-md"
        data-ouia-component-id="SkeletonTable"
        data-ouia-component-type="PF6/Table"
        data-ouia-safe="true"
        role="grid"
      >
        <thead
          class="pf-v6-c-table__thead"
          data-ouia-component-id="SkeletonTable-thead"
        >
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTable-tr-head"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <th
              class="pf-v6-c-table__th"
              data-ouia-component-id="SkeletonTable-th-0"
              scope="col"
              tabindex="-1"
            >
              First
            </th>
            <th
              class="pf-v6-c-table__th"
              data-ouia-component-id="SkeletonTable-th-1"
              scope="col"
              tabindex="-1"
            >
              Second
            </th>
          </tr>
        </thead>
        <tbody
          class="pf-v6-c-table__tbody"
          data-ouia-component-id="SkeletonTable-tbody"
          role="rowgroup"
        >
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTable-tr-0"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-0-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-0-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTable-tr-1"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-1-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-1-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTable-tr-2"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-2-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-2-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTable-tr-3"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-3-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-3-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTable-tr-4"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-4-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-4-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </body>,
  "container": <div>
    <table
      aria-label="Loading"
      class="pf-v6-c-table pf-m-grid-md"
      data-ouia-component-id="SkeletonTable"
      data-ouia-component-type="PF6/Table"
      data-ouia-safe="true"
      role="grid"
    >
      <thead
        class="pf-v6-c-table__thead"
        data-ouia-component-id="SkeletonTable-thead"
      >
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTable-tr-head"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <th
            class="pf-v6-c-table__th"
            data-ouia-component-id="SkeletonTable-th-0"
            scope="col"
            tabindex="-1"
          >
            First
          </th>
          <th
            class="pf-v6-c-table__th"
            data-ouia-component-id="SkeletonTable-th-1"
            scope="col"
            tabindex="-1"
          >
            Second
          </th>
        </tr>
      </thead>
      <tbody
        class="pf-v6-c-table__tbody"
        data-ouia-component-id="SkeletonTable-tbody"
        role="rowgroup"
      >
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTable-tr-0"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-0-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-0-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTable-tr-1"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-1-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-1-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTable-tr-2"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-2-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-2-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTable-tr-3"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-3-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-3-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTable-tr-4"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-4-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-4-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SkeletonTable component should render correctly with rows 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <table
        aria-label="Loading"
        class="pf-v6-c-table pf-m-grid-md"
        data-ouia-component-id="SkeletonTable"
        data-ouia-component-type="PF6/Table"
        data-ouia-safe="true"
        role="grid"
        rows="10"
      >
        <thead
          class="pf-v6-c-table__thead"
          data-ouia-component-id="SkeletonTable-thead"
        >
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTable-tr-head"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <th
              class="pf-v6-c-table__th"
              data-ouia-component-id="SkeletonTable-th-0"
              scope="col"
              tabindex="-1"
            >
              First
            </th>
            <th
              class="pf-v6-c-table__th"
              data-ouia-component-id="SkeletonTable-th-1"
              scope="col"
              tabindex="-1"
            >
              Second
            </th>
          </tr>
        </thead>
        <tbody
          class="pf-v6-c-table__tbody"
          data-ouia-component-id="SkeletonTable-tbody"
          role="rowgroup"
        >
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTable-tr-0"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-0-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-0-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTable-tr-1"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-1-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-1-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTable-tr-2"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-2-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-2-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTable-tr-3"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-3-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-3-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTable-tr-4"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-4-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTable-td-4-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </body>,
  "container": <div>
    <table
      aria-label="Loading"
      class="pf-v6-c-table pf-m-grid-md"
      data-ouia-component-id="SkeletonTable"
      data-ouia-component-type="PF6/Table"
      data-ouia-safe="true"
      role="grid"
      rows="10"
    >
      <thead
        class="pf-v6-c-table__thead"
        data-ouia-component-id="SkeletonTable-thead"
      >
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTable-tr-head"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <th
            class="pf-v6-c-table__th"
            data-ouia-component-id="SkeletonTable-th-0"
            scope="col"
            tabindex="-1"
          >
            First
          </th>
          <th
            class="pf-v6-c-table__th"
            data-ouia-component-id="SkeletonTable-th-1"
            scope="col"
            tabindex="-1"
          >
            Second
          </th>
        </tr>
      </thead>
      <tbody
        class="pf-v6-c-table__tbody"
        data-ouia-component-id="SkeletonTable-tbody"
        role="rowgroup"
      >
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTable-tr-0"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-0-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-0-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTable-tr-1"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-1-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-1-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTable-tr-2"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-2-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-2-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTable-tr-3"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-3-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-3-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTable-tr-4"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-4-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTable-td-4-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/SkeletonTableBody/index.ts
================================================
export { default } from './SkeletonTableBody';
export * from './SkeletonTableBody';



================================================
FILE: packages/module/src/SkeletonTableBody/SkeletonTableBody.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import SkeletonTableBody from './SkeletonTableBody';
import { Table } from '@patternfly/react-table';

describe('SkeletonTableBody component', () => {
  it('should render correctly', () => {
    expect(render(<Table><SkeletonTableBody columnsCount={2} /></Table>)).toMatchSnapshot();
  });
});



================================================
FILE: packages/module/src/SkeletonTableBody/SkeletonTableBody.tsx
================================================
import React from 'react';
import {
  Tbody,
  Td,
  Tr,
  RowSelectVariant
} from '@patternfly/react-table';
import { Skeleton } from '@patternfly/react-core';

export interface SkeletonTableBodyProps {
  /** Number of columns in the table */
  columnsCount: number;
  /** Number of rows in the table */
  rowsCount?: number;
  /** Custom OUIA ID */
  ouiaId?: string | number;
  /** Flag indicating if the table is selectable */
  isSelectable?: boolean;
  /** Flag indicating if the table is expandable */
  isExpandable?: boolean;
  /** Determines if the row selection variant (radio/checkbox) */
  selectVariant?: RowSelectVariant;
}

const SkeletonTableBody: React.FunctionComponent<SkeletonTableBodyProps> = ({
  rowsCount = 5,
  ouiaId = 'SkeletonTableBody',
  isSelectable,
  isExpandable,
  selectVariant = RowSelectVariant.checkbox,
  columnsCount,
}: SkeletonTableBodyProps) => {
  const bodyRows = [ ...Array(rowsCount) ].map((_, rowIndex) => (
    <Tr key={rowIndex} ouiaId={`${ouiaId}-tr-${rowIndex}`}>
      {isExpandable && (
        <Td
          data-ouia-component-id={`${ouiaId}-td-expand-${rowIndex}`}
          expand={{
            rowIndex,
            isExpanded: false
          }}
        />
      )}
      {isSelectable && (
        <Td
          data-ouia-component-id={`${ouiaId}-td-select-${rowIndex}`}
          select={{
            rowIndex,
            isSelected: false,
            isDisabled: true,
            variant: selectVariant
          }}
        />
      )}
      {[ ...Array(columnsCount) ].map((_, colIndex) => (
        <Td key={colIndex} data-ouia-component-id={`${ouiaId}-td-${rowIndex}-${colIndex}`}>
          <Skeleton />
        </Td>
      ))}
    </Tr>
  ));

  return (
    <Tbody data-ouia-component-id={`${ouiaId}-tbody`}>{bodyRows}</Tbody>
  );
};

export default SkeletonTableBody;



================================================
FILE: packages/module/src/SkeletonTableBody/__snapshots__/SkeletonTableBody.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SkeletonTableBody component should render correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <table
        class="pf-v6-c-table pf-m-grid-md"
        data-ouia-component-id="OUIA-Generated-Table-1"
        data-ouia-component-type="PF6/Table"
        data-ouia-safe="true"
        role="grid"
      >
        <tbody
          class="pf-v6-c-table__tbody"
          data-ouia-component-id="SkeletonTableBody-tbody"
          role="rowgroup"
        >
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTableBody-tr-0"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTableBody-td-0-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTableBody-td-0-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTableBody-tr-1"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTableBody-td-1-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTableBody-td-1-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTableBody-tr-2"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTableBody-td-2-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTableBody-td-2-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTableBody-tr-3"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTableBody-td-3-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTableBody-td-3-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTableBody-tr-4"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTableBody-td-4-0"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
            <td
              class="pf-v6-c-table__td"
              data-ouia-component-id="SkeletonTableBody-td-4-1"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </body>,
  "container": <div>
    <table
      class="pf-v6-c-table pf-m-grid-md"
      data-ouia-component-id="OUIA-Generated-Table-1"
      data-ouia-component-type="PF6/Table"
      data-ouia-safe="true"
      role="grid"
    >
      <tbody
        class="pf-v6-c-table__tbody"
        data-ouia-component-id="SkeletonTableBody-tbody"
        role="rowgroup"
      >
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTableBody-tr-0"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTableBody-td-0-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTableBody-td-0-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTableBody-tr-1"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTableBody-td-1-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTableBody-td-1-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTableBody-tr-2"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTableBody-td-2-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTableBody-td-2-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTableBody-tr-3"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTableBody-td-3-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTableBody-td-3-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTableBody-tr-4"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTableBody-td-4-0"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
          <td
            class="pf-v6-c-table__td"
            data-ouia-component-id="SkeletonTableBody-td-4-1"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/SkeletonTableHead/index.ts
================================================
export { default } from './SkeletonTableHead';
export * from './SkeletonTableHead';



================================================
FILE: packages/module/src/SkeletonTableHead/SkeletonTableHead.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import SkeletonTableHead from './SkeletonTableHead';
import { Table } from '@patternfly/react-table';

describe('SkeletonTableHead component', () => {
  it('should render correctly with count', () => {
    expect(render(<Table><SkeletonTableHead columnsCount={2} isSelectable isExpandable /></Table>)).toMatchSnapshot();
  });

  it('should render correctly with count', () => {
    expect(render(<Table><SkeletonTableHead columns={[ 'First', 'Second' ]} isTreeTable isSelectable /></Table>)).toMatchSnapshot();
  });
});



================================================
FILE: packages/module/src/SkeletonTableHead/SkeletonTableHead.tsx
================================================
import React, { ReactNode, useMemo } from 'react';
import {
  Th,
  ThProps,
  Thead,
  Tr
} from '@patternfly/react-table';
import { Skeleton } from '@patternfly/react-core';

export const isThObject = (value: ReactNode | { cell: ReactNode; props?: ThProps }): value is { cell: ReactNode; props?: ThProps } => value != null && typeof value === 'object' && 'cell' in value;

export interface SkeletonTableHeadProps {
  /** Custom columns for the table */
  columns?: (ReactNode | { cell: ReactNode; props?: ThProps })[];
  /** Number of columns in the table */
  columnsCount?: number;
  /** Custom OUIA ID */
  ouiaId?: string | number;
  /** Flag indicating if the table is selectable */
  isSelectable?: boolean;
  /** Flag indicating if the table is expandable */
  isExpandable?: boolean;
  /** Flag indicating if the table is a tree table */
  isTreeTable?: boolean;
}

export const SkeletonTableHead: React.FunctionComponent<SkeletonTableHeadProps> = ({
  ouiaId = 'SkeletonTableHeader',
  isSelectable,
  isExpandable,
  columnsCount,
  columns,
  isTreeTable,
  ...rest
}: SkeletonTableHeadProps) => {
  const hasCustomColumns = Array.isArray(columns);
  const rowCellsCount = hasCustomColumns ? columns.length : columnsCount;

  const cells = useMemo(() => [
    ...(isExpandable ? [ <Th key="row-expand" screenReaderText='Data expansion table header cell' /> ] : []),
    ...(isSelectable && !isTreeTable ? [ <Th key="row-select" screenReaderText='Data selection table header cell' /> ] : []),
    ...(hasCustomColumns ? (
      columns.map((column, index) => (
        <Th key={index} {...(isThObject(column) && column?.props)} data-ouia-component-id={`${ouiaId}-th-${index}`}>
          {isThObject(column) ? column.cell : column}
        </Th>
      ))
    ) : (
      [ ...Array(rowCellsCount) ].map((_, index) => (
        <Th key={index} data-ouia-component-id={`${ouiaId}-th-${index}`}>
          <Skeleton />
        </Th>
      ))
    )) 
  ]
  , [ hasCustomColumns, isExpandable, isSelectable, isTreeTable, columns, rowCellsCount, ouiaId ]);
  

  return (
    <Thead data-ouia-component-id={`${ouiaId}-thead`} {...rest}>
      <Tr ouiaId={`${ouiaId}-tr-head`}>
        {cells}
      </Tr>
    </Thead>
  );
};

export default SkeletonTableHead;



================================================
FILE: packages/module/src/SkeletonTableHead/__snapshots__/SkeletonTableHead.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SkeletonTableHead component should render correctly with count 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <table
        class="pf-v6-c-table pf-m-grid-md"
        data-ouia-component-id="OUIA-Generated-Table-1"
        data-ouia-component-type="PF6/Table"
        data-ouia-safe="true"
        role="grid"
      >
        <thead
          class="pf-v6-c-table__thead"
          data-ouia-component-id="SkeletonTableHeader-thead"
        >
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTableHeader-tr-head"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <th
              class="pf-v6-c-table__th"
              scope="col"
              tabindex="-1"
            >
              <span
                class="pf-v6-u-screen-reader"
              >
                Data expansion table header cell
              </span>
            </th>
            <th
              class="pf-v6-c-table__th"
              scope="col"
              tabindex="-1"
            >
              <span
                class="pf-v6-u-screen-reader"
              >
                Data selection table header cell
              </span>
            </th>
            <th
              class="pf-v6-c-table__th"
              data-ouia-component-id="SkeletonTableHeader-th-0"
              scope="col"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </th>
            <th
              class="pf-v6-c-table__th"
              data-ouia-component-id="SkeletonTableHeader-th-1"
              scope="col"
              tabindex="-1"
            >
              <div
                class="pf-v6-c-skeleton"
              >
                <span
                  class="pf-v6-screen-reader"
                />
              </div>
            </th>
          </tr>
        </thead>
      </table>
    </div>
  </body>,
  "container": <div>
    <table
      class="pf-v6-c-table pf-m-grid-md"
      data-ouia-component-id="OUIA-Generated-Table-1"
      data-ouia-component-type="PF6/Table"
      data-ouia-safe="true"
      role="grid"
    >
      <thead
        class="pf-v6-c-table__thead"
        data-ouia-component-id="SkeletonTableHeader-thead"
      >
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTableHeader-tr-head"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <th
            class="pf-v6-c-table__th"
            scope="col"
            tabindex="-1"
          >
            <span
              class="pf-v6-u-screen-reader"
            >
              Data expansion table header cell
            </span>
          </th>
          <th
            class="pf-v6-c-table__th"
            scope="col"
            tabindex="-1"
          >
            <span
              class="pf-v6-u-screen-reader"
            >
              Data selection table header cell
            </span>
          </th>
          <th
            class="pf-v6-c-table__th"
            data-ouia-component-id="SkeletonTableHeader-th-0"
            scope="col"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </th>
          <th
            class="pf-v6-c-table__th"
            data-ouia-component-id="SkeletonTableHeader-th-1"
            scope="col"
            tabindex="-1"
          >
            <div
              class="pf-v6-c-skeleton"
            >
              <span
                class="pf-v6-screen-reader"
              />
            </div>
          </th>
        </tr>
      </thead>
    </table>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SkeletonTableHead component should render correctly with count 2`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <table
        class="pf-v6-c-table pf-m-grid-md"
        data-ouia-component-id="OUIA-Generated-Table-2"
        data-ouia-component-type="PF6/Table"
        data-ouia-safe="true"
        role="grid"
      >
        <thead
          class="pf-v6-c-table__thead"
          data-ouia-component-id="SkeletonTableHeader-thead"
        >
          <tr
            class="pf-v6-c-table__tr"
            data-ouia-component-id="SkeletonTableHeader-tr-head"
            data-ouia-component-type="PF6/TableRow"
            data-ouia-safe="true"
          >
            <th
              class="pf-v6-c-table__th"
              data-ouia-component-id="SkeletonTableHeader-th-0"
              scope="col"
              tabindex="-1"
            >
              First
            </th>
            <th
              class="pf-v6-c-table__th"
              data-ouia-component-id="SkeletonTableHeader-th-1"
              scope="col"
              tabindex="-1"
            >
              Second
            </th>
          </tr>
        </thead>
      </table>
    </div>
  </body>,
  "container": <div>
    <table
      class="pf-v6-c-table pf-m-grid-md"
      data-ouia-component-id="OUIA-Generated-Table-2"
      data-ouia-component-type="PF6/Table"
      data-ouia-safe="true"
      role="grid"
    >
      <thead
        class="pf-v6-c-table__thead"
        data-ouia-component-id="SkeletonTableHeader-thead"
      >
        <tr
          class="pf-v6-c-table__tr"
          data-ouia-component-id="SkeletonTableHeader-tr-head"
          data-ouia-component-type="PF6/TableRow"
          data-ouia-safe="true"
        >
          <th
            class="pf-v6-c-table__th"
            data-ouia-component-id="SkeletonTableHeader-th-0"
            scope="col"
            tabindex="-1"
          >
            First
          </th>
          <th
            class="pf-v6-c-table__th"
            data-ouia-component-id="SkeletonTableHeader-th-1"
            scope="col"
            tabindex="-1"
          >
            Second
          </th>
        </tr>
      </thead>
    </table>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/StaleDataWarning/index.ts
================================================
export { default } from './StaleDataWarning';
export * from './StaleDataWarning';


================================================
FILE: packages/module/src/StaleDataWarning/StaleDataWarning.tsx
================================================
import React from 'react';
import { ExclamationCircleIcon, ExclamationTriangleIcon } from '@patternfly/react-icons';
import { Button, Icon, Tooltip, TooltipProps } from '@patternfly/react-core';
import clsx from 'clsx';
import { createUseStyles } from 'react-jss';

type Render = (config: { msg: string }) => React.ReactElement<any, any> | null;
type CullingDate = string | number | Date;

interface StaleDataInfo {
  isWarn?: boolean;
  isError?: boolean;
  msg: string;
}

const seconds = 1000;
const minutes: number = seconds * 60;
const hours: number = minutes * 60;
const days: number = hours * 24;

type CalculateTooltip = (culled: CullingDate, warning: CullingDate, currDate: CullingDate) => StaleDataInfo;

const useStyles = createUseStyles({
  inventoryCullingWarning: {
    color: 'var(--pf-t--global--icon--color--status--warning--default)',
  },
  inventoryCullingDanger: {
    color: 'var(--pf-t--global--icon--color--status--danger--default)',
  },
  iconMargin: {
    marginRight: 'var(--pf-t--global--spacer--sm)'
  },
  messageFont: {
    fontWeight: 'var(--pf-t--global--font--weight--body--bold)',
  },
});

/** extends TooltipProps */
export interface StaleDataWarningProps extends Omit<TooltipProps, 'content'> {
  /** Option to add custom css classes */
  className?: string;
  /** Warning date for when object becomes stale */
  staleWarning: CullingDate;
  /** Date when object becomes culled */
  culled: CullingDate;
  /** Date when object becomes stale */
  stale: CullingDate;
  /** Current date */
  currDate: CullingDate;
  /** Optional prop to add custom children */
  children?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
  /** Option to add custom message ReactElement */
  render?: Render;
  /** Optional custom warning message */
  message?: string;
  /** Accessible label for the icon */
  "aria-label"?: string;
}

const StaleDataWarning: React.FunctionComponent<StaleDataWarningProps> = ({
  culled = new Date(0),
  className,
  staleWarning = new Date(0),
  stale = new Date(0),
  currDate = new Date(0),
  children,
  render,
  message,
  "aria-label": ariaLabel,
  ...props
}) => {
  const classes = useStyles();

  const calculateTooltip: CalculateTooltip = (culled, warning, currDate) => {
    const culledDate: Date = new Date(culled);
    const warningDate: Date = new Date(warning);
    const diffTime: number = new Date(currDate).valueOf() - warningDate.valueOf();
    const removeIn: number = Math.ceil((culledDate.valueOf() - new Date(currDate).valueOf()) / days);
    const msg = message ? message : `System scheduled for inventory removal in ${removeIn} days`;
    if (diffTime >= 0) {
      return {
        isError: true,
        msg,
      };
    }
  
    return {
      isWarn: true,
      msg,
    };
  };

  if (new Date(currDate).valueOf() - new Date(stale).valueOf() < 0) {
    return render
      ? render({
        msg: '',
      })
      : children || null;
  }

  const { isWarn, isError, msg }: StaleDataInfo = calculateTooltip(culled, staleWarning, currDate);
  if (render) {
    return (
      <span
        className={clsx({ [classes.inventoryCullingWarning]: isWarn, [classes.inventoryCullingDanger]: isError }, className)}
      >
        {isWarn &&
          <Icon status="warning"><ExclamationTriangleIcon className={clsx( classes.iconMargin )} aria-label={ariaLabel || "Warning"}/></Icon>   
        }
        {isError &&
          <Icon status="danger"><ExclamationCircleIcon  className={clsx( classes.iconMargin )} aria-label={ariaLabel || "Danger"}/></Icon>   
        }
        <span className={clsx( classes.messageFont )}>
          {render({ msg })}
        </span>
      </span>
    );
  }

  return (
    <>
      {isError && <Tooltip {...props} content={<div>{msg}</div>}><Button variant="plain" icon={<Icon status="warning"><ExclamationTriangleIcon/></Icon>} aria-label={ariaLabel || "Warning"} /></Tooltip>}
      {isWarn && <Tooltip {...props} content={<div>{msg}</div>}><Button variant="plain" icon={<Icon status="danger"><ExclamationCircleIcon/></Icon>} aria-label={ariaLabel || "Danger"} /></Tooltip>}
      {children}
    </>
  );
};

export default StaleDataWarning;




================================================
FILE: packages/module/src/Status/index.tsx
================================================
export { default } from './Status';
export * from './Status';


================================================
FILE: packages/module/src/Status/Status.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import Status, { IconStatus, StatusVariant } from './Status';
import { BanIcon, CheckCircleIcon, ExclamationTriangleIcon } from '@patternfly/react-icons';
import { Button, ButtonSize, ButtonVariant } from '@patternfly/react-core';

describe('Status component', () => {
  it('should render correctly', () => {
    expect(render(<Status status={IconStatus.warning} label='Warning' icon={<ExclamationTriangleIcon/>}/>)).toMatchSnapshot();
  });

  it('should render iconOnly correctly', () => {
    expect(render(<Status iconOnly status={IconStatus.warning} iconTitle='1 security issue found' label='Warning' icon={<ExclamationTriangleIcon/>} />)).toMatchSnapshot();
  });

  it('should render correctly with description', () => {
    expect(render(<Status status={IconStatus.warning} label='Warning' description='1 issue found' icon={<ExclamationTriangleIcon/>}/>)).toMatchSnapshot();
  });

  it('should render correctly link', () => {
    // eslint-disable-next-line no-console
    expect(render(<Status status={IconStatus.success} variant={StatusVariant.link} label='Ready' onClick={() => console.log('Link status clicked')} icon={<CheckCircleIcon/>}/>)).toMatchSnapshot();
  });

  it('should render correctly popover', () => {
    expect(render(<Status
      status={IconStatus.danger}
      variant={StatusVariant.popover} 
      label='Not Ready' 
      icon={<BanIcon/>}
      popoverProps={{ 
        bodyContent: 'Example state description', 
        footerContent: <Button size={ButtonSize.sm} variant={ButtonVariant.link} isInline>Action</Button> 
      }}
    />)).toMatchSnapshot();
  });
});



================================================
FILE: packages/module/src/Status/Status.tsx
================================================
import * as React from 'react';
import { Button, ButtonVariant, Flex, FlexItem, Icon, Popover, PopoverPosition, PopoverProps, Content, ContentVariants, } from '@patternfly/react-core';
import { createUseStyles } from 'react-jss';

export const StatusVariant = {
  link: 'link',
  popover: 'popover',
  plain: 'plain'
} as const;

export type StatusVariant = typeof StatusVariant[keyof typeof StatusVariant];

export const IconStatus = {
  custom: 'custom',
  info: 'info',
  success: 'success',
  warning: 'warning',
  danger: 'danger'
} as const;

export type IconStatus = typeof IconStatus[keyof typeof IconStatus];

export interface StatusProps extends React.PropsWithChildren {
  /** Status label text */
  label?: string;
  /** Description to be displayed under the label */
  description?: React.ReactNode;
  /** If true, only displays icon */
  iconOnly?: boolean;
  /** Variant of the status component to be displayed */
  variant?: StatusVariant;
  /** Status icon */
  icon?: React.ReactElement;
  /** Status to control icon color */
  status: IconStatus;
  /** Icon title for accessibility */
  iconTitle?: string;
  /** Custom OUIA ID */
  ouiaId?: string | number;
  /** Props for the optional popover */
  popoverProps?: PopoverProps;
  /** Optional link variant onClick callback */
  onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;
}

const useStyles = createUseStyles({
  icon: {
    margin: "0",
    alignSelf: "flex-start",
  },
  statusLabel: {
    lineHeight: 'var(--pf-t--global--font--line-height--body)',
  },
  statusDescription: {
    color: 'var(--pf-t--color--gray--50)',
  }
})

export const Status: React.FC<StatusProps> = ({ variant = StatusVariant.plain, label, children, iconOnly, icon, status, iconTitle, ouiaId = 'Status', popoverProps, onClick, description, ...props }: StatusProps) => {
  const classes = useStyles();

  if (iconOnly && !iconTitle) {
    // eslint-disable-next-line no-console
    console.warn('iconOnly is true but no iconTitle is provided. Please provide a descriptive iconTitle for accessibility.');
  }

  const statusBody = (
    <Flex title={label} alignItems={{ default: 'alignItemsCenter' }} {...props}>
      {icon && (
        <FlexItem className={classes.icon}>
          <Icon className='pf-v6-u-mr-sm' status={status} title={iconTitle ?? status} data-ouia-component-id={`${ouiaId}-icon`}>
            {icon}
          </Icon>
        </FlexItem>
      )}
      {!iconOnly && (
        <FlexItem>
          <Content ouiaId={`${ouiaId}-label`} className={classes.statusLabel} style={{ marginBlockEnd: 0 }}>{label}</Content>
          {description && <Content component={ContentVariants.small} ouiaId={`${ouiaId}-description`} className={classes.statusDescription}>{description}</Content>}
        </FlexItem>
      )}
    </Flex>
  );

  if (variant === StatusVariant.link) {
    return (
      <Button variant={ButtonVariant.link} title={label} onClick={onClick} ouiaId={`${ouiaId}-link-icon`}>
        {statusBody}
      </Button>
    );
  }

  if (variant === StatusVariant.popover) {
    return (
      <Popover
        position={PopoverPosition.right}
        headerContent={label}
        bodyContent={children}
        aria-label={label}
        data-ouia-component-id={`${ouiaId}-popover`}
        {...popoverProps}
      >
        <Button variant={ButtonVariant.link} isInline style={{ textDecoration: 'none' }} ouiaId={`${ouiaId}-popover-icon`}>
          {statusBody}
        </Button>
      </Popover>
    );
  }

  return statusBody;
};

export default Status;



================================================
FILE: packages/module/src/Status/__snapshots__/Status.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Status component should render correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="pf-v6-l-flex pf-m-align-items-center"
        title="Warning"
      >
        <div
          class="icon-0-2-1"
        >
          <span
            class="pf-v6-c-icon pf-v6-u-mr-sm"
            data-ouia-component-id="Status-icon"
            title="warning"
          >
            <span
              class="pf-v6-c-icon__content pf-m-warning"
            >
              <svg
                aria-hidden="true"
                class="pf-v6-svg"
                fill="currentColor"
                height="1em"
                role="img"
                viewBox="0 0 576 512"
                width="1em"
              >
                <path
                  d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                />
              </svg>
            </span>
          </span>
        </div>
        <div
          class=""
        >
          <div
            class="pf-v6-c-content statusLabel-0-2-2"
            data-ouia-component-id="Status-label"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
            style="margin-block-end: 0;"
          >
            Warning
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="pf-v6-l-flex pf-m-align-items-center"
      title="Warning"
    >
      <div
        class="icon-0-2-1"
      >
        <span
          class="pf-v6-c-icon pf-v6-u-mr-sm"
          data-ouia-component-id="Status-icon"
          title="warning"
        >
          <span
            class="pf-v6-c-icon__content pf-m-warning"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 576 512"
              width="1em"
            >
              <path
                d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
              />
            </svg>
          </span>
        </span>
      </div>
      <div
        class=""
      >
        <div
          class="pf-v6-c-content statusLabel-0-2-2"
          data-ouia-component-id="Status-label"
          data-ouia-component-type="PF6/Content"
          data-ouia-safe="true"
          data-pf-content="true"
          style="margin-block-end: 0;"
        >
          Warning
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Status component should render correctly link 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        aria-disabled="false"
        class="pf-v6-c-button pf-m-link"
        data-ouia-component-id="Status-link-icon"
        data-ouia-component-type="PF6/Button"
        data-ouia-safe="true"
        title="Ready"
        type="button"
      >
        <span
          class="pf-v6-c-button__text"
        >
          <div
            class="pf-v6-l-flex pf-m-align-items-center"
            title="Ready"
          >
            <div
              class="icon-0-2-1"
            >
              <span
                class="pf-v6-c-icon pf-v6-u-mr-sm"
                data-ouia-component-id="Status-icon"
                title="success"
              >
                <span
                  class="pf-v6-c-icon__content pf-m-success"
                >
                  <svg
                    aria-hidden="true"
                    class="pf-v6-svg"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <path
                      d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                    />
                  </svg>
                </span>
              </span>
            </div>
            <div
              class=""
            >
              <div
                class="pf-v6-c-content statusLabel-0-2-2"
                data-ouia-component-id="Status-label"
                data-ouia-component-type="PF6/Content"
                data-ouia-safe="true"
                data-pf-content="true"
                style="margin-block-end: 0;"
              >
                Ready
              </div>
            </div>
          </div>
        </span>
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      aria-disabled="false"
      class="pf-v6-c-button pf-m-link"
      data-ouia-component-id="Status-link-icon"
      data-ouia-component-type="PF6/Button"
      data-ouia-safe="true"
      title="Ready"
      type="button"
    >
      <span
        class="pf-v6-c-button__text"
      >
        <div
          class="pf-v6-l-flex pf-m-align-items-center"
          title="Ready"
        >
          <div
            class="icon-0-2-1"
          >
            <span
              class="pf-v6-c-icon pf-v6-u-mr-sm"
              data-ouia-component-id="Status-icon"
              title="success"
            >
              <span
                class="pf-v6-c-icon__content pf-m-success"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                  />
                </svg>
              </span>
            </span>
          </div>
          <div
            class=""
          >
            <div
              class="pf-v6-c-content statusLabel-0-2-2"
              data-ouia-component-id="Status-label"
              data-ouia-component-type="PF6/Content"
              data-ouia-safe="true"
              data-pf-content="true"
              style="margin-block-end: 0;"
            >
              Ready
            </div>
          </div>
        </div>
      </span>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Status component should render correctly popover 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        style="display: contents;"
      >
        <button
          aria-disabled="false"
          class="pf-v6-c-button pf-m-link pf-m-inline"
          data-ouia-component-id="Status-popover-icon"
          data-ouia-component-type="PF6/Button"
          data-ouia-safe="true"
          style="text-decoration: none;"
          type="button"
        >
          <span
            class="pf-v6-c-button__text"
          >
            <div
              class="pf-v6-l-flex pf-m-align-items-center"
              title="Not Ready"
            >
              <div
                class="icon-0-2-1"
              >
                <span
                  class="pf-v6-c-icon pf-v6-u-mr-sm"
                  data-ouia-component-id="Status-icon"
                  title="danger"
                >
                  <span
                    class="pf-v6-c-icon__content pf-m-danger"
                  >
                    <svg
                      aria-hidden="true"
                      class="pf-v6-svg"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      viewBox="0 0 512 512"
                      width="1em"
                    >
                      <path
                        d="M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z"
                      />
                    </svg>
                  </span>
                </span>
              </div>
              <div
                class=""
              >
                <div
                  class="pf-v6-c-content statusLabel-0-2-2"
                  data-ouia-component-id="Status-label"
                  data-ouia-component-type="PF6/Content"
                  data-ouia-safe="true"
                  data-pf-content="true"
                  style="margin-block-end: 0;"
                >
                  Not Ready
                </div>
              </div>
            </div>
          </span>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      style="display: contents;"
    >
      <button
        aria-disabled="false"
        class="pf-v6-c-button pf-m-link pf-m-inline"
        data-ouia-component-id="Status-popover-icon"
        data-ouia-component-type="PF6/Button"
        data-ouia-safe="true"
        style="text-decoration: none;"
        type="button"
      >
        <span
          class="pf-v6-c-button__text"
        >
          <div
            class="pf-v6-l-flex pf-m-align-items-center"
            title="Not Ready"
          >
            <div
              class="icon-0-2-1"
            >
              <span
                class="pf-v6-c-icon pf-v6-u-mr-sm"
                data-ouia-component-id="Status-icon"
                title="danger"
              >
                <span
                  class="pf-v6-c-icon__content pf-m-danger"
                >
                  <svg
                    aria-hidden="true"
                    class="pf-v6-svg"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <path
                      d="M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z"
                    />
                  </svg>
                </span>
              </span>
            </div>
            <div
              class=""
            >
              <div
                class="pf-v6-c-content statusLabel-0-2-2"
                data-ouia-component-id="Status-label"
                data-ouia-component-type="PF6/Content"
                data-ouia-safe="true"
                data-pf-content="true"
                style="margin-block-end: 0;"
              >
                Not Ready
              </div>
            </div>
          </div>
        </span>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Status component should render correctly with description 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="pf-v6-l-flex pf-m-align-items-center"
        title="Warning"
      >
        <div
          class="icon-0-2-1"
        >
          <span
            class="pf-v6-c-icon pf-v6-u-mr-sm"
            data-ouia-component-id="Status-icon"
            title="warning"
          >
            <span
              class="pf-v6-c-icon__content pf-m-warning"
            >
              <svg
                aria-hidden="true"
                class="pf-v6-svg"
                fill="currentColor"
                height="1em"
                role="img"
                viewBox="0 0 576 512"
                width="1em"
              >
                <path
                  d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                />
              </svg>
            </span>
          </span>
        </div>
        <div
          class=""
        >
          <div
            class="pf-v6-c-content statusLabel-0-2-2"
            data-ouia-component-id="Status-label"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
            style="margin-block-end: 0;"
          >
            Warning
          </div>
          <small
            class="pf-v6-c-content--small statusDescription-0-2-3"
            data-ouia-component-id="Status-description"
            data-ouia-component-type="PF6/Content"
            data-ouia-safe="true"
            data-pf-content="true"
          >
            1 issue found
          </small>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="pf-v6-l-flex pf-m-align-items-center"
      title="Warning"
    >
      <div
        class="icon-0-2-1"
      >
        <span
          class="pf-v6-c-icon pf-v6-u-mr-sm"
          data-ouia-component-id="Status-icon"
          title="warning"
        >
          <span
            class="pf-v6-c-icon__content pf-m-warning"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 576 512"
              width="1em"
            >
              <path
                d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
              />
            </svg>
          </span>
        </span>
      </div>
      <div
        class=""
      >
        <div
          class="pf-v6-c-content statusLabel-0-2-2"
          data-ouia-component-id="Status-label"
          data-ouia-component-type="PF6/Content"
          data-ouia-safe="true"
          data-pf-content="true"
          style="margin-block-end: 0;"
        >
          Warning
        </div>
        <small
          class="pf-v6-c-content--small statusDescription-0-2-3"
          data-ouia-component-id="Status-description"
          data-ouia-component-type="PF6/Content"
          data-ouia-safe="true"
          data-pf-content="true"
        >
          1 issue found
        </small>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Status component should render iconOnly correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="pf-v6-l-flex pf-m-align-items-center"
        title="Warning"
      >
        <div
          class="icon-0-2-1"
        >
          <span
            class="pf-v6-c-icon pf-v6-u-mr-sm"
            data-ouia-component-id="Status-icon"
            title="1 security issue found"
          >
            <span
              class="pf-v6-c-icon__content pf-m-warning"
            >
              <svg
                aria-hidden="true"
                class="pf-v6-svg"
                fill="currentColor"
                height="1em"
                role="img"
                viewBox="0 0 576 512"
                width="1em"
              >
                <path
                  d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                />
              </svg>
            </span>
          </span>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="pf-v6-l-flex pf-m-align-items-center"
      title="Warning"
    >
      <div
        class="icon-0-2-1"
      >
        <span
          class="pf-v6-c-icon pf-v6-u-mr-sm"
          data-ouia-component-id="Status-icon"
          title="1 security issue found"
        >
          <span
            class="pf-v6-c-icon__content pf-m-warning"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 576 512"
              width="1em"
            >
              <path
                d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
              />
            </svg>
          </span>
        </span>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/TagCount/index.ts
================================================
export { default } from './TagCount';
export * from './TagCount';



================================================
FILE: packages/module/src/TagCount/TagCount.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import TagCount from './TagCount';

describe('TagCount component', () => {
  it('should render a disabled tag count with no value', () => {
    expect(render(<TagCount />)).toMatchSnapshot();
  });


  it('should render a tag count of 11', () => {
    expect(render(<TagCount count={11} />)).toMatchSnapshot();
  });
});


================================================
FILE: packages/module/src/TagCount/TagCount.tsx
================================================
import React from 'react';
import clsx from 'clsx';
import { Button, ButtonProps, Icon } from '@patternfly/react-core';
import { TagIcon } from '@patternfly/react-icons';
import { createUseStyles } from 'react-jss'

const useStyles = createUseStyles({
  buttonTagCount: {
    display: 'flex',
    alignItems: 'center',
    padding: 'var(--pf-t--global--spacer--sm) var(--pf-t--global--spacer--md)'
  },

  tagIcon: (isDisabled: boolean) => ({
    color: `var(--pf-t--global--icon--color--${isDisabled ? '200' : '100'})`,
  }),

  tagText: {
    marginLeft: 'var(--pf-t--global--spacer--sm)',
    fontSize: 'var(--pf-t--global--font--size--sm)'
  }
});

/** extends ButtonProps */
export interface TagCountProps extends ButtonProps {
  /** Count to display in tag count component */
  count?: number;
  /** Additional classes added to the tag count component */
  className?: string;
  /** Icon size */
  iconSize?: 'sm' | 'md' | 'lg' | 'xl';
  /** Custom OUIA ID */
  ouiaId?: string | number;
}

const TagCount: React.FunctionComponent<TagCountProps> = ({
  count, 
  className,
  iconSize= 'md',
  ouiaId = 'TagCount',
  ...props 
}: TagCountProps) => {
  const classes = useStyles(!count);
  const tagClasses = clsx(classes.buttonTagCount, className);
  return (
    <Button 
      icon={
        <>
          <Icon iconSize={iconSize} data-ouia-component-id={`${ouiaId}-icon`}>
            <TagIcon className={classes.tagIcon} />
          </Icon>
          <span className={classes.tagText} data-ouia-component-id={`${ouiaId}-text`}>{count}</span>
        </>
      }
      aria-label="Tag count" 
      {...props}
      variant="plain"
      isDisabled={!count}
      className={tagClasses}
      ouiaId={ouiaId}
    />
  );
};

export default TagCount;



================================================
FILE: packages/module/src/TagCount/__snapshots__/TagCount.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TagCount component should render a disabled tag count with no value 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        aria-disabled="false"
        aria-label="Tag count"
        class="pf-v6-c-button pf-m-plain buttonTagCount-0-2-1"
        data-ouia-component-id="TagCount"
        data-ouia-component-type="PF6/Button"
        data-ouia-safe="true"
        disabled=""
        type="button"
      >
        <span
          class="pf-v6-c-button__icon"
        >
          <span
            class="pf-v6-c-icon"
            data-ouia-component-id="TagCount-icon"
          >
            <span
              class="pf-v6-c-icon__content pf-m-md"
            >
              <svg
                aria-hidden="true"
                class="pf-v6-svg tagIcon-0-2-2 tagIcon-d0-0-2-4"
                fill="currentColor"
                height="1em"
                role="img"
                viewBox="0 0 512 512"
                width="1em"
              >
                <path
                  d="M0 252.118V48C0 21.49 21.49 0 48 0h204.118a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882L293.823 497.941c-18.745 18.745-49.137 18.745-67.882 0L14.059 286.059A48 48 0 0 1 0 252.118zM112 64c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z"
                />
              </svg>
            </span>
          </span>
          <span
            class="tagText-0-2-3"
            data-ouia-component-id="TagCount-text"
          />
        </span>
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      aria-disabled="false"
      aria-label="Tag count"
      class="pf-v6-c-button pf-m-plain buttonTagCount-0-2-1"
      data-ouia-component-id="TagCount"
      data-ouia-component-type="PF6/Button"
      data-ouia-safe="true"
      disabled=""
      type="button"
    >
      <span
        class="pf-v6-c-button__icon"
      >
        <span
          class="pf-v6-c-icon"
          data-ouia-component-id="TagCount-icon"
        >
          <span
            class="pf-v6-c-icon__content pf-m-md"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg tagIcon-0-2-2 tagIcon-d0-0-2-4"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 512 512"
              width="1em"
            >
              <path
                d="M0 252.118V48C0 21.49 21.49 0 48 0h204.118a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882L293.823 497.941c-18.745 18.745-49.137 18.745-67.882 0L14.059 286.059A48 48 0 0 1 0 252.118zM112 64c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z"
              />
            </svg>
          </span>
        </span>
        <span
          class="tagText-0-2-3"
          data-ouia-component-id="TagCount-text"
        />
      </span>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TagCount component should render a tag count of 11 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        aria-disabled="false"
        aria-label="Tag count"
        class="pf-v6-c-button pf-m-plain buttonTagCount-0-2-1"
        data-ouia-component-id="TagCount"
        data-ouia-component-type="PF6/Button"
        data-ouia-safe="true"
        type="button"
      >
        <span
          class="pf-v6-c-button__icon"
        >
          <span
            class="pf-v6-c-icon"
            data-ouia-component-id="TagCount-icon"
          >
            <span
              class="pf-v6-c-icon__content pf-m-md"
            >
              <svg
                aria-hidden="true"
                class="pf-v6-svg tagIcon-0-2-2 tagIcon-d1-0-2-5"
                fill="currentColor"
                height="1em"
                role="img"
                viewBox="0 0 512 512"
                width="1em"
              >
                <path
                  d="M0 252.118V48C0 21.49 21.49 0 48 0h204.118a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882L293.823 497.941c-18.745 18.745-49.137 18.745-67.882 0L14.059 286.059A48 48 0 0 1 0 252.118zM112 64c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z"
                />
              </svg>
            </span>
          </span>
          <span
            class="tagText-0-2-3"
            data-ouia-component-id="TagCount-text"
          >
            11
          </span>
        </span>
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      aria-disabled="false"
      aria-label="Tag count"
      class="pf-v6-c-button pf-m-plain buttonTagCount-0-2-1"
      data-ouia-component-id="TagCount"
      data-ouia-component-type="PF6/Button"
      data-ouia-safe="true"
      type="button"
    >
      <span
        class="pf-v6-c-button__icon"
      >
        <span
          class="pf-v6-c-icon"
          data-ouia-component-id="TagCount-icon"
        >
          <span
            class="pf-v6-c-icon__content pf-m-md"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg tagIcon-0-2-2 tagIcon-d1-0-2-5"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 512 512"
              width="1em"
            >
              <path
                d="M0 252.118V48C0 21.49 21.49 0 48 0h204.118a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882L293.823 497.941c-18.745 18.745-49.137 18.745-67.882 0L14.059 286.059A48 48 0 0 1 0 252.118zM112 64c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z"
              />
            </svg>
          </span>
        </span>
        <span
          class="tagText-0-2-3"
          data-ouia-component-id="TagCount-text"
        >
          11
        </span>
      </span>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/UnauthorizedAccess/index.ts
================================================
export { default } from './UnauthorizedAccess';
export * from './UnauthorizedAccess';



================================================
FILE: packages/module/src/UnauthorizedAccess/UnauthorizedAccess.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import { QuestionCircleIcon } from '@patternfly/react-icons';
import UnauthorizedAccess from './UnauthorizedAccess';

describe('UnauthorizedAccess component', () => {
  const initialProps = {
    serviceName: 'Foo',
  };
  it('should render', () => {
    const { container } = render(<UnauthorizedAccess {...initialProps} />);
    expect(container.firstChild).toMatchSnapshot();
  });

  it('should apply custom styles', () => {
    const { container } = render(<UnauthorizedAccess {...initialProps} className="something" />);
    expect(container.firstChild).toMatchSnapshot();
  });

  it('should use custom icon', () => {
    const { container } = render(<UnauthorizedAccess {...initialProps} icon={QuestionCircleIcon} />);
    expect(container.firstChild).toMatchSnapshot();
  });

  it('should not show buttons', () => {
    const { container } = render(<UnauthorizedAccess {...initialProps} showReturnButton={false} />);
    expect(container.firstChild).toMatchSnapshot();
  });

  it('should show custom body text', () => {
    const { container } = render(<UnauthorizedAccess {...initialProps} bodyText="Some text" />);
    expect(container.firstChild).toMatchSnapshot();
  });

  it('should show custom title', () => {
    const { container } = render(<UnauthorizedAccess titleText="Custom title" />);
    expect(container.firstChild).toMatchSnapshot();
  });

  it('should show custom actions', () => {
    const primaryAction = 
      <button id="action-one" key="1">
        1
      </button>;
    const secondaryActions = [
      <button id="action-one" key="2">
        2
      </button>,
      <button id="action-one" key="3">
        3
      </button>
    ];
    const { container } = render(<UnauthorizedAccess {...initialProps} primaryAction={primaryAction} secondaryActions={secondaryActions} />);
    expect(container.firstChild).toMatchSnapshot();
  });
});


================================================
FILE: packages/module/src/UnauthorizedAccess/UnauthorizedAccess.tsx
================================================
import React from 'react';
import { Button, EmptyState, EmptyStateBody, EmptyStateProps, EmptyStateVariant, EmptyStateFooter, EmptyStateActions, ButtonVariant, } from '@patternfly/react-core';
import { LockIcon } from '@patternfly/react-icons';

/** extends EmptyStateProps */
export interface UnauthorizedAccessProps extends Omit<EmptyStateProps, 'children' | 'titleText'> {
  /** Service name displayed in the title */
  serviceName?: React.ReactNode;
  /** Icon displayed above the title */
  icon?: React.ComponentType;
  /** Custom body text */
  bodyText?: React.ReactNode;
  /** Shows link to the previous page */
  showReturnButton?: boolean;
  /** Custom previous page button text */
  prevPageButtonText?: React.ReactNode;
  /** Custom className */
  className?: string;
  /** Custom title text */
  titleText?: React.ReactNode;
  /** Custom primary action - there should only be one defined */
  primaryAction?: React.ReactNode;
  /** Custom secondary actions */
  secondaryActions?: React.ReactNode;
  /** Custom landing page button text */
  toLandingPageText?: React.ReactNode;
  /** Custom landing page button URL */
  toLandingPageUrl?: string;
  /** Custom OUIA ID */
  ouiaId?: string | number;
}

const UnauthorizedAccess: React.FunctionComponent<UnauthorizedAccessProps> = ({
  prevPageButtonText = 'Return to previous page',
  toLandingPageText = 'Go to landing page',
  toLandingPageUrl = ".",
  primaryAction = null,
  secondaryActions = null,
  serviceName,
  titleText = `You do not have access to ${serviceName}`,
  icon: Icon = LockIcon,
  bodyText = 'Contact your system administrator(s) for more information.',
  showReturnButton = true,
  className,
  ouiaId = 'UnauthorizedAccess',
  headingLevel = 'h5',
  ...props
}: UnauthorizedAccessProps) => (
  <EmptyState headingLevel={headingLevel} icon={Icon} variant={EmptyStateVariant.full} className={className} data-ouia-component-id={ouiaId} {...props} titleText={titleText}>
    <EmptyStateBody data-ouia-component-id={`${ouiaId}-body`}>{bodyText}</EmptyStateBody>
    <EmptyStateFooter data-ouia-component-id={`${ouiaId}-footer`}>
      {primaryAction ? <EmptyStateActions>{primaryAction}</EmptyStateActions> : null}
      {showReturnButton && !primaryAction &&
            (document.referrer ? (
              <Button variant={ButtonVariant.primary} onClick={() => history.back()} ouiaId={`${ouiaId}-back-button`}>
                {prevPageButtonText}
              </Button>
            ) : (
              <Button variant={ButtonVariant.primary} component="a" href={toLandingPageUrl} ouiaId={`${ouiaId}-home-button`}>
                {toLandingPageText}
              </Button>
            ))}
      <EmptyStateActions>
        {secondaryActions ? <EmptyStateActions>{secondaryActions}</EmptyStateActions> : null}
      </EmptyStateActions>
    </EmptyStateFooter>
  </EmptyState>
);


export default UnauthorizedAccess;



================================================
FILE: packages/module/src/UnauthorizedAccess/__snapshots__/UnauthorizedAccess.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UnauthorizedAccess component should apply custom styles 1`] = `
<div
  class="pf-v6-c-empty-state something"
  data-ouia-component-id="UnauthorizedAccess"
>
  <div
    class="pf-v6-c-empty-state__content"
  >
    <div
      class="pf-v6-c-empty-state__header"
    >
      <div
        class="pf-v6-c-empty-state__icon"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 448 512"
          width="1em"
        >
          <path
            d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
          />
        </svg>
      </div>
      <div
        class="pf-v6-c-empty-state__title"
      >
        <h5
          class="pf-v6-c-empty-state__title-text"
        >
          You do not have access to Foo
        </h5>
      </div>
    </div>
    <div
      class="pf-v6-c-empty-state__body"
      data-ouia-component-id="UnauthorizedAccess-body"
    >
      Contact your system administrator(s) for more information.
    </div>
    <div
      class="pf-v6-c-empty-state__footer"
      data-ouia-component-id="UnauthorizedAccess-footer"
    >
      <a
        aria-disabled="false"
        class="pf-v6-c-button pf-m-primary"
        data-ouia-component-id="UnauthorizedAccess-home-button"
        data-ouia-component-type="PF6/Button"
        data-ouia-safe="true"
        href="."
      >
        <span
          class="pf-v6-c-button__text"
        >
          Go to landing page
        </span>
      </a>
      <div
        class="pf-v6-c-empty-state__actions"
      />
    </div>
  </div>
</div>
`;

exports[`UnauthorizedAccess component should not show buttons 1`] = `
<div
  class="pf-v6-c-empty-state"
  data-ouia-component-id="UnauthorizedAccess"
>
  <div
    class="pf-v6-c-empty-state__content"
  >
    <div
      class="pf-v6-c-empty-state__header"
    >
      <div
        class="pf-v6-c-empty-state__icon"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 448 512"
          width="1em"
        >
          <path
            d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
          />
        </svg>
      </div>
      <div
        class="pf-v6-c-empty-state__title"
      >
        <h5
          class="pf-v6-c-empty-state__title-text"
        >
          You do not have access to Foo
        </h5>
      </div>
    </div>
    <div
      class="pf-v6-c-empty-state__body"
      data-ouia-component-id="UnauthorizedAccess-body"
    >
      Contact your system administrator(s) for more information.
    </div>
    <div
      class="pf-v6-c-empty-state__footer"
      data-ouia-component-id="UnauthorizedAccess-footer"
    >
      <div
        class="pf-v6-c-empty-state__actions"
      />
    </div>
  </div>
</div>
`;

exports[`UnauthorizedAccess component should render 1`] = `
<div
  class="pf-v6-c-empty-state"
  data-ouia-component-id="UnauthorizedAccess"
>
  <div
    class="pf-v6-c-empty-state__content"
  >
    <div
      class="pf-v6-c-empty-state__header"
    >
      <div
        class="pf-v6-c-empty-state__icon"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 448 512"
          width="1em"
        >
          <path
            d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
          />
        </svg>
      </div>
      <div
        class="pf-v6-c-empty-state__title"
      >
        <h5
          class="pf-v6-c-empty-state__title-text"
        >
          You do not have access to Foo
        </h5>
      </div>
    </div>
    <div
      class="pf-v6-c-empty-state__body"
      data-ouia-component-id="UnauthorizedAccess-body"
    >
      Contact your system administrator(s) for more information.
    </div>
    <div
      class="pf-v6-c-empty-state__footer"
      data-ouia-component-id="UnauthorizedAccess-footer"
    >
      <a
        aria-disabled="false"
        class="pf-v6-c-button pf-m-primary"
        data-ouia-component-id="UnauthorizedAccess-home-button"
        data-ouia-component-type="PF6/Button"
        data-ouia-safe="true"
        href="."
      >
        <span
          class="pf-v6-c-button__text"
        >
          Go to landing page
        </span>
      </a>
      <div
        class="pf-v6-c-empty-state__actions"
      />
    </div>
  </div>
</div>
`;

exports[`UnauthorizedAccess component should show custom actions 1`] = `
<div
  class="pf-v6-c-empty-state"
  data-ouia-component-id="UnauthorizedAccess"
>
  <div
    class="pf-v6-c-empty-state__content"
  >
    <div
      class="pf-v6-c-empty-state__header"
    >
      <div
        class="pf-v6-c-empty-state__icon"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 448 512"
          width="1em"
        >
          <path
            d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
          />
        </svg>
      </div>
      <div
        class="pf-v6-c-empty-state__title"
      >
        <h5
          class="pf-v6-c-empty-state__title-text"
        >
          You do not have access to Foo
        </h5>
      </div>
    </div>
    <div
      class="pf-v6-c-empty-state__body"
      data-ouia-component-id="UnauthorizedAccess-body"
    >
      Contact your system administrator(s) for more information.
    </div>
    <div
      class="pf-v6-c-empty-state__footer"
      data-ouia-component-id="UnauthorizedAccess-footer"
    >
      <div
        class="pf-v6-c-empty-state__actions"
      >
        <button
          id="action-one"
        >
          1
        </button>
      </div>
      <div
        class="pf-v6-c-empty-state__actions"
      >
        <div
          class="pf-v6-c-empty-state__actions"
        >
          <button
            id="action-one"
          >
            2
          </button>
          <button
            id="action-one"
          >
            3
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`UnauthorizedAccess component should show custom body text 1`] = `
<div
  class="pf-v6-c-empty-state"
  data-ouia-component-id="UnauthorizedAccess"
>
  <div
    class="pf-v6-c-empty-state__content"
  >
    <div
      class="pf-v6-c-empty-state__header"
    >
      <div
        class="pf-v6-c-empty-state__icon"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 448 512"
          width="1em"
        >
          <path
            d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
          />
        </svg>
      </div>
      <div
        class="pf-v6-c-empty-state__title"
      >
        <h5
          class="pf-v6-c-empty-state__title-text"
        >
          You do not have access to Foo
        </h5>
      </div>
    </div>
    <div
      class="pf-v6-c-empty-state__body"
      data-ouia-component-id="UnauthorizedAccess-body"
    >
      Some text
    </div>
    <div
      class="pf-v6-c-empty-state__footer"
      data-ouia-component-id="UnauthorizedAccess-footer"
    >
      <a
        aria-disabled="false"
        class="pf-v6-c-button pf-m-primary"
        data-ouia-component-id="UnauthorizedAccess-home-button"
        data-ouia-component-type="PF6/Button"
        data-ouia-safe="true"
        href="."
      >
        <span
          class="pf-v6-c-button__text"
        >
          Go to landing page
        </span>
      </a>
      <div
        class="pf-v6-c-empty-state__actions"
      />
    </div>
  </div>
</div>
`;

exports[`UnauthorizedAccess component should show custom title 1`] = `
<div
  class="pf-v6-c-empty-state"
  data-ouia-component-id="UnauthorizedAccess"
>
  <div
    class="pf-v6-c-empty-state__content"
  >
    <div
      class="pf-v6-c-empty-state__header"
    >
      <div
        class="pf-v6-c-empty-state__icon"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 448 512"
          width="1em"
        >
          <path
            d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
          />
        </svg>
      </div>
      <div
        class="pf-v6-c-empty-state__title"
      >
        <h5
          class="pf-v6-c-empty-state__title-text"
        >
          Custom title
        </h5>
      </div>
    </div>
    <div
      class="pf-v6-c-empty-state__body"
      data-ouia-component-id="UnauthorizedAccess-body"
    >
      Contact your system administrator(s) for more information.
    </div>
    <div
      class="pf-v6-c-empty-state__footer"
      data-ouia-component-id="UnauthorizedAccess-footer"
    >
      <a
        aria-disabled="false"
        class="pf-v6-c-button pf-m-primary"
        data-ouia-component-id="UnauthorizedAccess-home-button"
        data-ouia-component-type="PF6/Button"
        data-ouia-safe="true"
        href="."
      >
        <span
          class="pf-v6-c-button__text"
        >
          Go to landing page
        </span>
      </a>
      <div
        class="pf-v6-c-empty-state__actions"
      />
    </div>
  </div>
</div>
`;

exports[`UnauthorizedAccess component should use custom icon 1`] = `
<div
  class="pf-v6-c-empty-state"
  data-ouia-component-id="UnauthorizedAccess"
>
  <div
    class="pf-v6-c-empty-state__content"
  >
    <div
      class="pf-v6-c-empty-state__header"
    >
      <div
        class="pf-v6-c-empty-state__icon"
      >
        <svg
          aria-hidden="true"
          class="pf-v6-svg"
          fill="currentColor"
          height="1em"
          role="img"
          viewBox="0 0 512 512"
          width="1em"
        >
          <path
            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
          />
        </svg>
      </div>
      <div
        class="pf-v6-c-empty-state__title"
      >
        <h5
          class="pf-v6-c-empty-state__title-text"
        >
          You do not have access to Foo
        </h5>
      </div>
    </div>
    <div
      class="pf-v6-c-empty-state__body"
      data-ouia-component-id="UnauthorizedAccess-body"
    >
      Contact your system administrator(s) for more information.
    </div>
    <div
      class="pf-v6-c-empty-state__footer"
      data-ouia-component-id="UnauthorizedAccess-footer"
    >
      <a
        aria-disabled="false"
        class="pf-v6-c-button pf-m-primary"
        data-ouia-component-id="UnauthorizedAccess-home-button"
        data-ouia-component-type="PF6/Button"
        data-ouia-safe="true"
        href="."
      >
        <span
          class="pf-v6-c-button__text"
        >
          Go to landing page
        </span>
      </a>
      <div
        class="pf-v6-c-empty-state__actions"
      />
    </div>
  </div>
</div>
`;



================================================
FILE: packages/module/src/UnavailableContent/index.ts
================================================
export { default } from './UnavailableContent';
export * from './UnavailableContent';



================================================
FILE: packages/module/src/UnavailableContent/UnavailableContent.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';  
import UnavailableContent from './UnavailableContent';

describe('Unavailable component', () => {
  it('should render with no link', () => {
    expect(render(<UnavailableContent />)).toMatchSnapshot();
  });

  it('should render with a link', () => {
    expect(render(<UnavailableContent statusPageUrl="https://www.patternfly.org" />)).toMatchSnapshot();
  });
  
});



================================================
FILE: packages/module/src/UnavailableContent/UnavailableContent.tsx
================================================
import React from 'react';
import { Button, EmptyState, EmptyStateBody, EmptyStateFooter, EmptyStateProps, EmptyStateStatus, EmptyStateVariant } from '@patternfly/react-core';
import { ExclamationCircleIcon } from '@patternfly/react-icons';

/** extends EmptyStateProps */
export interface UnavailableContentProps extends Omit<EmptyStateProps, 'children' | 'titleText' | 'bodyText'> {
  /** The URL that the status page link points to */
  statusPageUrl?: string;
  /** The text label for the link that points to the status page */
  statusPageLinkText?: React.ReactNode;
  /** The title for the unavailable content message */
  titleText?: React.ReactNode;
  /** The body text for the unavailable content message */
  bodyText?: React.ReactNode;
  /** Custom OUIA ID */
  ouiaId?: string | number;
}

const UnavailableContent: React.FunctionComponent<UnavailableContentProps> = ({ 
  statusPageUrl = '',
  statusPageLinkText = 'Status Page',
  titleText = 'This page is temporarily unavailable',
  bodyText = 'Try refreshing the page. If the problem persists, contact your organization administrator or visit our status page for known outages.',
  ouiaId = 'UnavailableContent',
  headingLevel = "h5",
  ...props 
}: UnavailableContentProps) => (
  <EmptyState headingLevel={headingLevel} status={EmptyStateStatus.danger} icon={ExclamationCircleIcon}  titleText={titleText} variant={EmptyStateVariant.lg} data-ouia-component-id={ouiaId} {...props}>
    <EmptyStateBody data-ouia-component-id={`${ouiaId}-body`}>
      {bodyText}
    </EmptyStateBody>
    <EmptyStateFooter data-ouia-component-id={`${ouiaId}-footer`}>
      <Button component='a' variant='primary' href={statusPageUrl} target="_blank" rel="noopener noreferrer" ouiaId={`${ouiaId}-link-button`}>
        {statusPageLinkText}
      </Button>
    </EmptyStateFooter>
  </EmptyState>
);

export default UnavailableContent;



================================================
FILE: packages/module/src/UnavailableContent/__snapshots__/UnavailableContent.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Unavailable component should render with a link 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="pf-v6-c-empty-state pf-m-lg pf-m-danger"
        data-ouia-component-id="UnavailableContent"
      >
        <div
          class="pf-v6-c-empty-state__content"
        >
          <div
            class="pf-v6-c-empty-state__header"
          >
            <div
              class="pf-v6-c-empty-state__icon"
            >
              <svg
                aria-hidden="true"
                class="pf-v6-svg"
                fill="currentColor"
                height="1em"
                role="img"
                viewBox="0 0 512 512"
                width="1em"
              >
                <path
                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                />
              </svg>
            </div>
            <div
              class="pf-v6-c-empty-state__title"
            >
              <h5
                class="pf-v6-c-empty-state__title-text"
              >
                This page is temporarily unavailable
              </h5>
            </div>
          </div>
          <div
            class="pf-v6-c-empty-state__body"
            data-ouia-component-id="UnavailableContent-body"
          >
            Try refreshing the page. If the problem persists, contact your organization administrator or visit our status page for known outages.
          </div>
          <div
            class="pf-v6-c-empty-state__footer"
            data-ouia-component-id="UnavailableContent-footer"
          >
            <a
              aria-disabled="false"
              class="pf-v6-c-button pf-m-primary"
              data-ouia-component-id="UnavailableContent-link-button"
              data-ouia-component-type="PF6/Button"
              data-ouia-safe="true"
              href="https://www.patternfly.org"
              rel="noopener noreferrer"
              target="_blank"
            >
              <span
                class="pf-v6-c-button__text"
              >
                Status Page
              </span>
            </a>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="pf-v6-c-empty-state pf-m-lg pf-m-danger"
      data-ouia-component-id="UnavailableContent"
    >
      <div
        class="pf-v6-c-empty-state__content"
      >
        <div
          class="pf-v6-c-empty-state__header"
        >
          <div
            class="pf-v6-c-empty-state__icon"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 512 512"
              width="1em"
            >
              <path
                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
              />
            </svg>
          </div>
          <div
            class="pf-v6-c-empty-state__title"
          >
            <h5
              class="pf-v6-c-empty-state__title-text"
            >
              This page is temporarily unavailable
            </h5>
          </div>
        </div>
        <div
          class="pf-v6-c-empty-state__body"
          data-ouia-component-id="UnavailableContent-body"
        >
          Try refreshing the page. If the problem persists, contact your organization administrator or visit our status page for known outages.
        </div>
        <div
          class="pf-v6-c-empty-state__footer"
          data-ouia-component-id="UnavailableContent-footer"
        >
          <a
            aria-disabled="false"
            class="pf-v6-c-button pf-m-primary"
            data-ouia-component-id="UnavailableContent-link-button"
            data-ouia-component-type="PF6/Button"
            data-ouia-safe="true"
            href="https://www.patternfly.org"
            rel="noopener noreferrer"
            target="_blank"
          >
            <span
              class="pf-v6-c-button__text"
            >
              Status Page
            </span>
          </a>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Unavailable component should render with no link 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="pf-v6-c-empty-state pf-m-lg pf-m-danger"
        data-ouia-component-id="UnavailableContent"
      >
        <div
          class="pf-v6-c-empty-state__content"
        >
          <div
            class="pf-v6-c-empty-state__header"
          >
            <div
              class="pf-v6-c-empty-state__icon"
            >
              <svg
                aria-hidden="true"
                class="pf-v6-svg"
                fill="currentColor"
                height="1em"
                role="img"
                viewBox="0 0 512 512"
                width="1em"
              >
                <path
                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                />
              </svg>
            </div>
            <div
              class="pf-v6-c-empty-state__title"
            >
              <h5
                class="pf-v6-c-empty-state__title-text"
              >
                This page is temporarily unavailable
              </h5>
            </div>
          </div>
          <div
            class="pf-v6-c-empty-state__body"
            data-ouia-component-id="UnavailableContent-body"
          >
            Try refreshing the page. If the problem persists, contact your organization administrator or visit our status page for known outages.
          </div>
          <div
            class="pf-v6-c-empty-state__footer"
            data-ouia-component-id="UnavailableContent-footer"
          >
            <a
              aria-disabled="false"
              class="pf-v6-c-button pf-m-primary"
              data-ouia-component-id="UnavailableContent-link-button"
              data-ouia-component-type="PF6/Button"
              data-ouia-safe="true"
              href=""
              rel="noopener noreferrer"
              target="_blank"
            >
              <span
                class="pf-v6-c-button__text"
              >
                Status Page
              </span>
            </a>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="pf-v6-c-empty-state pf-m-lg pf-m-danger"
      data-ouia-component-id="UnavailableContent"
    >
      <div
        class="pf-v6-c-empty-state__content"
      >
        <div
          class="pf-v6-c-empty-state__header"
        >
          <div
            class="pf-v6-c-empty-state__icon"
          >
            <svg
              aria-hidden="true"
              class="pf-v6-svg"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 512 512"
              width="1em"
            >
              <path
                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
              />
            </svg>
          </div>
          <div
            class="pf-v6-c-empty-state__title"
          >
            <h5
              class="pf-v6-c-empty-state__title-text"
            >
              This page is temporarily unavailable
            </h5>
          </div>
        </div>
        <div
          class="pf-v6-c-empty-state__body"
          data-ouia-component-id="UnavailableContent-body"
        >
          Try refreshing the page. If the problem persists, contact your organization administrator or visit our status page for known outages.
        </div>
        <div
          class="pf-v6-c-empty-state__footer"
          data-ouia-component-id="UnavailableContent-footer"
        >
          <a
            aria-disabled="false"
            class="pf-v6-c-button pf-m-primary"
            data-ouia-component-id="UnavailableContent-link-button"
            data-ouia-component-type="PF6/Button"
            data-ouia-safe="true"
            href=""
            rel="noopener noreferrer"
            target="_blank"
          >
            <span
              class="pf-v6-c-button__text"
            >
              Status Page
            </span>
          </a>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: packages/module/src/WarningModal/index.ts
================================================
export { default } from './WarningModal';
export * from './WarningModal';



================================================
FILE: packages/module/src/WarningModal/WarningModal.test.tsx
================================================
import React from 'react';
import { render } from '@testing-library/react';
import WarningModal from './WarningModal';

describe('WarningModal component', () => {
  const initialProps = {
    title: 'Unsaved changes',
    onClose: () => null,
    onConfirm: () => null,
    confirmCheckMessage: 'hi there',
  };
  
  it('should render', () => {
    const container = render(<WarningModal isOpen={true} {...initialProps}>Warning modal content</WarningModal>);
    expect(container).toMatchSnapshot();
  });
});


================================================
FILE: packages/module/src/WarningModal/WarningModal.tsx
================================================
import React, { ReactNode, useState } from 'react';
import { Button, ButtonVariant, Checkbox, Flex, FlexItem, Stack, StackItem, TextInput, TextInputProps } from '@patternfly/react-core';
import { ModalProps, Modal, ModalVariant } from '@patternfly/react-core/deprecated';

/** extends ModalProps */
export interface WarningModalProps extends Omit<ModalProps, 'ref'> {
  /** Callback for the confirm action button. */
  onConfirm?: () => void;
  /** Custom label for the confirm action button */
  confirmButtonLabel?: React.ReactNode;
  /** Custom label for the cancel action button */
  cancelButtonLabel?: React.ReactNode;
  /** Whether modal requires a checkbox before confirming */
  withCheckbox?: boolean;
  /** Custom checkbox label */
  checkboxLabel?: ReactNode;
  /** Visual variant of the confirm button */
  confirmButtonVariant?: ButtonVariant;
  /** Custom OUIA ID */
  ouiaId?: string | number;
  /** Confirmation text input props */
  confirmationInputProps?: TextInputProps;
  /** Text the user should type to confirm selection when using confirmation input */
  confirmationText?: string;
  /** Label for the text confirmation input */
  confirmationInputLabel?: ReactNode;
}

const WarningModal: React.FunctionComponent<WarningModalProps> = ({
  isOpen,
  onConfirm,
  onClose,
  children,
  confirmButtonLabel = 'Confirm',
  cancelButtonLabel = 'Cancel',
  variant = ModalVariant.small,
  titleIconVariant = 'warning',
  withCheckbox = false,
  checkboxLabel='I understand that this action cannot be undone',
  confirmButtonVariant = ButtonVariant.primary,
  ouiaId = 'WarningModal',
  confirmationInputProps,
  confirmationText,
  confirmationInputLabel = <>Type <strong>{confirmationText} </strong> to confirm the action:</>,
  ...props
}: WarningModalProps) => {
  const [ checked, setChecked ] = useState(false);
  const [ inputValue, setInputValue ] = React.useState('');

  const deleteNameSanitized = React.useMemo(() => confirmationText?.trim().replace(/\s+/g, ' '), [ confirmationText ]);

  const textConfirmed = confirmationInputProps ? inputValue.trim() === deleteNameSanitized : true;

  const isConfirmButtonDisabled = React.useMemo(() => {
    if (withCheckbox) {
      return !checked || (confirmationInputProps && !textConfirmed);
    }
    return confirmationInputProps ? !textConfirmed : false;
  }, [ checked, textConfirmed, withCheckbox, confirmationInputProps ]);

  return (
    <Modal
      variant={variant}
      isOpen={isOpen}
      onClose={onClose}
      onEscapePress={onClose}
      titleIconVariant={titleIconVariant}
      actions={[
        <Button
          ouiaId={`${ouiaId}-confirm-button`}
          key="confirm"
          variant={confirmButtonVariant}
          onClick={() => {
            onConfirm?.();
            setChecked(false);
          }}
          isDisabled={isConfirmButtonDisabled}
        >
          {confirmButtonLabel}
        </Button>,
        <Button
          ouiaId={`${ouiaId}-cancel-button`}
          key="cancel"
          variant={ButtonVariant.link}
          onClick={onClose}
        >
          {cancelButtonLabel}
        </Button>,
      ]}
      ouiaId={ouiaId}
      {...props}
    >
      <Stack hasGutter>
        <StackItem>{children}</StackItem>
        <StackItem>
          {confirmationText ? (
            <Flex direction={{ default: 'column' }} spaceItems={{ default: 'spaceItemsSm' }}>
              <FlexItem>
                {confirmationInputLabel}
              </FlexItem>
              <TextInput
                ouiaId={`${ouiaId}-confirmation-text-input`}
                value={inputValue}
                onChange={(_e, value) => setInputValue(value)}
                {...{ type: 'text', isRequired: true, ...confirmationInputProps }}
              />
            </Flex>
          ) : null}          
        </StackItem>
        <StackItem>
          {withCheckbox ? (
            <Checkbox
              isChecked={checked}
              onChange={(_event, value) => setChecked(value)}
              label={checkboxLabel}
              id="warning-modal-check"
              className="pf-v6-u-mt-lg"
              ouiaId={`${ouiaId}-confirm-checkbox`}
            />
          ) : null}
        </StackItem>
      </Stack>
    </Modal>
  )

};


export default WarningModal;



================================================
FILE: packages/module/src/WarningModal/__snapshots__/WarningModal.test.tsx.snap
================================================
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WarningModal component should render 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="pf-v6-c-backdrop__open"
  >
    <div
      aria-hidden="true"
    />
    <div
      class="pf-v6-c-backdrop"
      id="pf-modal-part-3"
    >
      <div
        class="pf-v6-l-bullseye"
      >
        <div
          aria-describedby="pf-modal-part-2"
          aria-labelledby="pf-modal-part-1"
          aria-modal="true"
          class="pf-v6-c-modal-box pf-m-warning pf-m-sm"
          data-ouia-component-id="WarningModal"
          data-ouia-component-type="PF6/ModalContent"
          data-ouia-safe="true"
          id="pf-modal-part-0"
          role="dialog"
        >
          <div
            class="pf-v6-c-modal-box__close"
          >
            <button
              aria-disabled="false"
              aria-label="Close"
              class="pf-v6-c-button pf-m-plain"
              data-ouia-component-id="WarningModal-ModalBoxCloseButton"
              data-ouia-component-type="PF6/Button"
              data-ouia-safe="true"
              type="button"
            >
              <span
                class="pf-v6-c-button__icon"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 352 512"
                  width="1em"
                >
                  <path
                    d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                  />
                </svg>
              </span>
            </button>
          </div>
          <header
            class="pf-v6-c-modal-box__header"
          >
            <h1
              class="pf-v6-c-modal-box__title pf-m-icon"
              id="pf-modal-part-1"
            >
              <span
                class="pf-v6-c-modal-box__title-icon"
              >
                <svg
                  aria-hidden="true"
                  class="pf-v6-svg"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  viewBox="0 0 576 512"
                  width="1em"
                >
                  <path
                    d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                  />
                </svg>
              </span>
              <span
                class="pf-v6-screen-reader"
              >
                Warning alert:
              </span>
              <span
                class="pf-v6-c-modal-box__title-text"
              >
                Unsaved changes
              </span>
            </h1>
          </header>
          <div
            class="pf-v6-c-modal-box__body"
            confirmcheckmessage="hi there"
            id="pf-modal-part-2"
          >
            <div
              class="pf-v6-l-stack pf-m-gutter"
            >
              <div
                class="pf-v6-l-stack__item"
              >
                Warning modal content
              </div>
              <div
                class="pf-v6-l-stack__item"
              />
              <div
                class="pf-v6-l-stack__item"
              />
            </div>
          </div>
          <footer
            class="pf-v6-c-modal-box__footer"
          >
            <button
              aria-disabled="false"
              class="pf-v6-c-button pf-m-primary"
              data-ouia-component-id="WarningModal-confirm-button"
              data-ouia-component-type="PF6/Button"
              data-ouia-safe="true"
              type="button"
            >
              <span
                class="pf-v6-c-button__text"
              >
                Confirm
              </span>
            </button>
            <button
              aria-disabled="false"
              class="pf-v6-c-button pf-m-link"
              data-ouia-component-id="WarningModal-cancel-button"
              data-ouia-component-type="PF6/Button"
              data-ouia-safe="true"
              type="button"
            >
              <span
                class="pf-v6-c-button__text"
              >
                Cancel
              </span>
            </button>
          </footer>
        </div>
      </div>
    </div>
  </body>,
  "container": <div
    aria-hidden="true"
  />,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;



================================================
FILE: results/my-test-output-084c87f9083679454b20e52eaabc4c94.xml
================================================
<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="5.960" tests="1" failures="0">
  <testsuite name="Root Suite" timestamp="2024-03-05T19:18:11" tests="0" file="cypress/e2e/CloseButton.spec.cy.ts" time="0.000" failures="0">
  </testsuite>
  <testsuite name="Test the close button" timestamp="2024-03-05T19:18:11" tests="1" time="5.948" failures="0">
    <testcase name="Test the close button passes" time="4.659" classname="passes">
    </testcase>
  </testsuite>
</testsuites>


================================================
FILE: scripts/build-packages.js
================================================
const fse = require('fs-extra');
const { globSync } = require('glob');
const path = require('path');

const root = process.cwd();

const foldersBlackList = [ '__snapshots__', '__mocks__' ];
const sourceFiles = globSync(`${root}/src/*/`)
  .filter((item) => !foldersBlackList.some((name) => item.includes(name)))
  .map((name) => name.replace(/\/$/, ''));
const indexTypings = globSync(`${root}/src/index.d.ts`);

async function copyTypings(files, dest) {
  const cmds = [];
  files.forEach((file) => {
    const fileName = file.split('/').pop();
    cmds.push(fse.copyFile(file, `${dest}/${fileName}`));
  });
  return Promise.all(cmds);
}

async function createPackage(file, forceTypes) {
  const fileName = file.split('/').pop();
  const esmSource = globSync(`${root}/esm/${fileName}/**/index.js`)[0];
  /**
   * Prevent creating package.json for directories with no JS files (like CSS directories)
   */
  if (!esmSource) {
    return;
  }

  const destFile = `${path.resolve(root, file.split('/src/').pop())}/package.json`;

  const esmRelative = path.relative(file.replace('/src', ''), esmSource);
  const content = {
    main: 'index.js',
    module: esmRelative,
  };
  const typings = globSync(`${root}/src/${fileName}/*.d.ts`);
  const cmds = [];
  if (forceTypes) {
    content.typings = 'index.d.ts';
  } else if (typings.length > 0) {
    const hasIndex = globSync(`${root}/src/${fileName}/index.d.ts`).length > 0;
    if (hasIndex) {
      content.typings = 'index.d.ts';
    }

    cmds.push(copyTypings(typings, `${root}/${fileName}`));
  }

  cmds.push(fse.writeJSON(destFile, content));

  return Promise.all(cmds);
}

async function generatePackages(files, forceTypes) {
  const cmds = files.map((file) => createPackage(file, forceTypes));
  return Promise.all(cmds);
}

async function run(files, forceTypes) {
  try {
    await generatePackages(files, forceTypes);
    if (indexTypings.length === 1) {
      copyTypings(indexTypings, root);
    }
  } catch (error) {
    // eslint-disable-next-line no-console
    console.error(error);
    process.exit(1);
  }
}

const forceTypes = !!process.argv.includes('--forceTypes');

run(sourceFiles, forceTypes);



================================================
FILE: .github/dependabot.yml
================================================
version: 2
updates:
  - package-ecosystem: npm
    directory: "/"
    schedule:
      interval: weekly
      day: tuesday
      time: "12:00"
      timezone: EST
    versioning-strategy: increase
    allow:
      - dependency-type: "all"
    ignore:
      - dependency-name: "*"
        update-types:
          - version-update:semver-major
    open-pull-requests-limit: 10
    reviewers:
      - aferd
      - epwinchell
      - InsaneZein
      - nicolethoen
      - dlabaj



================================================
FILE: .github/upload-preview.js
================================================
const fs = require('fs');
const path = require('path');
const surge = require('surge');
const publishFn = surge().publish();

(async () => {
  const { Octokit } = await import('@octokit/rest');
  const octokit = new Octokit({ auth: process.env.GH_PR_TOKEN });

  // From github actions
  const ghrepo = process.env.GITHUB_REPOSITORY || '';

  const owner = process.env.CIRCLE_PROJECT_USERNAME || ghrepo.split('/')[0]; // patternfly
  const repo = process.env.CIRCLE_PROJECT_REPONAME || ghrepo.split('/')[1];
  const prnum = process.env.CIRCLE_PR_NUMBER || process.env.GH_PR_NUM;
  const prbranch = process.env.CIRCLE_BRANCH || process.env.GITHUB_REF.split('/').pop();

  const uploadFolder = process.argv[2];
  if (!uploadFolder) {
    console.log('Usage: upload-preview uploadFolder');
    process.exit(1);
  }

  const uploadFolderName = path.basename(uploadFolder);
  let uploadURL = `${repo}-${prnum ? `pr-component-groups-${prnum}` : prbranch}`.replace(/[\/|\.]/g, '-');

  switch(uploadFolderName) {
    case 'coverage':
      uploadURL += '-a11y.surge.sh';
      break;
    case 'public':
      if (!prnum && prbranch === 'main') {
        uploadURL = 'https://pf-extensions.surge.sh/';
      } else {
        uploadURL += '.surge.sh';
      }
      break;
    default:
      uploadURL += `-${uploadFolderName}`;
      uploadURL += '.surge.sh';
      break;
  }

  publishFn({
    project: uploadFolder,
    p: uploadFolder,
    domain: uploadURL,
    d: uploadURL,
    e: 'https://surge.surge.sh',
    endpoint: 'https://surge.surge.sh'
  });

  function tryAddComment(comment, commentBody) {
    if (!commentBody.includes(comment)) {
      return comment;
    }
    return '';
  }

  if (prnum) {
    const comments = await octokit.issues.listComments({
      owner,
      repo,
      issue_number: prnum
    }).then(res => res.data);

    let commentBody = '';
    const existingComment = comments.find(comment => comment.user.login === 'patternfly-build');
    if (existingComment) {
      commentBody += existingComment.body.trim();
      commentBody += '\n\n';
    }

    if (uploadFolderName === 'public') {
      commentBody += tryAddComment(`Preview: https://${uploadURL}`, commentBody);
    } else if (uploadFolderName === 'coverage') {
      commentBody += tryAddComment(`A11y report: https://${uploadURL}`, commentBody);
    }

    if (existingComment) {
      await octokit.issues.updateComment({
        owner,
        repo,
        comment_id: existingComment.id,
        body: commentBody
      });
      console.log('Updated comment!');
    } else {
      await octokit.issues.createComment({
        owner,
        repo,
        issue_number: prnum,
        body: commentBody
      });
      console.log('Created comment!');
    }
  }
})();



================================================
FILE: .github/workflows/build-lint-test.yml
================================================
name: build-lint-test
on:
  workflow_call:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_PR_NUM: ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v4
      - run: |
          if [[ ! -z "${GH_PR_NUM}" ]]; then 
            echo "Checking out PR"
            git fetch origin pull/$GH_PR_NUM/head:tmp
            git checkout tmp
          fi
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: actions/cache@v4
        id: npm-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
          key: ${{ runner.os }}-npm-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - run: npm install --frozen-lockfile
        if: steps.npm-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v4
        id: dist
        name: Cache dist
        with:
          path: |
            packages/*/dist
          key: ${{ runner.os }}-dist-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json', 'package.json', 'packages/*/*', '!packages/*/dist', '!packages/*/node_modules') }}
      - name: Build dist
        run: npm run build
        if: steps.dist.outputs.cache-hit != 'true'
  lint:
    runs-on: ubuntu-latest
    env:
      GH_PR_NUM: ${{ github.event.number }}
    needs: build
    steps:
      - uses: actions/checkout@v4
      - run: |
          if [[ ! -z "${GH_PR_NUM}" ]]; then 
            echo "Checking out PR"
            git fetch origin pull/$GH_PR_NUM/head:tmp
            git checkout tmp
          fi
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: actions/cache@v4
        id: npm-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - run: npm install --frozen-lockfile
        if: steps.npm-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v4
        id: lint-cache
        name: Load lint cache
        with:
          path: '.eslintcache'
          key: ${{ runner.os }}-lint-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - name: ESLint
        run: npm run lint:js
      - name: MDLint
        run: npm run lint:md
  test_jest:
    runs-on: ubuntu-latest
    env:
      GH_PR_NUM: ${{ github.event.number }}
    needs: build
    steps:
      - uses: actions/checkout@v4
      # Yes, we really want to checkout the PR
      - run: |
          if [[ ! -z "${GH_PR_NUM}" ]]; then 
            echo "Checking out PR"
            git fetch origin pull/$GH_PR_NUM/head:tmp
            git checkout tmp
          fi
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: actions/cache@v4
        id: npm-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
           ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - run: npm install --frozen-lockfile
        if: steps.npm-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v4
        id: dist
        name: Cache dist
        with:
          path: |
            packages/*/dist
            packages/react-styles/css
          key: ${{ runner.os }}-dist-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json', 'package.json', 'packages/*/*', '!packages/*/dist', '!packages/*/node_modules') }}
      - name: Build dist
        run: npm run build
        if: steps.dist.outputs.cache-hit != 'true'
      - name: PF4 Jest Tests
        run: npm run test --maxWorkers=2
  test_a11y:
    runs-on: ubuntu-latest
    env:
      GH_PR_NUM: ${{ github.event.number }}
    needs: build
    steps:
      - uses: actions/checkout@v4
      # Yes, we really want to checkout the PR
      - run: |
          if [[ ! -z "${GH_PR_NUM}" ]]; then 
            echo "Checking out PR"
            git fetch origin pull/$GH_PR_NUM/head:tmp
            git checkout tmp
          fi
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: actions/cache@v4
        id: npm-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
           ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - run: npm install --frozen-lockfile
        if: steps.npm-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v4
        id: dist
        name: Cache dist
        with:
          path: |
            packages/*/dist
            packages/react-styles/css
          key: ${{ runner.os }}-dist-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json', 'package.json', 'packages/*/*', '!packages/*/dist', '!packages/*/node_modules') }}
      - name: Build dist
        run: npm run build
        if: steps.dist.outputs.cache-hit != 'true'
      - name: Build docs
        run: npm run build:docs
      - run: npx puppeteer browsers install chrome
        name: Install Chrome for Puppeteer
      - name: A11y tests
        run: npm run serve:docs & npm run test:a11y
  test_cypress:
    runs-on: ubuntu-latest
    env:
      GH_PR_NUM: ${{ github.event.number }}
    needs: build
    steps:
      - uses: actions/checkout@v4
      # Yes, we really want to checkout the PR
      - run: |
          if [[ ! -z "${GH_PR_NUM}" ]]; then 
            echo "Checking out PR"
            git fetch origin pull/$GH_PR_NUM/head:tmp
            git checkout tmp
          fi
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: actions/cache@v4
        id: npm-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
           ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - run: npm install --frozen-lockfile
        if: steps.npm-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v4
        id: dist
        name: Cache dist
        with:
          path: |
            packages/*/dist
            packages/react-styles/css
          key: ${{ runner.os }}-dist-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json', 'package.json', 'packages/*/*', '!packages/*/dist', '!packages/*/node_modules') }}
      - name: Build dist
        run: npm run build
      - name: Run integration tests
        run: npm run cypress:run:ci



================================================
FILE: .github/workflows/build.yml
================================================
name: build
on:
  workflow_call:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_PR_NUM: ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v4
      - run: |
          if [[ ! -z "${GH_PR_NUM}" ]]; then 
            echo "Checking out PR"
            git fetch origin pull/$GH_PR_NUM/head:tmp
            git checkout tmp
          fi
      - uses: actions/cache@v4
        id: setup-cache
        name: Cache setup
        with:
          path: |
            README.md
            package.json
            .tmplr.yml
            packages/*/package.json
            packages/*/patternfly-docs/content/**
            packages/*/patternfly-docs/generated/**
          key: ${{ runner.os }}-setup-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package.json', 'packages/module/package.json') }}
      - name: Run build script
        run: ./devSetup.sh
        shell: bash
        if: steps.setup-cache.outputs.cache-hit != 'true'
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: actions/cache@v4
        id: npm-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - run: npm install --frozen-lockfile
        if: steps.npm-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v4
        id: dist
        name: Cache dist
        with:
          path: |
            packages/*/dist
          key: ${{ runner.os }}-dist-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json', 'package.json', 'packages/*/*', '!packages/*/dist', '!packages/*/node_modules') }}
      - name: Build dist
        run: npm run build
        if: steps.dist.outputs.cache-hit != 'true'


================================================
FILE: .github/workflows/check-pr.yml
================================================
name: check-pr
on:
  pull_request:
    branches:
      - main
      - v5
jobs:
  call-build-lint-test-workflow:
    uses: ./.github/workflows/build-lint-test.yml



================================================
FILE: .github/workflows/extensions.yml
================================================
name: Add new issues to PatternFly Extensions project

on:
  issues:
    types:
      - opened

jobs:
  add-to-project:
    name: Add issue to project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/add-to-project@v0.3.0
        with:
          project-url: https://github.com/orgs/patternfly/projects/7
          github-token: ${{ secrets.GH_PROJECTS }}
  label-issue:
    runs-on: ubuntu-latest
    steps:
    - name: Team Membership Checker
      # You may pin to the exact commit or the version.
      # uses: TheModdingInquisition/actions-team-membership@a69636a92bc927f32c3910baac06bacc949c984c
      uses: TheModdingInquisition/actions-team-membership@v1.0
      with:
        # Repository token. GitHub Action token is used by default(recommended). But you can also use the other token(e.g. personal access token).
        token: ${{ secrets.GH_READ_ORG_TOKEN }}
        # The team to check for.
        team: 'frequent-flyers'
        # The organization of the team to check for. Defaults to the context organization.
        organization: 'patternfly'
        # If the action should exit if the user is not part of the team.
        exit: true
              
    - name: Add label if user is a team member
      run: |
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/labels \
          -d '{"labels":["PF Team"]}'



================================================
FILE: .github/workflows/pr-preview.yml
================================================
### WARNING -- this file was generated by generate-workflows
name: pr-preview
on: pull_request_target
jobs:
  build-upload:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
      GH_PR_TOKEN: ${{ secrets.GH_PR_TOKEN }}
      GH_PR_NUM:   ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v4
      # Yes, we really want to checkout the PR
      - run: |
          git fetch origin pull/$GH_PR_NUM/head:tmp
          git checkout tmp

      - run: |
          git rev-parse origin/main
          git rev-parse HEAD
          git rev-parse origin/main..HEAD
          git log origin/main..HEAD --format="%b"

      # Yes, we really want to checkout the PR
      # Injected by generate-workflows.js
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: actions/cache@v4
        id: npm-cache
        name: Load npm deps from cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - run: npm install --frozen-lockfile --legacy-peer-deps
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - run: npm run build
        name: Build component groups
      - uses: actions/cache@v4
        id: docs-cache
        name: Load webpack cache
        with:
          path: '.cache'
          key: ${{ runner.os }}-v4-${{ hashFiles('yarn.lock') }}
      - run: npm run build:docs
        name: Build docs
      - run: node .github/upload-preview.js packages/module/public
        name: Upload docs
        if: always()
      - run: npx puppeteer browsers install chrome
        name: Install Chrome for Puppeteer
      - run: npm run serve:docs & npm run test:a11y
        name: a11y tests
      - run: node .github/upload-preview.js packages/module/coverage
        name: Upload a11y report
        if: always()



================================================
FILE: .github/workflows/promote.yml
================================================
name: promote
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:        
      - v6.*
jobs:
  build-and-promote:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Build for promotion
        run: yarn install --frozen-lockfile && yarn build
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - name: GitHub Tag Name example
        run: |
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "Tag name from github.ref_name: ${{  github.ref_name }}"
      - name: Manual publish
        run: |
          cd packages/module
          npm version ${{ github.ref_name }} --git-tag-version false
          npm publish --tag=latest



================================================
FILE: .github/workflows/release.yml
================================================
name: release
on:
  push:
    branches:
      - main
      - v5
jobs:
  call-build-lint-test-workflow:
    uses: ./.github/workflows/build-lint-test.yml
  deploy:
    runs-on: ubuntu-latest
    needs: [call-build-lint-test-workflow]
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: actions/cache@v4
        id: npm-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
           ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - run: npm install --frozen-lockfile
        if: steps.npm-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v4
        id: dist
        name: Cache dist
        with:
          path: |
            packages/*/dist
            packages/react-styles/css
          key: ${{ runner.os }}-dist-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json', 'package.json', 'packages/*/*', '!packages/*/dist', '!packages/*/node_modules') }}
      - name: Build dist
        run: npm run build
        if: steps.dist.outputs.cache-hit != 'true'
      - name: Release to NPM
        run: cd packages/module && npx semantic-release@19.0.5


